{
    "docs": [
        {
            "location": "/", 
            "text": "Branch Deep Linking\n\n\n\n\nURLs can navigate to your website, but not to your app. \n\n\nBranch deep links allow users to install, open, and navigate to content inside your app.\n\n\nBranch increases discovery of your app by sharing its content, converting web users to app users, enabling user-to-user sharing, personalizing user experiences, tracking users, tracking referrals, tracking campaigns, tracking conversions, and increasing overall engagement.\n\n\n\n\n\n  \n\n\n\n\n\nGetting started\n\n\n\n\n\n\nBasic setup\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntegrate your app\n\n\nCreate and share deep links\n\n\nTrack analytics\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConvert app users\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLinks to app\n\n\nWebsite to app\n\n\nDesktop to app\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEmails to app\n\n\nAds to app\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShare app content\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInvites\n\n\nReferrals\n\n\nContent Navigation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrack app engagement\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLink\n\n\nUsers\n\n\nContent\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCampaigns\n\n\nAttribution\n\n\nRevenue", 
            "title": "Features"
        }, 
        {
            "location": "/#branch-deep-linking", 
            "text": "URLs can navigate to your website, but not to your app.   Branch deep links allow users to install, open, and navigate to content inside your app.  Branch increases discovery of your app by sharing its content, converting web users to app users, enabling user-to-user sharing, personalizing user experiences, tracking users, tracking referrals, tracking campaigns, tracking conversions, and increasing overall engagement.", 
            "title": "Branch Deep Linking"
        }, 
        {
            "location": "/#getting-started", 
            "text": "", 
            "title": "Getting started"
        }, 
        {
            "location": "/#basic-setup", 
            "text": "Integrate your app  Create and share deep links  Track analytics", 
            "title": "Basic setup"
        }, 
        {
            "location": "/#convert-app-users", 
            "text": "Links to app  Website to app  Desktop to app         Emails to app  Ads to app", 
            "title": "Convert app users"
        }, 
        {
            "location": "/#share-app-content", 
            "text": "Invites  Referrals  Content Navigation", 
            "title": "Share app content"
        }, 
        {
            "location": "/#track-app-engagement", 
            "text": "Link  Users  Content         Campaigns  Attribution  Revenue", 
            "title": "Track app engagement"
        }, 
        {
            "location": "/pages/apps/ios/", 
            "text": "Integrate Branch\n\n\n\n\n\n\nConfigure Branch\n\n\n\n\n\n\nComplete your \nBranch Dashboard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure bundle identifier\n\n\n\n\n\n\nBundle Id matches \nBranch Dashboard\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure associated domains\n\n\n\n\n\n\nAdd \nBranch Dashboard\n values\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure entitlements\n\n\n\n\n\n\nConfirm entitlements are within target\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure info.pList\n\n\n\n\n\n\nAdd \nBranch Dashboard\n values\n\n\n\n\n\n\n\n\n\n\n\n\nConfirm app prefix\n\n\n\n\n\n\nFrom your \nApple Developer Account\n\n\n\n\n\n\n\n\n\n\n\n\nInstall Branch\n\n\n\n\n\n\nOption 1: \nCocoaPods\n\n\nplatform :ios, \n8.0\n\n\ntarget \nAPP_NAME\n \ndo\n\n  \n# if swift\n\n  use_frameworks!\n\n\n  pod \nBranch\n\n\nend\n\n\n\n\n\n\n\n\nOption 2: \nCarthage\n\n\ngithub \nBranchMetrics/ios-branch-deep-linking\n\n\n\n\n\n\n\n\n\nOption 3: Manually install \nsource code\n and dependencies\n\n\n\n\n\n\n\n\n\n\n\n\nInitialize Branch\n\n\n\n\n\n\nSwift 3.0\n\n\nimport\n \nUIKit\n\n\nimport\n \nBranch\n\n\n\n\n@UIApplicationMain\n\n\nclass\n \nAppDelegate\n:\n \nUIResponder\n,\n \nUIApplicationDelegate\n \n{\n\n\n\nvar\n \nwindow\n:\n \nUIWindow\n?\n\n\n\nfunc\n \napplication\n(\n_\n \napplication\n:\n \nUIApplication\n,\n \ndidFinishLaunchingWithOptions\n \nlaunchOptions\n:\n \n[\nUIApplicationLaunchOptionsKey\n:\n \nAny\n]?)\n \n-\n \nBool\n \n{\n\n\n  \n// for debug and development only\n\n\n  \nBranch\n.\ngetInstance\n().\nsetDebug\n()\n \n\n  \n// listener for Branch Deep Link data\n\n\n  \nBranch\n.\ngetInstance\n().\ninitSession\n(\nlaunchOptions\n:\n \nlaunchOptions\n)\n \n{\n \n(\nparams\n,\n \nerror\n)\n \nin\n\n\n    \n// do stuff with deep link data (nav to page, display content, etc)\n\n\n    \nprint\n(\nparams\n \nas\n?\n \n[\nString\n:\n \nAnyObject\n]\n \n??\n \n{})\n\n\n  \n}\n\n\n  \nreturn\n \ntrue\n\n\n}\n\n\n\nfunc\n \napplication\n(\n_\n \napp\n:\n \nUIApplication\n,\n \nopen\n \nurl\n:\n \nURL\n,\n \noptions\n:\n \n[\nUIApplicationOpenURLOptionsKey\n \n:\n \nAny\n]\n \n=\n \n[:])\n \n-\n \nBool\n \n{\n\n\n  \n// handler for URI Schemes (depreciated in iOS 9.2+, but still used by some Google apps)\n\n\n  \nBranch\n.\ngetInstance\n().\napplication\n(\napp\n,\n \nopen\n:\n \nurl\n,\n \noptions\n:\n \noptions\n)\n\n\n  \nreturn\n \ntrue\n\n\n}\n\n\n\nfunc\n \napplication\n(\n_\n \napplication\n:\n \nUIApplication\n,\n \ncontinue\n \nuserActivity\n:\n \nNSUserActivity\n,\n \nrestorationHandler\n:\n \n@\nescaping\n \n([\nAny\n]?)\n \n-\n \nVoid\n)\n \n-\n \nBool\n \n{\n\n\n  \n// handler for Universal Links\n\n\n  \nBranch\n.\ngetInstance\n().\ncontinue\n(\nuserActivity\n)\n\n\n  \nreturn\n \ntrue\n\n\n}\n\n\n\nfunc\n \napplication\n(\n_\n \napplication\n:\n \nUIApplication\n,\n \ndidReceiveRemoteNotification\n \nuserInfo\n:\n \n[\nAnyHashable\n \n:\n \nAny\n],\n \nfetchCompletionHandler\n \ncompletionHandler\n:\n \n@\nescaping\n \n(\nUIBackgroundFetchResult\n)\n \n-\n \nVoid\n)\n \n{\n\n\n  \n// handler for Push Notifications\n\n\n  \nBranch\n.\ngetInstance\n().\nhandlePushNotification\n(\nuserInfo\n)\n\n\n}\n\n\n\n\n\n\n\n\n\nObjective-C\n\n\n#import \nAppDelegate.h\n\n\n#import \nBranch/Branch.h\n\n\n\n\n@interface\n \nAppDelegate\n \n()\n\n\n\n@end\n\n\n\n@implementation\n \nAppDelegate\n\n\n\n-\n \n(\nBOOL\n)\napplication:\n(\nUIApplication\n \n*\n)\napplication\n \ndidFinishLaunchingWithOptions:\n(\nNSDictionary\n \n*\n)\nlaunchOptions\n \n{\n\n\n  \n// for debug and development only\n\n\n  \n[[\nBranch\n \ngetInstance\n]\n \nsetDebug\n];\n \n\n  \n// listener for Branch Deep Link data\n\n\n  \n[[\nBranch\n \ngetInstance\n]\n \ninitSessionWithLaunchOptions\n:\nlaunchOptions\n \nandRegisterDeepLinkHandler\n:\n^\n(\nNSDictionary\n \n*\n \n_Nonnull\n \nparams\n,\n \nNSError\n \n*\n \n_Nullable\n \nerror\n)\n \n{\n\n\n    \n// do stuff with deep link data (nav to page, display content, etc)\n\n\n    \nNSLog\n(\n@\n%@\n,\n \nparams\n);\n\n\n  \n}];\n\n\n  \nreturn\n \nYES\n;\n\n\n}\n\n\n\n-\n \n(\nBOOL\n)\napplication:\n(\nUIApplication\n \n*\n)\napp\n \nopenURL:\n(\nNSURL\n \n*\n)\nurl\n \noptions:\n(\nNSDictionary\nUIApplicationOpenURLOptionsKey\n,\nid\n \n*\n)\noptions\n \n{\n\n\n  \n// handler for URI Schemes (depreciated in iOS 9.2+, but still used by some Google apps)\n\n\n  \n[[\nBranch\n \ngetInstance\n]\n \napplication\n:\napp\n \nopenURL\n:\nurl\n \noptions\n:\noptions\n];\n\n\n  \nreturn\n \nYES\n;\n\n\n}\n\n\n\n-\n \n(\nBOOL\n)\napplication:\n(\nUIApplication\n \n*\n)\napplication\n \ncontinueUserActivity:\n(\nNSUserActivity\n \n*\n)\nuserActivity\n \nrestorationHandler:\n(\nvoid\n \n(\n^\n)(\nNSArray\n \n*\n \n_Nullable\n))\nrestorationHandler\n \n{\n\n\n  \n// handler for Universal Links\n\n\n  \n[[\nBranch\n \ngetInstance\n]\n \ncontinueUserActivity\n:\nuserActivity\n];\n\n\n  \nreturn\n \nYES\n;\n\n\n}\n\n\n\n-\n \n(\nvoid\n)\napplication:\n(\nUIApplication\n \n*\n)\napplication\n \ndidReceiveRemoteNotification:\n(\nNSDictionary\n \n*\n)\nuserInfo\n \n{\n\n\n  \n// handler for Push Notifications\n\n\n  \n[[\nBranch\n \ngetInstance\n]\n \nhandlePushNotification\n:\nuserInfo\n];\n\n\n}\n\n\n\n@end\n\n\n\n\n\n\n\n\n\n\n\n\n\nTest deep link\n\n\n\n\n\n\nCreate a deep link from the \nBranch Marketing Dashboard\n\n\n\n\n\n\nDelete your app from the device\n\n\n\n\n\n\nCompile your app \n(\ncordova run ios\n \nphonegap run ios\n \nionic run ios\n)\n\n\n\n\n\n\nPaste deep link in \nApple Notes\n\n\n\n\n\n\nLong press on the deep link \n(not 3D Touch)\n\n\n\n\n\n\nClick \nOpen in \"APP_NAME\"\n to open your app \n(\nexample\n)\n\n\n\n\n\n\n\n\n\n\nImplement features\n\n\n\n\n\n\nCreate content reference\n\n\n\n\n\n\nThe \nBranch Universal Object\n encapsulates the thing you want to share \n\n\n\n\n\n\nSwift 3.0\n\n\n// only canonical identifier is required\n\n\nlet\n \nbuo\n \n=\n \nBranchUniversalObject\n(\ncanonicalIdentifier\n:\n \nitem/12345\n)\n\n\nbuo\n.\ntitle\n \n=\n \nUUID\n.\ninit\n().\nuuidString\n\n\nbuo\n.\ncontentDescription\n \n=\n \nMy Content Description\n\n\nbuo\n.\nimageUrl\n \n=\n \nhttp://lorempixel.com/200/200/\n\n\nbuo\n.\ncanonicalUrl\n \n=\n \nhttp://s3z3.app.link/rawr_rawr\n\n\nbuo\n.\ncontentIndexMode\n \n=\n \n.\npublic\n\n\nbuo\n.\naddMetadataKey\n(\nproperty1\n,\n \nvalue\n:\n \nblue\n)\n\n\n\n\n\n\n\n\n\nObjective-C\n\n\n// only canonical identifier is required\n\n\nBranchUniversalObject\n \n*\nbuo\n \n=\n \n[[\nBranchUniversalObject\n \nalloc\n]\n \ninitWithCanonicalIdentifier\n:\n@\nitem/12345\n];\n\n\nbuo\n.\ntitle\n \n=\n \n@\nMy Content Title\n;\n\n\nbuo\n.\ncontentDescription\n \n=\n \n@\nMy Content Description\n;\n\n\nbuo\n.\nimageUrl\n \n=\n \n@\nhttps://example.com/mycontent-12345.png\n;\n\n\n[\nbuo\n \naddMetadataKey\n:\n@\nproperty1\n \nvalue\n:\n@\nblue\n];\n\n\n[\nbuo\n \naddMetadataKey\n:\n@\nproperty2\n \nvalue\n:\n@\nred\n];\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate deep link\n\n\n\n\n\n\nGenerate a deep link within your app\n\n\n\n\n\n\nSwift 3.0\n\n\nlet\n \nlp\n:\n \nBranchLinkProperties\n \n=\n \nBranchLinkProperties\n()\n\n\nlp\n.\nfeature\n \n=\n \nsharing\n\n\nlp\n.\nchannel\n \n=\n \nfacebook\n\n\nlp\n.\ncampaign\n \n=\n \nmeow meow\n\n\nlp\n.\naddControlParam\n(\n$desktop_url\n,\n \nwithValue\n:\n \nhttp://example.com/home\n)\n\n\nlp\n.\naddControlParam\n(\nrandom\n,\n \nwithValue\n:\n \nUUID\n.\ninit\n().\nuuidString\n)\n\n\n\nbuo\n.\ngetShortUrl\n(\nwith\n:\n \nlp\n)\n \n{\n \nurl\n,\n \nerror\n \nin\n\n  \nguard\n \nlet\n \nurl\n \n=\n \nurl\n \nelse\n \n{\n \nreturn\n \n}\n\n  \nprint\n(\nurl\n)\n\n\n}\n\n\n\n\n\n\n\n\n\nObjective-C\n\n\nBranchLinkProperties\n \n*\nlp\n \n=\n \n[[\nBranchLinkProperties\n \nalloc\n]\n \ninit\n];\n\n\nlp\n.\nfeature\n \n=\n \n@\nsharing\n;\n\n\nlp\n.\nchannel\n \n=\n \n@\nfacebook\n;\n\n\n[\nlp\n \naddControlParam\n:\n@\n$desktop_url\n \nwithValue\n:\n@\nhttp://example.com/home\n];\n\n\n[\nlp\n \naddControlParam\n:\n@\n$ios_url\n \nwithValue\n:\n@\nhttp://example.com/ios\n];\n\n\n\n[\nbuo\n \ngetShortUrlWithLinkProperties\n:\nlp\n \nandCallback\n:\n^\n(\nNSString\n*\n \nurl\n,\n \nNSError\n*\n \nerror\n)\n \n{\n\n    \nif\n \n(\n!\nerror\n)\n \n{\n\n        \nNSLog\n(\n@\n@\n,\n \nurl\n);\n\n    \n}\n\n\n}];\n\n\n\n\n\n\n\n\n\n\n\n\n\nShare deep link\n\n\n\n\n\n\nShare deep links between users and apps\n\n\n\n\n\n\nSwift 3.0\n\n\n// optional values\n\n\nlet\n \nlp\n:\n \nBranchLinkProperties\n \n=\n \nBranchLinkProperties\n()\n\n\nlp\n.\nfeature\n \n=\n \nsharing\n\n\nlp\n.\nchannel\n \n=\n \nfacebook\n\n\nlp\n.\ncampaign\n \n=\n \nmeow meow\n\n\nlp\n.\naddControlParam\n(\n$desktop_url\n,\n \nwithValue\n:\n \nhttp://example.com/home\n)\n\n\nlp\n.\naddControlParam\n(\nrandom\n,\n \nwithValue\n:\n \nUUID\n.\ninit\n().\nuuidString\n)\n\n\n\n// share link\n\n\nbuo\n.\nshowShareSheet\n(\nwith\n:\n \nlp\n,\n \nandShareText\n:\n \ntext\n \n,\n \nfrom\n:\n \ncontroller\n)\n \n{\n \n(\nactivity\n,\n \nsuccess\n)\n \nin\n\n  \nprint\n(\nactivity\n \n??\n \nnone\n,\n \nsuccess\n)\n\n\n}\n\n\n\n\n\n\n\n\n\nObjective-C\n\n\n// optional values\n\n\nBranchLinkProperties\n \n*\nlp\n \n=\n \n[[\nBranchLinkProperties\n \nalloc\n]\n \ninit\n];\n\n\nlp\n.\nfeature\n \n=\n \n@\nsharing\n;\n\n\nlp\n.\nchannel\n \n=\n \n@\nfacebook\n;\n\n\n[\nlp\n \naddControlParam\n:\n@\n$desktop_url\n \nwithValue\n:\n@\nhttp://example.com/home\n];\n\n\n[\nlp\n \naddControlParam\n:\n@\n$ios_url\n \nwithValue\n:\n@\nhttp://example.com/ios\n];\n\n\n\n// share link\n\n\n[\nbranchUniversalObject\n \nshowShareSheetWithLinkProperties\n:\nlp\n \nandShareText\n:\n@\nSuper amazing thing I want to share!\n \nfromViewController\n:\nself\n \ncompletion\n:\n^\n(\nNSString\n*\n \nactivityType\n,\n \nBOOL\n \ncompleted\n)\n \n{\n\n    \nNSLog\n(\n@\nfinished presenting\n);\n\n\n}];\n\n\n\n\n\n\n\n\n\n\n\n\n\nRead deep link\n\n\n\n\n\n\nNavigate to content\n\n\n\n\n\n\nNavigate to any ViewController based on the deep link data from\n\n\n\n\n\n\nSwift 3.0\n\n\n// within AppDelegate application.didFinishLaunchingWithOptions\n\n\nBranch\n.\ngetInstance\n().\ninitSession\n(\nlaunchOptions\n:\n \nlaunchOptions\n)\n \n{\n \nparams\n \n,\n \nerror\n \nin\n\n  \n// catch deep link data\n\n  \nguard\n \nlet\n \ndata\n \n=\n \nparams\n \nas\n?\n \n[\nString\n:\n \nAnyObject\n]\n \nelse\n \n{\n \nreturn\n \n}\n\n\n  \n// save deep link data into global model to be referenced by any view controller\n\n  \nBranchData\n.\nsharedInstance\n.\ndata\n \n=\n \ndata\n\n\n  \n// navigate to view controller based on deep link data[\ntype\n] (\ntype\n can be any custom key-value pair)\n\n  \nguard\n \nlet\n \nnav\n \n=\n \ndata\n[\ntype\n]\n \nas\n?\n \nString\n \nelse\n \n{\n \nreturn\n \n}\n\n  \nswitch\n \nnav\n \n{\n\n      \ncase\n \nlanding_page\n:\n \nself\n.\nwindow\n?.\nrootViewController\n?.\npresent\n(\n \nSecondViewController\n(),\n \nanimated\n:\n \ntrue\n,\n \ncompletion\n:\n \nnil\n)\n\n      \ncase\n \ntutorial\n:\n \nself\n.\nwindow\n?.\nrootViewController\n?.\npresent\n(\n \nSecondViewController\n(),\n \nanimated\n:\n \ntrue\n,\n \ncompletion\n:\n \nnil\n)\n\n      \ncase\n \ncontent\n:\n \nself\n.\nwindow\n?.\nrootViewController\n?.\npresent\n(\n \nSecondViewController\n(),\n \nanimated\n:\n \ntrue\n,\n \ncompletion\n:\n \nnil\n)\n\n      \ndefault\n:\n \nbreak\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\n\n\nObjective-C\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDisplay content\n\n\n\n\n\n\nTrack content\n\n\n\n\n\n\nTrack users\n\n\n\n\n\n\nTrack events\n\n\n\n\n\n\nTrack commerce\n\n\n\n\n\n\nHandle referrals\n\n\n\n\n\n\nTroubleshoot issues\n\n\n\n\n\n\nRecommendations\n\n\n\n\n\n\nSample app\n\n\n\n\n\n\nSimulate an install\n\n\n\n\n\n\nApp not opening\n\n\n\n\n\n\nData not pass through\n\n\n\n\n\n\nDeep links are long", 
            "title": "iOS"
        }, 
        {
            "location": "/pages/apps/ios/#integrate-branch", 
            "text": "", 
            "title": "Integrate Branch"
        }, 
        {
            "location": "/pages/apps/ios/#configure-branch", 
            "text": "Complete your  Branch Dashboard", 
            "title": "Configure Branch"
        }, 
        {
            "location": "/pages/apps/ios/#configure-bundle-identifier", 
            "text": "Bundle Id matches  Branch Dashboard", 
            "title": "Configure bundle identifier"
        }, 
        {
            "location": "/pages/apps/ios/#configure-associated-domains", 
            "text": "Add  Branch Dashboard  values", 
            "title": "Configure associated domains"
        }, 
        {
            "location": "/pages/apps/ios/#configure-entitlements", 
            "text": "Confirm entitlements are within target", 
            "title": "Configure entitlements"
        }, 
        {
            "location": "/pages/apps/ios/#configure-infoplist", 
            "text": "Add  Branch Dashboard  values", 
            "title": "Configure info.pList"
        }, 
        {
            "location": "/pages/apps/ios/#confirm-app-prefix", 
            "text": "From your  Apple Developer Account", 
            "title": "Confirm app prefix"
        }, 
        {
            "location": "/pages/apps/ios/#install-branch", 
            "text": "Option 1:  CocoaPods  platform :ios,  8.0 \n\ntarget  APP_NAME   do \n   # if swift \n  use_frameworks!   pod  Branch  end    Option 2:  Carthage  github  BranchMetrics/ios-branch-deep-linking     Option 3: Manually install  source code  and dependencies", 
            "title": "Install Branch"
        }, 
        {
            "location": "/pages/apps/ios/#initialize-branch", 
            "text": "Swift 3.0  import   UIKit  import   Branch   @UIApplicationMain  class   AppDelegate :   UIResponder ,   UIApplicationDelegate   {  var   window :   UIWindow ?  func   application ( _   application :   UIApplication ,   didFinishLaunchingWithOptions   launchOptions :   [ UIApplicationLaunchOptionsKey :   Any ]?)   -   Bool   {     // for debug and development only     Branch . getInstance (). setDebug ()      // listener for Branch Deep Link data     Branch . getInstance (). initSession ( launchOptions :   launchOptions )   {   ( params ,   error )   in       // do stuff with deep link data (nav to page, display content, etc)       print ( params   as ?   [ String :   AnyObject ]   ??   {})     }     return   true  }  func   application ( _   app :   UIApplication ,   open   url :   URL ,   options :   [ UIApplicationOpenURLOptionsKey   :   Any ]   =   [:])   -   Bool   {     // handler for URI Schemes (depreciated in iOS 9.2+, but still used by some Google apps)     Branch . getInstance (). application ( app ,   open :   url ,   options :   options )     return   true  }  func   application ( _   application :   UIApplication ,   continue   userActivity :   NSUserActivity ,   restorationHandler :   @ escaping   ([ Any ]?)   -   Void )   -   Bool   {     // handler for Universal Links     Branch . getInstance (). continue ( userActivity )     return   true  }  func   application ( _   application :   UIApplication ,   didReceiveRemoteNotification   userInfo :   [ AnyHashable   :   Any ],   fetchCompletionHandler   completionHandler :   @ escaping   ( UIBackgroundFetchResult )   -   Void )   {     // handler for Push Notifications     Branch . getInstance (). handlePushNotification ( userInfo )  }     Objective-C  #import  AppDelegate.h  #import  Branch/Branch.h   @interface   AppDelegate   ()  @end  @implementation   AppDelegate  -   ( BOOL ) application: ( UIApplication   * ) application   didFinishLaunchingWithOptions: ( NSDictionary   * ) launchOptions   {     // for debug and development only     [[ Branch   getInstance ]   setDebug ];      // listener for Branch Deep Link data     [[ Branch   getInstance ]   initSessionWithLaunchOptions : launchOptions   andRegisterDeepLinkHandler : ^ ( NSDictionary   *   _Nonnull   params ,   NSError   *   _Nullable   error )   {       // do stuff with deep link data (nav to page, display content, etc)       NSLog ( @ %@ ,   params );     }];     return   YES ;  }  -   ( BOOL ) application: ( UIApplication   * ) app   openURL: ( NSURL   * ) url   options: ( NSDictionary UIApplicationOpenURLOptionsKey , id   * ) options   {     // handler for URI Schemes (depreciated in iOS 9.2+, but still used by some Google apps)     [[ Branch   getInstance ]   application : app   openURL : url   options : options ];     return   YES ;  }  -   ( BOOL ) application: ( UIApplication   * ) application   continueUserActivity: ( NSUserActivity   * ) userActivity   restorationHandler: ( void   ( ^ )( NSArray   *   _Nullable )) restorationHandler   {     // handler for Universal Links     [[ Branch   getInstance ]   continueUserActivity : userActivity ];     return   YES ;  }  -   ( void ) application: ( UIApplication   * ) application   didReceiveRemoteNotification: ( NSDictionary   * ) userInfo   {     // handler for Push Notifications     [[ Branch   getInstance ]   handlePushNotification : userInfo ];  }  @end", 
            "title": "Initialize Branch"
        }, 
        {
            "location": "/pages/apps/ios/#test-deep-link", 
            "text": "Create a deep link from the  Branch Marketing Dashboard    Delete your app from the device    Compile your app  ( cordova run ios   phonegap run ios   ionic run ios )    Paste deep link in  Apple Notes    Long press on the deep link  (not 3D Touch)    Click  Open in \"APP_NAME\"  to open your app  ( example )", 
            "title": "Test deep link"
        }, 
        {
            "location": "/pages/apps/ios/#implement-features", 
            "text": "", 
            "title": "Implement features"
        }, 
        {
            "location": "/pages/apps/ios/#create-content-reference", 
            "text": "The  Branch Universal Object  encapsulates the thing you want to share     Swift 3.0  // only canonical identifier is required  let   buo   =   BranchUniversalObject ( canonicalIdentifier :   item/12345 )  buo . title   =   UUID . init (). uuidString  buo . contentDescription   =   My Content Description  buo . imageUrl   =   http://lorempixel.com/200/200/  buo . canonicalUrl   =   http://s3z3.app.link/rawr_rawr  buo . contentIndexMode   =   . public  buo . addMetadataKey ( property1 ,   value :   blue )     Objective-C  // only canonical identifier is required  BranchUniversalObject   * buo   =   [[ BranchUniversalObject   alloc ]   initWithCanonicalIdentifier : @ item/12345 ];  buo . title   =   @ My Content Title ;  buo . contentDescription   =   @ My Content Description ;  buo . imageUrl   =   @ https://example.com/mycontent-12345.png ;  [ buo   addMetadataKey : @ property1   value : @ blue ];  [ buo   addMetadataKey : @ property2   value : @ red ];", 
            "title": "Create content reference"
        }, 
        {
            "location": "/pages/apps/ios/#create-deep-link", 
            "text": "Generate a deep link within your app    Swift 3.0  let   lp :   BranchLinkProperties   =   BranchLinkProperties ()  lp . feature   =   sharing  lp . channel   =   facebook  lp . campaign   =   meow meow  lp . addControlParam ( $desktop_url ,   withValue :   http://example.com/home )  lp . addControlParam ( random ,   withValue :   UUID . init (). uuidString )  buo . getShortUrl ( with :   lp )   {   url ,   error   in \n   guard   let   url   =   url   else   {   return   } \n   print ( url )  }     Objective-C  BranchLinkProperties   * lp   =   [[ BranchLinkProperties   alloc ]   init ];  lp . feature   =   @ sharing ;  lp . channel   =   @ facebook ;  [ lp   addControlParam : @ $desktop_url   withValue : @ http://example.com/home ];  [ lp   addControlParam : @ $ios_url   withValue : @ http://example.com/ios ];  [ buo   getShortUrlWithLinkProperties : lp   andCallback : ^ ( NSString *   url ,   NSError *   error )   { \n     if   ( ! error )   { \n         NSLog ( @ @ ,   url ); \n     }  }];", 
            "title": "Create deep link"
        }, 
        {
            "location": "/pages/apps/ios/#share-deep-link", 
            "text": "Share deep links between users and apps    Swift 3.0  // optional values  let   lp :   BranchLinkProperties   =   BranchLinkProperties ()  lp . feature   =   sharing  lp . channel   =   facebook  lp . campaign   =   meow meow  lp . addControlParam ( $desktop_url ,   withValue :   http://example.com/home )  lp . addControlParam ( random ,   withValue :   UUID . init (). uuidString )  // share link  buo . showShareSheet ( with :   lp ,   andShareText :   text   ,   from :   controller )   {   ( activity ,   success )   in \n   print ( activity   ??   none ,   success )  }     Objective-C  // optional values  BranchLinkProperties   * lp   =   [[ BranchLinkProperties   alloc ]   init ];  lp . feature   =   @ sharing ;  lp . channel   =   @ facebook ;  [ lp   addControlParam : @ $desktop_url   withValue : @ http://example.com/home ];  [ lp   addControlParam : @ $ios_url   withValue : @ http://example.com/ios ];  // share link  [ branchUniversalObject   showShareSheetWithLinkProperties : lp   andShareText : @ Super amazing thing I want to share!   fromViewController : self   completion : ^ ( NSString *   activityType ,   BOOL   completed )   { \n     NSLog ( @ finished presenting );  }];", 
            "title": "Share deep link"
        }, 
        {
            "location": "/pages/apps/ios/#read-deep-link", 
            "text": "", 
            "title": "Read deep link"
        }, 
        {
            "location": "/pages/apps/ios/#navigate-to-content", 
            "text": "Navigate to any ViewController based on the deep link data from    Swift 3.0  // within AppDelegate application.didFinishLaunchingWithOptions  Branch . getInstance (). initSession ( launchOptions :   launchOptions )   {   params   ,   error   in \n   // catch deep link data \n   guard   let   data   =   params   as ?   [ String :   AnyObject ]   else   {   return   } \n\n   // save deep link data into global model to be referenced by any view controller \n   BranchData . sharedInstance . data   =   data \n\n   // navigate to view controller based on deep link data[ type ] ( type  can be any custom key-value pair) \n   guard   let   nav   =   data [ type ]   as ?   String   else   {   return   } \n   switch   nav   { \n       case   landing_page :   self . window ?. rootViewController ?. present (   SecondViewController (),   animated :   true ,   completion :   nil ) \n       case   tutorial :   self . window ?. rootViewController ?. present (   SecondViewController (),   animated :   true ,   completion :   nil ) \n       case   content :   self . window ?. rootViewController ?. present (   SecondViewController (),   animated :   true ,   completion :   nil ) \n       default :   break \n   }  }     Objective-C", 
            "title": "Navigate to content"
        }, 
        {
            "location": "/pages/apps/ios/#display-content", 
            "text": "", 
            "title": "Display content"
        }, 
        {
            "location": "/pages/apps/ios/#track-content", 
            "text": "", 
            "title": "Track content"
        }, 
        {
            "location": "/pages/apps/ios/#track-users", 
            "text": "", 
            "title": "Track users"
        }, 
        {
            "location": "/pages/apps/ios/#track-events", 
            "text": "", 
            "title": "Track events"
        }, 
        {
            "location": "/pages/apps/ios/#track-commerce", 
            "text": "", 
            "title": "Track commerce"
        }, 
        {
            "location": "/pages/apps/ios/#handle-referrals", 
            "text": "", 
            "title": "Handle referrals"
        }, 
        {
            "location": "/pages/apps/ios/#troubleshoot-issues", 
            "text": "", 
            "title": "Troubleshoot issues"
        }, 
        {
            "location": "/pages/apps/ios/#recommendations", 
            "text": "", 
            "title": "Recommendations"
        }, 
        {
            "location": "/pages/apps/ios/#sample-app", 
            "text": "", 
            "title": "Sample app"
        }, 
        {
            "location": "/pages/apps/ios/#simulate-an-install", 
            "text": "", 
            "title": "Simulate an install"
        }, 
        {
            "location": "/pages/apps/ios/#app-not-opening", 
            "text": "", 
            "title": "App not opening"
        }, 
        {
            "location": "/pages/apps/ios/#data-not-pass-through", 
            "text": "", 
            "title": "Data not pass through"
        }, 
        {
            "location": "/pages/apps/ios/#deep-links-are-long", 
            "text": "", 
            "title": "Deep links are long"
        }, 
        {
            "location": "/pages/apps/android/", 
            "text": "Integrate Branch\n\n\n\n\n\n\nConfigure Branch\n\n\n\n\n\n\nComplete your \nBranch Dashboard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstall Branch\n\n\n\n\n\n\nImport the Branch SDK to your \nbuild.gradle\n\n\napply\n \nplugin\n:\n \ncom\n.\nandroid\n.\napplication\n\n\n\nandroid\n \n{\n\n    \ncompileSdkVersion\n \n25\n\n    \nbuildToolsVersion\n \n25.0.2\n\n    \ndefaultConfig\n \n{\n\n        \napplicationId\n \ncom.eneff.branchandroid\n\n        \nminSdkVersion\n \n15\n\n        \ntargetSdkVersion\n \n25\n\n        \nversionCode\n \n1\n\n        \nversionName\n \n1.0\n\n        \ntestInstrumentationRunner\n \nandroid.support.test.runner.AndroidJUnitRunner\n\n    \n}\n\n    \nbuildTypes\n \n{\n\n        \nrelease\n \n{\n\n            \nminifyEnabled\n \nfalse\n\n            \nproguardFiles\n \ngetDefaultProguardFile\n(\nproguard\n-\nandroid\n.\ntxt\n),\n \nproguard\n-\nrules\n.\npro\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\ndependencies\n \n{\n\n    \ncompile\n \nfileTree\n(\ndir\n:\n \nlibs\n,\n \ninclude\n:\n \n[\n*.\njar\n])\n\n    \nandroidTestCompile\n(\ncom\n.\nandroid\n.\nsupport\n.\ntest\n.\nespresso\n:\nespresso\n-\ncore\n:\n2.2.2\n,\n \n{\n\n        \nexclude\n \ngroup\n:\n \ncom\n.\nandroid\n.\nsupport\n,\n \nmodule\n:\n \nsupport\n-\nannotations\n\n    \n})\n\n    \ncompile\n \ncom\n.\nandroid\n.\nsupport\n:\nappcompat\n-\nv7\n:\n25.2.0\n\n    \ncompile\n \ncom\n.\nandroid\n.\nsupport\n:\ndesign\n:\n25.2.0\n\n\n    \n// Branch SDK: library\n\n\n    \ncompile\n \nio\n.\nbranch\n.\nsdk\n.\nandroid\n:\nlibrary\n:\n2.\n+\n \n\n    \n// Branch SDK: matching with chrome tabs (optional)\n\n\n    \ncompile\n \ncom\n.\nandroid\n.\nsupport\n:\ncustomtabs\n:\n23.3.0\n \n\n    \n// Branch SDK: matching with GAID (optional)\n\n\n    \ncompile\n \ncom\n.\ngoogle\n.\nandroid\n.\ngms\n:\nplay\n-\nservices\n:\n9.0.0\n\n\n    \n// Branch SDK: firebase app indexing (optional)\n\n\n    \ncompile\n \ncom\n.\ngoogle\n.\nandroid\n.\ngms\n:\nplay\n-\nservices\n-\nappindexing\n:\n9.\n+\n\n\n    \ntestCompile\n \njunit\n:\njunit\n:\n4.12\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure app\n\n\n\n\n\n\nAdd Branch to your \nAndroidManifest.xml\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nmanifest\n \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \npackage=\ncom.eneff.branchandroid\n\n\n    \nuses-permission\n \nandroid:name=\nandroid.permission.INTERNET\n \n/\n\n\n    \napplication\n\n        \nandroid:allowBackup=\ntrue\n\n\n        \nandroid:name=\ncom.eneff.branchandroid.CustomApplicationClass\n\n\n        \nandroid:icon=\n@mipmap/ic_launcher\n\n        \nandroid:label=\n@string/app_name\n\n        \nandroid:supportsRtl=\ntrue\n\n        \nandroid:theme=\n@style/AppTheme\n\n\n        \nactivity\n\n            \nandroid:name=\n.MainActivity\n\n\n            \nandroid:launchMode=\nsingleTask\n\n\n            \nandroid:label=\n@string/app_name\n\n            \nandroid:theme=\n@style/AppTheme.NoActionBar\n\n\n            \nintent-filter\n\n                \naction\n \nandroid:name=\nandroid.intent.action.MAIN\n \n/\n\n                \ncategory\n \nandroid:name=\nandroid.intent.category.LAUNCHER\n \n/\n\n            \n/intent-filter\n\n\n\n            \n!-- Branch URI Scheme --\n\n\n            \nintent-filter\n\n\n                \ndata\n \nandroid:scheme=\nbranchandroid\n \n/\n\n\n                \naction\n \nandroid:name=\nandroid.intent.action.VIEW\n \n/\n\n\n                \ncategory\n \nandroid:name=\nandroid.intent.category.DEFAULT\n \n/\n\n\n                \ncategory\n \nandroid:name=\nandroid.intent.category.BROWSABLE\n \n/\n\n\n            \n/intent-filter\n\n\n\n\n            \n!-- Branch App Links (optional) --\n\n\n            \nintent-filter\n \nandroid:autoVerify=\ntrue\n\n\n                \naction\n \nandroid:name=\nandroid.intent.action.VIEW\n \n/\n\n\n                \ncategory\n \nandroid:name=\nandroid.intent.category.DEFAULT\n \n/\n\n\n                \ncategory\n \nandroid:name=\nandroid.intent.category.BROWSABLE\n \n/\n\n\n                \ndata\n \nandroid:scheme=\nhttps\n \nandroid:host=\nuobg.app.link\n \n/\n\n\n            \n/intent-filter\n\n\n        \n/activity\n\n\n\n        \n!-- Branch init --\n\n\n        \nmeta-data\n \nandroid:name=\nio.branch.sdk.BranchKey\n \nandroid:value=\nkey_live_gdzsepIaUf7wG3dEWb3aBkmcutm0PwJa\n \n/\n\n\n        \nmeta-data\n \nandroid:name=\nio.branch.sdk.BranchKey.test\n \nandroid:value=\nkey_test_edwDakKcMeWzJ3hC3aZs9kniyuaWGCTa\n \n/\n\n\n        \nmeta-data\n \nandroid:name=\nio.branch.sdk.TestMode\n \nandroid:value=\nfalse\n \n/\n\n\n\n\n        \n!-- Branch install referrer tracking (optional) --\n\n\n        \nreceiver\n \nandroid:name=\nio.branch.referral.InstallListener\n \nandroid:exported=\ntrue\n\n\n            \nintent-filter\n\n\n                \naction\n \nandroid:name=\ncom.android.vending.INSTALL_REFERRER\n \n/\n\n\n            \n/intent-filter\n\n\n        \n/receiver\n\n\n\n    \n/application\n\n\n\n/manifest\n\n\n\n\n\n\n\n\n\nReplace the following with values from your \nBranch Dashboard\n\n\n\n\nbranchandroid\n\n\nuobg.app.link\n\n\nkey_live_gdzsepIaUf7wG3dEWb3aBkmcutm0PwJa\n\n\nkey_test_edwDakKcMeWzJ3hC3aZs9kniyuaWGCTa\n\n\n\n\n\n\n\n\n\n\n\n\nInitialize Branch\n\n\n\n\n\n\nAdd Branch to your \nCustomApplicationClass.java\n\n\npackage\n \ncom.eneff.branchandroid\n;\n\n\n\nimport\n \nandroid.app.Application\n;\n\n\nimport\n \nio.branch.referral.Branch\n;\n\n\n\n\npublic\n \nclass\n \nCustomApplicationClass\n \nextends\n \nApplication\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonCreate\n()\n \n{\n\n        \nsuper\n.\nonCreate\n();\n\n\n\n        \n// Branch logging for debugging\n\n\n        \nBranch\n.\nenableLogging\n();\n\n\n\n\n        \n// Branch object initialization\n\n\n        \nBranch\n.\ngetAutoInstance\n(\nthis\n);\n\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n\nAdd Branch to your \nMainActivity.java\n\n\npackage\n \ncom.eneff.branchandroid\n;\n\n\n\nimport\n \nandroid.content.Intent\n;\n\n\nimport\n \nandroid.os.Bundle\n;\n\n\nimport\n \nandroid.support.design.widget.FloatingActionButton\n;\n\n\nimport\n \nandroid.support.design.widget.Snackbar\n;\n\n\nimport\n \nandroid.support.v7.app.AppCompatActivity\n;\n\n\nimport\n \nandroid.support.v7.widget.Toolbar\n;\n\n\nimport\n \nandroid.util.Log\n;\n\n\nimport\n \nandroid.view.View\n;\n\n\nimport\n \nandroid.view.Menu\n;\n\n\nimport\n \nandroid.view.MenuItem\n;\n\n\n\nimport\n \norg.json.JSONObject\n;\n\n\n\n\nimport\n \nio.branch.referral.Branch\n;\n\n\nimport\n \nio.branch.referral.BranchError\n;\n\n\n\n\npublic\n \nclass\n \nMainActivity\n \nextends\n \nAppCompatActivity\n \n{\n\n\n    \n@Override\n\n    \nprotected\n \nvoid\n \nonCreate\n(\nBundle\n \nsavedInstanceState\n)\n \n{\n\n        \nsuper\n.\nonCreate\n(\nsavedInstanceState\n);\n\n        \nsetContentView\n(\nR\n.\nlayout\n.\nactivity_main\n);\n\n        \nToolbar\n \ntoolbar\n \n=\n \n(\nToolbar\n)\n \nfindViewById\n(\nR\n.\nid\n.\ntoolbar\n);\n\n        \nsetSupportActionBar\n(\ntoolbar\n);\n\n\n        \nFloatingActionButton\n \nfab\n \n=\n \n(\nFloatingActionButton\n)\n \nfindViewById\n(\nR\n.\nid\n.\nfab\n);\n\n        \nfab\n.\nsetOnClickListener\n(\nnew\n \nView\n.\nOnClickListener\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonClick\n(\nView\n \nview\n)\n \n{\n\n                \nSnackbar\n.\nmake\n(\nview\n,\n \nReplace with your own action\n,\n \nSnackbar\n.\nLENGTH_LONG\n)\n\n                        \n.\nsetAction\n(\nAction\n,\n \nnull\n).\nshow\n();\n\n            \n}\n\n        \n});\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nboolean\n \nonCreateOptionsMenu\n(\nMenu\n \nmenu\n)\n \n{\n\n        \n// Inflate the menu; this adds items to the action bar if it is present.\n\n        \ngetMenuInflater\n().\ninflate\n(\nR\n.\nmenu\n.\nmenu_main\n,\n \nmenu\n);\n\n        \nreturn\n \ntrue\n;\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nboolean\n \nonOptionsItemSelected\n(\nMenuItem\n \nitem\n)\n \n{\n\n        \n// Handle action bar item clicks here. The action bar will\n\n        \n// automatically handle clicks on the Home/Up button, so long\n\n        \n// as you specify a parent activity in AndroidManifest.xml.\n\n        \nint\n \nid\n \n=\n \nitem\n.\ngetItemId\n();\n\n\n        \n//noinspection SimplifiableIfStatement\n\n        \nif\n \n(\nid\n \n==\n \nR\n.\nid\n.\naction_settings\n)\n \n{\n\n            \nreturn\n \ntrue\n;\n\n        \n}\n\n\n        \nreturn\n \nsuper\n.\nonOptionsItemSelected\n(\nitem\n);\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonStart\n()\n \n{\n\n        \nsuper\n.\nonStart\n();\n\n\n\n        \n// Branch Init\n\n\n        \nBranch\n.\ngetInstance\n().\ninitSession\n(\nnew\n \nBranch\n.\nBranchReferralInitListener\n()\n \n{\n\n\n            \n// Branch Link Data\n\n\n            \n@Override\n\n\n            \npublic\n \nvoid\n \nonInitFinished\n(\nJSONObject\n \nreferringParams\n,\n \nBranchError\n \nerror\n)\n \n{\n\n\n                \nif\n \n(\nerror\n \n==\n \nnull\n)\n \n{\n\n\n                    \nLog\n.\ni\n(\nBRANCH SDK\n,\n \nreferringParams\n.\ntoString\n());\n\n\n                \n}\n \nelse\n \n{\n\n\n                    \nLog\n.\ni\n(\nBRANCH SDK\n,\n \nerror\n.\ngetMessage\n());\n\n\n                \n}\n\n\n            \n}\n\n\n        \n},\n \nthis\n.\ngetIntent\n().\ngetData\n(),\n \nthis\n);\n\n\n    \n}\n\n\n\n    \n@Override\n\n\n    \npublic\n \nvoid\n \nonNewIntent\n(\nIntent\n \nintent\n)\n \n{\n\n\n        \nthis\n.\nsetIntent\n(\nintent\n);\n\n\n    \n}\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nTest deep link\n\n\n\n\n\n\nCreate a deep link from the \nBranch Dashboard\n\n\n\n\n\n\nDelete your app from the device\n\n\n\n\n\n\nCompile your app to your device\n\n\n\n\n\n\nPaste deep link in \nGoogle Hangouts\n\n\n\n\n\n\nClick on the deep link to open your app\n\n\n\n\n\n\n\n\n\n\nImplement features\n\n\n\n\n\n\nCreate content reference\n\n\nBranchUniversalObject\n \nbranchUniversalObject\n \n=\n \nnew\n \nBranchUniversalObject\n()\n\n    \n// The identifier is what Branch will use to de-dupe the content across many different Universal Objects\n\n   \n.\nsetCanonicalIdentifier\n(\nitem/12345\n)\n\n\n   \n// The canonical URL for SEO purposes (optional)\n\n   \n.\nsetCanonicalUrl\n(\nhttps://branch.io/deepviews\n)\n\n\n   \n// This is where you define the open graph structure and how the object will appear on Facebook or in a deepview\n\n   \n.\nsetTitle\n(\nMy Content Title\n)\n\n   \n.\nsetContentDescription\n(\nMy Content Description\n)\n\n   \n.\nsetContentImageUrl\n(\nhttps://example.com/mycontent-12345.png\n)\n\n\n   \n// You use this to specify whether this content can be discovered publicly - default is public\n\n   \n.\nsetContentIndexingMode\n(\nBranchUniversalObject\n.\nCONTENT_INDEX_MODE\n.\nPUBLIC\n)\n\n\n    \n// Here is where you can add custom keys/values to the deep link data\n\n   \n.\naddContentMetadata\n(\nproperty1\n,\n \nblue\n)\n\n   \n.\naddContentMetadata\n(\nproperty2\n,\n \nred\n);\n\n\n\n\n\n\n\n\n\nCreate deep link\n\n\nLinkProperties\n \nlinkProperties\n \n=\n \nnew\n \nLinkProperties\n()\n\n   \n.\nsetChannel\n(\nfacebook\n)\n\n   \n.\nsetFeature\n(\nsharing\n)\n\n   \n.\naddControlParameter\n(\n$desktop_url\n,\n \nhttp://example.com/home\n)\n\n   \n.\naddControlParameter\n(\n$ios_url\n,\n \nhttp://example.com/ios\n);\n\n\n\nbranchUniversalObject\n.\ngenerateShortUrl\n(\nthis\n,\n \nlinkProperties\n,\n \nnew\n     \nBranchLinkCreateListener\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonLinkCreate\n(\nString\n \nurl\n,\n \nBranchError\n \nerror\n)\n \n{\n\n       \nif\n \n(\nerror\n \n==\n \nnull\n)\n \n{\n\n           \nLog\n.\ni\n(\nMyApp\n,\n \ngot my Branch link to share: \n \n+\n \nurl\n);\n\n       \n}\n\n    \n}\n\n\n});\n                   \n\n\n\n\n\n\n\n\nShare deep link\n\n\nShareSheetStyle\n \nshareSheetStyle\n \n=\n \nnew\n \nShareSheetStyle\n(\nMainActivity\n.\nthis\n,\n \nCheck this out!\n,\n \nThis stuff is awesome: \n)\n\n    \n.\nsetCopyUrlStyle\n(\ngetResources\n().\ngetDrawable\n(\nandroid\n.\nR\n.\ndrawable\n.\nic_menu_send\n),\n \nCopy\n,\n \nAdded to clipboard\n)\n\n    \n.\nsetMoreOptionStyle\n(\ngetResources\n().\ngetDrawable\n(\nandroid\n.\nR\n.\ndrawable\n.\nic_menu_search\n),\n \nShow more\n)\n\n    \n.\naddPreferredSharingOption\n(\nSharingHelper\n.\nSHARE_WITH\n.\nFACEBOOK\n)\n\n    \n.\naddPreferredSharingOption\n(\nSharingHelper\n.\nSHARE_WITH\n.\nEMAIL\n)\n\n    \n.\nsetAsFullWidthStyle\n(\ntrue\n)\n\n    \n.\nsetSharingTitle\n(\nShare With\n);\n\n\n\nbranchUniversalObject\n.\nshowShareSheet\n(\nthis\n,\n \n                                      \nlinkProperties\n,\n\n                                      \nshareSheetStyle\n,\n\n                                       \nnew\n \nBranch\n.\nBranchLinkShareListener\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonShareLinkDialogLaunched\n()\n \n{\n\n    \n}\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonShareLinkDialogDismissed\n()\n \n{\n\n    \n}\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonLinkShareResponse\n(\nString\n \nsharedLink\n,\n \nString\n \nsharedChannel\n,\n \nBranchError\n \nerror\n)\n \n{\n\n    \n}\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonChannelSelected\n(\nString\n \nchannelName\n)\n \n{\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\nRead deep link\n\n\n\n\n\n\nNavigate to content\n\n\n\n\n\n\nDisplay content\n\n\n\n\n\n\nTrack content\n\n\n\n\n\n\nTrack users\n\n\nBranch\n \nbranch\n \n=\n \nBranch\n.\ngetInstance\n(\ngetApplicationContext\n());\n\n\nbranch\n.\nsetIdentity\n(\nyour\n \nuser\n \nid\n);\n \n// your user id should not exceed 127 characters\n\n\n\n\n\nBranch\n.\ngetInstance\n(\ngetApplicationContext\n()).\nlogout\n();\n\n\n\n\n\n\n\n\n\nTrack events\n\n\nBranch\n \nbranch\n \n=\n \nBranch\n.\ngetInstance\n(\ngetApplicationContext\n());\n\n\nbranch\n.\nuserCompletedAction\n(\nyour_custom_event\n);\n\n\n\n\n\nBranch\n \nbranch\n \n=\n \nBranch\n.\ngetInstance\n(\ngetApplicationContext\n());\n\n\nbranch\n.\nuserCompletedAction\n(\nyour_custom_event\n,\n \n(\nJSONObject\n)\nappState\n);\n \n// same 63 characters max limit\n\n\n\n\n\n\n\n\n\nTrack commerce\n\n\n\n\n\n\nHandle referrals\n\n\n\n\n\n\nTroubleshoot issues\n\n\n\n\n\n\nRecommendations\n\n\n\n\n\n\nSimulate an install\n\n\n\n\n\n\nSample app\n\n\n\n\n\n\nAndroid instant app", 
            "title": "Android"
        }, 
        {
            "location": "/pages/apps/android/#integrate-branch", 
            "text": "", 
            "title": "Integrate Branch"
        }, 
        {
            "location": "/pages/apps/android/#configure-branch", 
            "text": "Complete your  Branch Dashboard", 
            "title": "Configure Branch"
        }, 
        {
            "location": "/pages/apps/android/#install-branch", 
            "text": "Import the Branch SDK to your  build.gradle  apply   plugin :   com . android . application  android   { \n     compileSdkVersion   25 \n     buildToolsVersion   25.0.2 \n     defaultConfig   { \n         applicationId   com.eneff.branchandroid \n         minSdkVersion   15 \n         targetSdkVersion   25 \n         versionCode   1 \n         versionName   1.0 \n         testInstrumentationRunner   android.support.test.runner.AndroidJUnitRunner \n     } \n     buildTypes   { \n         release   { \n             minifyEnabled   false \n             proguardFiles   getDefaultProguardFile ( proguard - android . txt ),   proguard - rules . pro \n         } \n     }  }  dependencies   { \n     compile   fileTree ( dir :   libs ,   include :   [ *. jar ]) \n     androidTestCompile ( com . android . support . test . espresso : espresso - core : 2.2.2 ,   { \n         exclude   group :   com . android . support ,   module :   support - annotations \n     }) \n     compile   com . android . support : appcompat - v7 : 25.2.0 \n     compile   com . android . support : design : 25.2.0       // Branch SDK: library       compile   io . branch . sdk . android : library : 2. +        // Branch SDK: matching with chrome tabs (optional)       compile   com . android . support : customtabs : 23.3.0        // Branch SDK: matching with GAID (optional)       compile   com . google . android . gms : play - services : 9.0.0       // Branch SDK: firebase app indexing (optional)       compile   com . google . android . gms : play - services - appindexing : 9. +       testCompile   junit : junit : 4.12  }", 
            "title": "Install Branch"
        }, 
        {
            "location": "/pages/apps/android/#configure-app", 
            "text": "Add Branch to your  AndroidManifest.xml  ?xml version= 1.0  encoding= utf-8 ?  manifest   xmlns:android= http://schemas.android.com/apk/res/android \n     package= com.eneff.branchandroid \n\n     uses-permission   android:name= android.permission.INTERNET   / \n\n     application \n         android:allowBackup= true           android:name= com.eneff.branchandroid.CustomApplicationClass           android:icon= @mipmap/ic_launcher \n         android:label= @string/app_name \n         android:supportsRtl= true \n         android:theme= @style/AppTheme \n\n         activity \n             android:name= .MainActivity               android:launchMode= singleTask               android:label= @string/app_name \n             android:theme= @style/AppTheme.NoActionBar \n\n             intent-filter \n                 action   android:name= android.intent.action.MAIN   / \n                 category   android:name= android.intent.category.LAUNCHER   / \n             /intent-filter               !-- Branch URI Scheme --               intent-filter                   data   android:scheme= branchandroid   /                   action   android:name= android.intent.action.VIEW   /                   category   android:name= android.intent.category.DEFAULT   /                   category   android:name= android.intent.category.BROWSABLE   /               /intent-filter                !-- Branch App Links (optional) --               intent-filter   android:autoVerify= true                   action   android:name= android.intent.action.VIEW   /                   category   android:name= android.intent.category.DEFAULT   /                   category   android:name= android.intent.category.BROWSABLE   /                   data   android:scheme= https   android:host= uobg.app.link   /               /intent-filter           /activity           !-- Branch init --           meta-data   android:name= io.branch.sdk.BranchKey   android:value= key_live_gdzsepIaUf7wG3dEWb3aBkmcutm0PwJa   /           meta-data   android:name= io.branch.sdk.BranchKey.test   android:value= key_test_edwDakKcMeWzJ3hC3aZs9kniyuaWGCTa   /           meta-data   android:name= io.branch.sdk.TestMode   android:value= false   /            !-- Branch install referrer tracking (optional) --           receiver   android:name= io.branch.referral.InstallListener   android:exported= true               intent-filter                   action   android:name= com.android.vending.INSTALL_REFERRER   /               /intent-filter           /receiver  \n     /application  /manifest     Replace the following with values from your  Branch Dashboard   branchandroid  uobg.app.link  key_live_gdzsepIaUf7wG3dEWb3aBkmcutm0PwJa  key_test_edwDakKcMeWzJ3hC3aZs9kniyuaWGCTa", 
            "title": "Configure app"
        }, 
        {
            "location": "/pages/apps/android/#initialize-branch", 
            "text": "Add Branch to your  CustomApplicationClass.java  package   com.eneff.branchandroid ;  import   android.app.Application ;  import   io.branch.referral.Branch ;   public   class   CustomApplicationClass   extends   Application   { \n     @Override \n     public   void   onCreate ()   { \n         super . onCreate ();           // Branch logging for debugging           Branch . enableLogging ();            // Branch object initialization           Branch . getAutoInstance ( this );       }  }     Add Branch to your  MainActivity.java  package   com.eneff.branchandroid ;  import   android.content.Intent ;  import   android.os.Bundle ;  import   android.support.design.widget.FloatingActionButton ;  import   android.support.design.widget.Snackbar ;  import   android.support.v7.app.AppCompatActivity ;  import   android.support.v7.widget.Toolbar ;  import   android.util.Log ;  import   android.view.View ;  import   android.view.Menu ;  import   android.view.MenuItem ;  import   org.json.JSONObject ;   import   io.branch.referral.Branch ;  import   io.branch.referral.BranchError ;   public   class   MainActivity   extends   AppCompatActivity   { \n\n     @Override \n     protected   void   onCreate ( Bundle   savedInstanceState )   { \n         super . onCreate ( savedInstanceState ); \n         setContentView ( R . layout . activity_main ); \n         Toolbar   toolbar   =   ( Toolbar )   findViewById ( R . id . toolbar ); \n         setSupportActionBar ( toolbar ); \n\n         FloatingActionButton   fab   =   ( FloatingActionButton )   findViewById ( R . id . fab ); \n         fab . setOnClickListener ( new   View . OnClickListener ()   { \n             @Override \n             public   void   onClick ( View   view )   { \n                 Snackbar . make ( view ,   Replace with your own action ,   Snackbar . LENGTH_LONG ) \n                         . setAction ( Action ,   null ). show (); \n             } \n         }); \n     } \n\n     @Override \n     public   boolean   onCreateOptionsMenu ( Menu   menu )   { \n         // Inflate the menu; this adds items to the action bar if it is present. \n         getMenuInflater (). inflate ( R . menu . menu_main ,   menu ); \n         return   true ; \n     } \n\n     @Override \n     public   boolean   onOptionsItemSelected ( MenuItem   item )   { \n         // Handle action bar item clicks here. The action bar will \n         // automatically handle clicks on the Home/Up button, so long \n         // as you specify a parent activity in AndroidManifest.xml. \n         int   id   =   item . getItemId (); \n\n         //noinspection SimplifiableIfStatement \n         if   ( id   ==   R . id . action_settings )   { \n             return   true ; \n         } \n\n         return   super . onOptionsItemSelected ( item ); \n     } \n\n     @Override \n     public   void   onStart ()   { \n         super . onStart ();           // Branch Init           Branch . getInstance (). initSession ( new   Branch . BranchReferralInitListener ()   {               // Branch Link Data               @Override               public   void   onInitFinished ( JSONObject   referringParams ,   BranchError   error )   {                   if   ( error   ==   null )   {                       Log . i ( BRANCH SDK ,   referringParams . toString ());                   }   else   {                       Log . i ( BRANCH SDK ,   error . getMessage ());                   }               }           },   this . getIntent (). getData (),   this );       }       @Override       public   void   onNewIntent ( Intent   intent )   {           this . setIntent ( intent );       }   }", 
            "title": "Initialize Branch"
        }, 
        {
            "location": "/pages/apps/android/#test-deep-link", 
            "text": "Create a deep link from the  Branch Dashboard    Delete your app from the device    Compile your app to your device    Paste deep link in  Google Hangouts    Click on the deep link to open your app", 
            "title": "Test deep link"
        }, 
        {
            "location": "/pages/apps/android/#implement-features", 
            "text": "", 
            "title": "Implement features"
        }, 
        {
            "location": "/pages/apps/android/#create-content-reference", 
            "text": "BranchUniversalObject   branchUniversalObject   =   new   BranchUniversalObject () \n     // The identifier is what Branch will use to de-dupe the content across many different Universal Objects \n    . setCanonicalIdentifier ( item/12345 ) \n\n    // The canonical URL for SEO purposes (optional) \n    . setCanonicalUrl ( https://branch.io/deepviews ) \n\n    // This is where you define the open graph structure and how the object will appear on Facebook or in a deepview \n    . setTitle ( My Content Title ) \n    . setContentDescription ( My Content Description ) \n    . setContentImageUrl ( https://example.com/mycontent-12345.png ) \n\n    // You use this to specify whether this content can be discovered publicly - default is public \n    . setContentIndexingMode ( BranchUniversalObject . CONTENT_INDEX_MODE . PUBLIC ) \n\n     // Here is where you can add custom keys/values to the deep link data \n    . addContentMetadata ( property1 ,   blue ) \n    . addContentMetadata ( property2 ,   red );", 
            "title": "Create content reference"
        }, 
        {
            "location": "/pages/apps/android/#create-deep-link", 
            "text": "LinkProperties   linkProperties   =   new   LinkProperties () \n    . setChannel ( facebook ) \n    . setFeature ( sharing ) \n    . addControlParameter ( $desktop_url ,   http://example.com/home ) \n    . addControlParameter ( $ios_url ,   http://example.com/ios );  branchUniversalObject . generateShortUrl ( this ,   linkProperties ,   new       BranchLinkCreateListener ()   { \n     @Override \n     public   void   onLinkCreate ( String   url ,   BranchError   error )   { \n        if   ( error   ==   null )   { \n            Log . i ( MyApp ,   got my Branch link to share:    +   url ); \n        } \n     }  });", 
            "title": "Create deep link"
        }, 
        {
            "location": "/pages/apps/android/#share-deep-link", 
            "text": "ShareSheetStyle   shareSheetStyle   =   new   ShareSheetStyle ( MainActivity . this ,   Check this out! ,   This stuff is awesome:  ) \n     . setCopyUrlStyle ( getResources (). getDrawable ( android . R . drawable . ic_menu_send ),   Copy ,   Added to clipboard ) \n     . setMoreOptionStyle ( getResources (). getDrawable ( android . R . drawable . ic_menu_search ),   Show more ) \n     . addPreferredSharingOption ( SharingHelper . SHARE_WITH . FACEBOOK ) \n     . addPreferredSharingOption ( SharingHelper . SHARE_WITH . EMAIL ) \n     . setAsFullWidthStyle ( true ) \n     . setSharingTitle ( Share With );  branchUniversalObject . showShareSheet ( this ,  \n                                       linkProperties , \n                                       shareSheetStyle , \n                                        new   Branch . BranchLinkShareListener ()   { \n     @Override \n     public   void   onShareLinkDialogLaunched ()   { \n     } \n     @Override \n     public   void   onShareLinkDialogDismissed ()   { \n     } \n     @Override \n     public   void   onLinkShareResponse ( String   sharedLink ,   String   sharedChannel ,   BranchError   error )   { \n     } \n     @Override \n     public   void   onChannelSelected ( String   channelName )   { \n     }  });", 
            "title": "Share deep link"
        }, 
        {
            "location": "/pages/apps/android/#read-deep-link", 
            "text": "", 
            "title": "Read deep link"
        }, 
        {
            "location": "/pages/apps/android/#navigate-to-content", 
            "text": "", 
            "title": "Navigate to content"
        }, 
        {
            "location": "/pages/apps/android/#display-content", 
            "text": "", 
            "title": "Display content"
        }, 
        {
            "location": "/pages/apps/android/#track-content", 
            "text": "", 
            "title": "Track content"
        }, 
        {
            "location": "/pages/apps/android/#track-users", 
            "text": "Branch   branch   =   Branch . getInstance ( getApplicationContext ());  branch . setIdentity ( your   user   id );   // your user id should not exceed 127 characters   Branch . getInstance ( getApplicationContext ()). logout ();", 
            "title": "Track users"
        }, 
        {
            "location": "/pages/apps/android/#track-events", 
            "text": "Branch   branch   =   Branch . getInstance ( getApplicationContext ());  branch . userCompletedAction ( your_custom_event );   Branch   branch   =   Branch . getInstance ( getApplicationContext ());  branch . userCompletedAction ( your_custom_event ,   ( JSONObject ) appState );   // same 63 characters max limit", 
            "title": "Track events"
        }, 
        {
            "location": "/pages/apps/android/#track-commerce", 
            "text": "", 
            "title": "Track commerce"
        }, 
        {
            "location": "/pages/apps/android/#handle-referrals", 
            "text": "", 
            "title": "Handle referrals"
        }, 
        {
            "location": "/pages/apps/android/#troubleshoot-issues", 
            "text": "", 
            "title": "Troubleshoot issues"
        }, 
        {
            "location": "/pages/apps/android/#recommendations", 
            "text": "", 
            "title": "Recommendations"
        }, 
        {
            "location": "/pages/apps/android/#simulate-an-install", 
            "text": "", 
            "title": "Simulate an install"
        }, 
        {
            "location": "/pages/apps/android/#sample-app", 
            "text": "", 
            "title": "Sample app"
        }, 
        {
            "location": "/pages/apps/android/#android-instant-app", 
            "text": "", 
            "title": "Android instant app"
        }, 
        {
            "location": "/pages/apps/adobe-air/", 
            "text": "Integrate Branch\n\n\n\n\n\n\nConfigure Branch\n\n\n\n\n\n\nConfigure app\n\n\n\n\n\n\nInitialize Branch\n\n\n\n\n\n\nTest deep link\n\n\n\n\n\n\nImplement features\n\n\n\n\n\n\nCreate content reference\n\n\n\n\n\n\nCreate deep link\n\n\n\n\n\n\nShare deep link\n\n\n\n\n\n\nRead deep link\n\n\n\n\n\n\nNavigate to content\n\n\n\n\n\n\nDisplay content\n\n\n\n\n\n\nTrack content\n\n\n\n\n\n\nTrack users\n\n\n\n\n\n\nTrack events\n\n\n\n\n\n\nTrack commerce\n\n\n\n\n\n\nHandle referrals\n\n\n\n\n\n\nTroubleshoot issues\n\n\n\n\n\n\nRecommendations\n\n\n\n\n\n\nSample app", 
            "title": "Adobe AIR"
        }, 
        {
            "location": "/pages/apps/adobe-air/#integrate-branch", 
            "text": "", 
            "title": "Integrate Branch"
        }, 
        {
            "location": "/pages/apps/adobe-air/#configure-branch", 
            "text": "", 
            "title": "Configure Branch"
        }, 
        {
            "location": "/pages/apps/adobe-air/#configure-app", 
            "text": "", 
            "title": "Configure app"
        }, 
        {
            "location": "/pages/apps/adobe-air/#initialize-branch", 
            "text": "", 
            "title": "Initialize Branch"
        }, 
        {
            "location": "/pages/apps/adobe-air/#test-deep-link", 
            "text": "", 
            "title": "Test deep link"
        }, 
        {
            "location": "/pages/apps/adobe-air/#implement-features", 
            "text": "", 
            "title": "Implement features"
        }, 
        {
            "location": "/pages/apps/adobe-air/#create-content-reference", 
            "text": "", 
            "title": "Create content reference"
        }, 
        {
            "location": "/pages/apps/adobe-air/#create-deep-link", 
            "text": "", 
            "title": "Create deep link"
        }, 
        {
            "location": "/pages/apps/adobe-air/#share-deep-link", 
            "text": "", 
            "title": "Share deep link"
        }, 
        {
            "location": "/pages/apps/adobe-air/#read-deep-link", 
            "text": "", 
            "title": "Read deep link"
        }, 
        {
            "location": "/pages/apps/adobe-air/#navigate-to-content", 
            "text": "", 
            "title": "Navigate to content"
        }, 
        {
            "location": "/pages/apps/adobe-air/#display-content", 
            "text": "", 
            "title": "Display content"
        }, 
        {
            "location": "/pages/apps/adobe-air/#track-content", 
            "text": "", 
            "title": "Track content"
        }, 
        {
            "location": "/pages/apps/adobe-air/#track-users", 
            "text": "", 
            "title": "Track users"
        }, 
        {
            "location": "/pages/apps/adobe-air/#track-events", 
            "text": "", 
            "title": "Track events"
        }, 
        {
            "location": "/pages/apps/adobe-air/#track-commerce", 
            "text": "", 
            "title": "Track commerce"
        }, 
        {
            "location": "/pages/apps/adobe-air/#handle-referrals", 
            "text": "", 
            "title": "Handle referrals"
        }, 
        {
            "location": "/pages/apps/adobe-air/#troubleshoot-issues", 
            "text": "", 
            "title": "Troubleshoot issues"
        }, 
        {
            "location": "/pages/apps/adobe-air/#recommendations", 
            "text": "", 
            "title": "Recommendations"
        }, 
        {
            "location": "/pages/apps/adobe-air/#sample-app", 
            "text": "", 
            "title": "Sample app"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/", 
            "text": "Integrate Branch\n\n\n\n\n\n\nConfigure Branch\n\n\n\n\n\n\nComplete your \nBranch Dashboard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure app\n\n\n\n\n\n\nCordova and Ionic\n\n\n!-- sample config.xml --\n\n\nwidget\n \nid=\ncom.eneff.branch.cordovatestbed\n \nversion=\n0.0.1\n \nxmlns=\nhttp://www.w3.org/ns/widgets\n \nxmlns:cdv=\nhttp://cordova.apache.org/ns/1.0\n\n  \n!-- Branch --\n\n  \nplugin\n \nname=\nbranch-cordova-sdk\n \nspec=\n^2.5.0\n \n/\n\n  \nbranch-config\n\n    \nbranch-key\n \nvalue=\nkey_live_ndqptlgXNE4LHqIahH1WIpbiyFlb62J3\n \n/\n\n    \nuri-scheme\n \nvalue=\nbranchcordova\n \n/\n\n    \nlink-domain\n \nvalue=\ncordova.app.link\n \n/\n\n    \nios-team-release\n \nvalue=\nPW4Q8885U7\n \n/\n\n  \n/branch-config\n\n\n\n\n\n\n\n\n\nPhoneGap\n\n\n!-- sample config.xml --\n\n\nwidget\n \nid=\ncom.eneff.branch.cordovatestbed\n \nversion=\n1.0.0\n \nxmlns=\nhttp://www.w3.org/ns/widgets\n \nxmlns:gap=\nhttp://phonegap.com/ns/1.0\n\n  \n!-- Branch --\n\n  \nplugin\n \nname=\nbranch-cordova-sdk\n \nspec=\n^2.5.0\n \n/\n\n  \nbranch-config\n\n    \nbranch-key\n \nvalue=\nkey_live_ndqptlgXNE4LHqIahH1WIpbiyFlb62J3\n \n/\n\n    \nuri-scheme\n \nvalue=\nbranchcordova\n \n/\n\n    \nlink-domain\n \nvalue=\ncordova.app.link\n \n/\n\n    \nios-team-release\n \nvalue=\nPW4Q8885U7\n \n/\n\n  \n/branch-config\n\n\n\n\n\n\n\n\n\nChange the following values to match your \nBranch Dashboard\n\n\n\n\ncom.eneff.branch.cordovatestbed\n\n\nkey_live_ndqptlgXNE4LHqIahH1WIpbiyFlb62J3\n\n\nbranchcordova\n\n\ncordova.app.link\n\n\nPW4Q8885U7\n\n\n\n\n\n\n\n\n\n\n\n\nInitialize Branch\n\n\n\n\n\n\nCordova and PhoneGap\n\n\n// sample index.js\n\n\nvar\n \napp\n \n=\n \n{\n\n  \ninitialize\n:\n \nfunction\n()\n \n{\n\n    \nthis\n.\nbindEvents\n();\n\n  \n},\n\n  \nbindEvents\n:\n \nfunction\n()\n \n{\n\n    \ndocument\n.\naddEventListener\n(\ndeviceready\n,\n \nthis\n.\nonDeviceReady\n,\n \nfalse\n);\n\n    \ndocument\n.\naddEventListener\n(\nresume\n,\n \nthis\n.\nonDeviceResume\n,\n \nfalse\n);\n\n  \n},\n\n  \nonDeviceReady\n:\n \nfunction\n()\n \n{\n\n    \napp\n.\nbranchInit\n();\n\n  \n},\n\n  \nonDeviceResume\n:\n \nfunction\n()\n \n{\n\n    \napp\n.\nbranchInit\n();\n\n  \n},\n\n  \nbranchInit\n:\n \nfunction\n()\n \n{\n\n    \n// Branch initialization\n\n    \nBranch\n.\ninitSession\n(\nfunction\n(\ndata\n)\n \n{\n\n      \n// read deep link data on click\n\n      \nalert\n(\nDeep Link Data: \n \n+\n \nJSON\n.\nstringify\n(\ndata\n));\n\n    \n});\n\n  \n}\n\n\n};\n\n\n\napp\n.\ninitialize\n();\n\n\n\n\n\n\n\n\n\nIonic 1\n\n\n// sample app.js\n\n\nangular\n.\nmodule\n(\nstarter\n,\n \n[\nionic\n,\n \nstarter.controllers\n,\n \nstarter.services\n])\n\n\n\n.\nrun\n(\nfunction\n(\n$ionicPlatform\n)\n \n{\n\n  \n$ionicPlatform\n.\nready\n(\nfunction\n()\n \n{\n\n    \nif\n \n(\nwindow\n.\ncordova\n \n \nwindow\n.\ncordova\n.\nplugins\n \n \nwindow\n.\ncordova\n.\nplugins\n.\nKeyboard\n)\n \n{\n\n      \ncordova\n.\nplugins\n.\nKeyboard\n.\nhideKeyboardAccessoryBar\n(\ntrue\n);\n\n      \ncordova\n.\nplugins\n.\nKeyboard\n.\ndisableScroll\n(\ntrue\n);\n\n    \n}\n\n    \nif\n \n(\nwindow\n.\nStatusBar\n)\n \n{\n\n      \nStatusBar\n.\nstyleDefault\n();\n\n    \n}\n\n\n    \n// Branch\n\n    \n$ionicPlatform\n.\non\n(\ndeviceready\n,\n \nfunction\n()\n \n{\n\n      \nbranchInit\n();\n\n    \n});\n\n\n    \n$ionicPlatform\n.\non\n(\nresume\n,\n \nfunction\n()\n \n{\n\n      \nbranchInit\n();\n\n    \n});\n\n\n    \nfunction\n \nbranchInit\n()\n \n{\n\n      \n// Branch initialization\n\n      \nBranch\n.\ninitSession\n(\nfunction\n(\ndata\n)\n \n{\n\n        \n// read deep link data on click\n\n        \nalert\n(\nDeep Link Data: \n \n+\n \nJSON\n.\nstringify\n(\ndata\n));\n\n      \n});\n\n    \n}\n\n  \n});\n\n\n})\n\n\n// ...\n\n\n\n\n\n\n\n\n\nIonic 2 and 3\n\n\n// sample app.component.js\n\n\nimport\n \n{\n \nComponent\n \n}\n \nfrom\n \n@angular/core\n;\n\n\nimport\n \n{\n \nPlatform\n \n}\n \nfrom\n \nionic-angular\n;\n\n\nimport\n \n{\n \nStatusBar\n,\n \nSplashscreen\n \n}\n \nfrom\n \nionic-native\n;\n\n\n\nimport\n \n{\n \nTabsPage\n \n}\n \nfrom\n \n../pages/tabs/tabs\n;\n\n\n\n// Branch import\n\n\ndeclare\n \nvar\n \nBranch\n;\n\n\n\n@Component\n({\n\n  \ntemplate\n:\n \n`\nion-nav [root]=\nrootPage\n/ion-nav\n`\n\n\n})\n\n\nexport\n \nclass\n \nMyApp\n \n{\n\n  \nrootPage\n \n=\n \nTabsPage\n;\n\n\n  \nconstructor\n(\nplatform\n: \nPlatform\n)\n \n{\n\n    \nplatform\n.\nready\n().\nthen\n(()\n \n=\n \n{\n\n      \nStatusBar\n.\nstyleDefault\n();\n\n      \nSplashscreen\n.\nhide\n();\n\n      \nbranchInit\n();\n\n    \n});\n\n\n    \nplatform\n.\nresume\n.\nsubscribe\n(()\n \n=\n \n{\n\n      \nbranchInit\n();\n\n    \n});\n\n\n    \n// Branch initialization\n\n    \nconst\n \nbranchInit\n \n=\n \n()\n \n=\n \n{\n\n      \n// only on devices\n\n      \nif\n \n(\n!\nplatform\n.\nis\n(\ncordova\n))\n \n{\n \nreturn\n \n}\n\n      \nBranch\n.\ninitSession\n(\ndata\n \n=\n \n{\n\n        \n// read deep link data on click\n\n        \nalert\n(\nDeep Link Data: \n \n+\n \nJSON\n.\nstringify\n(\ndata\n));\n\n      \n});\n\n    \n}\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nTest deep link iOS\n\n\n\n\n\n\nCreate a deep link from the \nBranch Marketing Dashboard\n\n\n\n\n\n\nDelete your app from the device\n\n\n\n\n\n\nCompile your app \n(\ncordova run ios\n \nphonegap run ios\n \nionic run ios\n)\n\n\n\n\n\n\nPaste deep link in \nApple Notes\n\n\n\n\n\n\nLong press on the deep link \n(not 3D Touch)\n\n\n\n\n\n\nClick \nOpen in \"APP_NAME\"\n to open your app \n(\nexample\n)\n\n\n\n\n\n\n\n\n\n\nTest deep link Android\n\n\n\n\n\n\nCreate a deep link from the \nBranch Marketing Dashboard\n\n\n\n\n\n\nDelete your app from the device\n\n\n\n\n\n\nCompile your app \n(\ncordova run android\n \nphonegap run android\n \nionic run android\n)\n\n\n\n\n\n\nPaste deep link in \nGoogle Hangouts\n\n\n\n\n\n\nClick on the deep link to open your app\n\n\n\n\n\n\n\n\n\n\nImplement features\n\n\n\n\n\n\nInitialize Branch features\n\n\n\n\n\n\nLoads Branch into your app\n\n\n\n\n\n\nMust be called on \ndeviceready\n and \nresume\n\n\n// for development and debugging only\n\n\nBranch\n.\nsetDebug\n(\ntrue\n)\n\n\n\n// Branch initialization\n\n\nBranch\n.\ninitSession\n(\nfunction\n(\ndata\n)\n \n{\n\n  \n// read deep link data on click\n\n  \nalert\n(\nDeep Link Data: \n \n+\n \nJSON\n.\nstringify\n(\ndata\n))\n\n\n}).\nthen\n(\nfunction\n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n))\n\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate content reference\n\n\n\n\n\n\nThe \nBranch Universal Object\n encapsulates the thing you want to share (content or user)\n\n\n\n\n\n\nLink Data: \nUniversal Object Properties\n\n\n// only canonicalIdentifier is required\n\n\nvar\n \nproperties\n \n=\n \n{\n\n  \ncanonicalIdentifier\n:\n \ncontent/123\n,\n\n  \ncanonicalUrl\n:\n \nhttps://example.com/content/123\n,\n\n  \ntitle\n:\n \nContent 123 Title\n,\n\n  \ncontentDescription\n:\n \nContent 123 Description \n \n+\n \nDate\n.\nnow\n(),\n\n  \ncontentImageUrl\n:\n \nhttp://lorempixel.com/400/400/\n,\n\n  \nprice\n:\n \n12.12\n,\n\n  \ncurrency\n:\n \nGBD\n,\n\n  \ncontentIndexingMode\n:\n \nprivate\n,\n\n  \ncontentMetadata\n:\n \n{\n\n    \ncustom\n:\n \ndata\n,\n\n    \ntesting\n:\n \n123\n,\n\n    \nthis_is\n:\n \ntrue\n\n  \n}\n\n\n}\n\n\n\n// create a branchUniversalObj variable to reference with other Branch methods\n\n\nvar\n \nbranchUniversalObj\n \n=\n \nnull\n\n\nBranch\n.\ncreateBranchUniversalObject\n(\nproperties\n).\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nbranchUniversalObj\n \n=\n \nres\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n))\n\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate deep link\n\n\n\n\n\n\nCreates a deep link URL with encapsulated data\n\n\n\n\n\n\nNeeds a \nBranch Universal Object\n\n\n\n\n\n\nLink Data: \nDeep Link Properties\n\n\n\n\n\n\nVerify on the \nBranch Dashboard\n\n\n// optional fields\n\n\nvar\n \nanalytics\n \n=\n \n{\n\n  \nchannel\n:\n \nfacebook\n,\n\n  \nfeature\n:\n \nonboarding\n,\n\n  \ncampaign\n:\n \ncontent 123 launch\n,\n\n  \nstage\n:\n \nnew user\n,\n\n  \ntags\n:\n \n[\none\n,\n \ntwo\n,\n \nthree\n]\n\n\n}\n\n\n\n// optional fields\n\n\nvar\n \nproperties\n \n=\n \n{\n\n  \n$desktop_url\n:\n \nhttp://www.example.com/desktop\n,\n\n  \n$android_url\n:\n \nhttp://www.example.com/android\n,\n\n  \n$ios_url\n:\n \nhttp://www.example.com/ios\n,\n\n  \n$ipad_url\n:\n \nhttp://www.example.com/ipad\n,\n\n  \n$deeplink_path\n:\n \ncontent/123\n,\n\n  \n$match_duration\n:\n \n2000\n,\n\n  \ncustom_string\n:\n \ndata\n,\n\n  \ncustom_integer\n:\n \nDate\n.\nnow\n(),\n\n  \ncustom_boolean\n:\n \ntrue\n,\n\n  \ncustom_array\n:\n \n[\n1\n,\n \n2\n,\n \n3\n,\n \n4\n,\n \n5\n],\n\n  \ncustom_object\n:\n \n{\n \nrandom\n:\n \ndictionary\n \n}\n\n\n}\n\n\n\nbranchUniversalObj\n.\ngenerateShortUrl\n(\nanalytics\n,\n \nproperties\n).\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n.\nurl\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n))\n\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nShare deep link\n\n\n\n\n\n\nWill generate a Branch deep link and tag it with the channel the user selects\n\n\n\n\n\n\nNeeds a \nBranch Universal Object\n\n\n\n\n\n\nLink Data: \nDeep Link Properties\n\n\n// optional fields\n\n\nvar\n \nanalytics\n \n=\n \n{\n\n  \nchannel\n:\n \nfacebook\n,\n\n  \nfeature\n:\n \nonboarding\n,\n\n  \ncampaign\n:\n \ncontent 123 launch\n,\n\n  \nstage\n:\n \nnew user\n,\n\n  \ntags\n:\n \n[\none\n,\n \ntwo\n,\n \nthree\n]\n\n\n}\n\n\n\n// optional fields\n\n\nvar\n \nproperties\n \n=\n \n{\n\n  \n$desktop_url\n:\n \nhttp://www.example.com/desktop\n,\n\n  \ncustom_string\n:\n \ndata\n,\n\n  \ncustom_integer\n:\n \nDate\n.\nnow\n(),\n\n  \ncustom_boolean\n:\n \ntrue\n,\n\n  \ncustom_array\n:\n \n[\n1\n,\n \n2\n,\n \n3\n,\n \n4\n,\n \n5\n],\n\n  \ncustom_object\n:\n \n{\n \nrandom\n:\n \ndictionary\n \n}\n\n\n}\n\n\n\nvar\n \nmessage\n \n=\n \nCheck out this link\n\n\n\n// optional listeners (must be called before showShareSheet)\n\n\nbranchUniversalObj\n.\nonShareSheetLaunched\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \n// android only\n\n  \nconsole\n.\nlog\n(\nres\n)\n\n\n})\n\n\nbranchUniversalObj\n.\nonShareSheetDismissed\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nconsole\n.\nlog\n(\nres\n)\n\n\n})\n\n\nbranchUniversalObj\n.\nonLinkShareResponse\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nconsole\n.\nlog\n(\nres\n)\n\n\n})\n\n\nbranchUniversalObj\n.\nonChannelSelected\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \n// android only\n\n  \nconsole\n.\nlog\n(\nres\n)\n\n\n})\n\n\n\n// share sheet\n\n\nbranchUniversalObj\n.\nshowShareSheet\n(\nanalytics\n,\n \nproperties\n,\n \nmessage\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nRead deep link\n\n\n\n\n\n\nRetrieve Branch data from a deep link\n\n\n\n\n\n\nBest practice to receive data from the \nlistener\n (to prevent a race condition)\n\n\n\n\n\n\nListener\n\n\n// Branch initialization within your deviceready and resume\n\n\nBranch\n.\ninitSession\n(\nfunction\n(\ndeepLinkData\n)\n \n{\n\n  \n// handler for deep link data on click\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\ndeepLinkData\n))\n\n\n})\n\n\n\n\n\n\n\n\n\nFirst data\n\n\nBranch\n.\ngetFirstReferringParams\n().\nthen\n(\nfunction\n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n))\n\n\n})\n\n\n\n\n\n\n\n\n\nLatest data\n\n\nBranch\n.\ngetLatestReferringParams\n().\nthen\n(\nfunction\n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n))\n\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nNavigate to content\n\n\n\n\nTODO\n\n\n\n\n\n\n\n\nDisplay content\n\n\n\n\n\n\nList content on iOS Spotlight\n\n\n\n\n\n\nNeeds a \nBranch Universal Object\n\n\nbranchUniversalObj\n.\nlistOnSpotlight\n().\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n))\n\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrack content\n\n\n\n\n\n\nTrack how many times a user views a particular piece of content\n\n\n\n\n\n\nNeeds a \nBranch Universal Object\n\n\n\n\n\n\nVerify on the \nBranch Dashboard\n\n\nbranchUniversalObj\n.\nregisterView\n().\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n))\n\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrack users\n\n\n\n\n\n\nSets the identity of a user (email, ID, UUID, etc) for events, deep links, and referrals\n\n\n\n\n\n\nVerify on the \nBranch Dashboard\n  \n\n\nvar\n \nuserId\n \n=\n \n123456\n\n\nBranch\n.\nsetIdentity\n(\nuserId\n).\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n.\nmessage\n))\n\n\n})\n\n\n\n\n\n\n\n\n\nRemoves the identity of a user\n\n\nBranch\n.\nlogout\n().\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n.\nmessage\n))\n\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrack events\n\n\n\n\n\n\nRegisters custom events\n\n\n\n\n\n\nEvents named \nopen\n, \nclose\n, \ninstall\n, and \nreferred session\n are Branch restricted\n\n\n\n\n\n\nRecommened to \nTrack User\n before \nTrack Event\n to associate custom events with a user\n\n\n\n\n\n\nVerify on the \nBranch Dashboard\n\n\nvar\n \neventName\n \n=\n \nclicked_on_this\n\n\nvar\n \nmetadata\n \n=\n \n{\n \ncustom_dictionary\n:\n \n123\n,\n \nanything\n:\n \neverything\n \n}\n\n\nBranch\n.\nuserCompletedAction\n(\neventName\n,\n \nmetaData\n).\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n.\nmessage\n))\n\n\n})\n\n\n\n\n\nvar\n \neventName\n \n=\n \nclicked_on_this\n\n\nBranch\n.\nuserCompletedAction\n(\neventName\n).\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n.\nmessage\n))\n\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrack commerce\n\n\n\n\n\n\nRegisters a custom commerce event\n\n\n\n\n\n\nLink Data: \nTrack commerce properties\n for \nCurrency\n and \nCategory\n \n\n\n\n\n\n\nVerify on the \nBranch Dashboard\n\n\n// only revenue is required\n\n\nvar\n \nevent\n \n=\n \n{\n\n  \nrevenue\n:\n \n50.29\n,\n\n  \ncurrency\n:\n \n148\n,\n \n// USD\n\n  \ntransactionID\n:\n \ntransaction id\n,\n\n  \ncoupon\n:\n \ncoupon\n,\n\n  \nshipping\n:\n \n2.22\n,\n\n  \ntax\n:\n \n5.11\n,\n\n  \naffiliation\n:\n \naffiliation\n,\n\n  \nproducts\n:\n \n[\n\n    \n{\n\n      \nsku\n:\n \nu123\n,\n\n      \nname\n:\n \ncactus\n,\n\n      \nprice\n:\n \n4.99\n,\n\n      \nquantity\n:\n \n2\n,\n\n      \nbrand\n:\n \nbrand\n,\n\n      \ncategory\n:\n \n17\n,\n \n// Software\n\n      \nvariant\n:\n \nvariant\n\n    \n},\n\n    \n{\n\n      \nsku\n:\n \nu456\n,\n\n      \nname\n:\n \ngrass\n,\n\n      \nprice\n:\n \n0.00\n,\n\n      \nquantity\n:\n \n1\n\n    \n}\n\n  \n]\n\n\n}\n\n\n\n// optional fields\n\n\nvar\n \nmetadata\n \n=\n \n{\n\n  \ncustom_dictionary\n:\n \n123\n,\n\n  \nanything\n:\n \neverything\n\n\n}\n\n\n\nBranch\n.\nsendCommerceEvent\n(\nevent\n,\n \nmetadata\n).\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nconsole\n.\nlog\n(\nres\n)\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nconsole\n.\nerror\n(\nerr\n)\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n.\nmessage\n))\n\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nHandle referrals\n\n\n\n\n\n\nReferral points are obtained from events triggered by users from rules created on the \nBranch Dashboard\n\n\n\n\n\n\nVerify on the \nBranch Dashboard\n\n\n\n\n\n\nGet credits\n\n\n\n\n\n\nReferrer is \ntracked\n\n\n\n\n\n\nReferrer \ncreates a deep link\n\n\n\n\n\n\nReferrer \nshares the deep Link\n\n\n\n\n\n\nReferee clicks on deep link\n\n\n\n\n\n\nReferee triggers a \ncustom event\n\n\n\n\n\n\nCatch the event in your Branch Dashboard as a \nrule\n\n\n\n\n\n\nReferrer gets referral points\n\n\n\n\n\n\n\n\n\n\nSpend credits\n\n\nvar\n \namount\n \n=\n \n10\n\n\nvar\n \nbucket\n \n=\n \nthis_bucket\n\n\nBranch\n.\nredeemRewards\n(\namount\n,\n \nbucket\n).\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n))\n\n\n})\n\n\n\n\n\nvar\n \namount\n \n=\n \n10\n\n\nBranch\n.\nredeemRewards\n(\namount\n).\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n))\n\n\n})\n\n\n\n\n\n\n\n\n\nLoad credits\n\n\nvar\n \nbucket\n \n=\n \nthis_bucket\n\n\nBranch\n.\nloadRewards\n(\nbucket\n).\nthen\n(\nfunction\n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n))\n\n\n})\n\n\n\n\n\nBranch\n.\nloadRewards\n().\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n))\n\n\n})\n\n\n\n\n\n\n\n\n\nLoad history\n\n\nBranch\n.\ncreditHistory\n().\nthen\n(\nfunction\n \n(\nres\n)\n \n{\n\n  \nalert\n(\nResponse: \n \n+\n \nJSON\n.\nstringify\n(\nres\n))\n\n\n}).\ncatch\n(\nfunction\n \n(\nerr\n)\n \n{\n\n  \nalert\n(\nError: \n \n+\n \nJSON\n.\nstringify\n(\nerr\n))\n\n\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nTroubleshoot issues\n\n\n\n\n\n\nRecommendations\n\n\n\n\n\n\nNeed to select \n\"app uses IDFA or GAID\"\n when publishing your app\n\n\n\n\n\n\nBest to enable \nDeep views\n (\nTesting: Supported Platforms\n)\n\n\n\n\n\n\n\n\n\n\nOptional app config\n\n\n\n\n\n\nAdditional configuration for custom link domains, simulating installs, unique bundle identifiers, etc\n\n\n!-- sample config.xml --\n\n\nwidget\n \nid=\ncom.eneff.branch.cordovatestbed\n \nversion=\n1.0.0\n \nxmlns=\nhttp://www.w3.org/ns/widgets\n \nxmlns:cdv=\nhttp://cordova.apache.org/ns/1.0\n\n  \n!-- Branch --\n\n  \nplugin\n \nname=\nbranch-cordova-sdk\n \nspec=\n~2.4.2\n \n/\n \n!-- optional spec --\n\n  \nbranch-config\n\n    \nbranch-key\n \nvalue=\nkey_live_ndqptlgXNE4LHqIahH1WIpbiyFlb62J3\n \n/\n\n    \nuri-scheme\n \nvalue=\nbranchcordova\n \n/\n\n    \nlink-domain\n \nvalue=\nyourcustomdomain.com\n \n/\n\n    \nlink-domain\n \nvalue=\ncordova.app.link\n \n/\n  \n!-- optional previous link domain --\n\n    \nlink-domain\n \nvalue=\nbnc.lt\n \n/\n  \n!-- optional previous link domain --\n\n    \nios-team-release\n \nvalue=\nPW4Q8885U7\n \n/\n \n!-- required if iOS app --\n\n    \nios-team-debug\n \nvalue=\nFG35JLLMXX\n \n/\n \n!-- optional --\n\n    \nandroid-prefix\n \nvalue=\n/WSuf\n \n/\n \n!-- optional (for bnc.lt and custom domains) --\n\n    \nandroid-testmode\n \nvalue=\ntrue\n \n/\n \n!-- optional (simulate installs) --\n\n  \n/branch-config\n\n\n\n\n\nwidget\n \nios-CFBundleIdentifier=\ncom.eneff.branch.cordovatestbedios\n \nandroid-packageName=\ncom.eneff.branch.cordovatestbedandroid\n \nversion=\n1.0.0\n \nxmlns=\nhttp://www.w3.org/ns/widgets\n \nxmlns:cdv=\nhttp://cordova.apache.org/ns/1.0\n\n\n\n\n\n\n\n\n\n\n\n\n\nSimulate an install\n\n\n\n\n\n\nDelete your app\n\n\n\n\n\n\n[iOS]\n iPhone Device -\n Settings -\n Privacy -\n Advertising -\n Reset Advertising Identifier -\n Reset Identifier\n\n\n\n\n\n\n[Android]\n Add \nandroid-testmode value=\"true\" /\n to your \nConfig.xml\n (\nTesting: Optional App Config\n)\n\n\n\n\n\n\nAdd \nBranch.setDebug(true);\n before \nBranch.initSession();\n (\nInitialize Branch Features\n)   \n\n\n\n\n\n\nClick on a deep link to navigate to your \n$fallback_url\n because your app is not installed\n\n\n\n\n\n\nInstall your app\n\n\n\n\n\n\nOpen your app\n\n\n\n\n\n\nRead from \nBranch.initSession(data)\n for \n+is_first_session = true\n \n\n\n\n\n\n\n\n\n\n\nSample app\n\n\n\n\nBranch Testbed App\n\n\n\n\n\n\n\n\nUniversal Object properties\n\n\n\n\n\n\nFor \nCreate Content Reference\n\n\n\n\n\n\n\n\nKey\n\n\nDefault\n\n\nUsage\n\n\nLink Property\n\n\n\n\n\n\n\n\n\n\ncanonicalIdentifier\n\n\n\n\n(Required)\n This is the unique identifier for content that will help Branch dedupe across many instances of the same thing. Suitable options: a website with pathing, or a database with identifiers for entities\n\n\n$canonical_identifier\n\n\n\n\n\n\ncanonicalUrl\n\n\n\n\nThe canonical URL, used for SEO purposes\n\n\n$canonical_url\n\n\n\n\n\n\ntitle\n\n\n\n\nThe name for the piece of content\n\n\n$og_title\n\n\n\n\n\n\ncontentDescription\n\n\n\n\nA description for the content\n\n\n$og_description\n\n\n\n\n\n\ncontentImageUrl\n\n\n\n\nThe image URL for the content. Must be an absolute path\n\n\n$og_image_url\n\n\n\n\n\n\nprice\n\n\n\n\nThe price of the item\n\n\n$amount\n\n\n\n\n\n\ncurrency\n\n\n\n\nThe currency representing the price in ISO 4217 currency code\n\n\n$currency\n\n\n\n\n\n\ncontentIndexingMode\n\n\n\"public\"\n\n\nCan be set to either \n\"public\"\n or \n\"private\"\n. Public indicates that you\u2019d like this content to be discovered by other apps.\n\n\n$publicly_indexable\n\n\n\n\n\n\ncontentMetadata\n\n\n\n\nAny custom key-value data e.g. \n{ \"custom\": \"data\" }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommerce properties\n\n\n\n\n\n\nFor \nTrack Commerce\n\n\n\n\n\n\nCategories\n\n\n\n\n\n\n\n\nValue\n\n\nCategory\n\n\nValue\n\n\nCategory\n\n\n\n\n\n\n\n\n\n\n0\n\n\nAnimals \n Pet Supplies\n\n\n11\n\n\nHome \n Garden\n\n\n\n\n\n\n1\n\n\nApparel \n Accessories\n\n\n12\n\n\nLuggage \n Bags\n\n\n\n\n\n\n2\n\n\nArts \n Entertainment\n\n\n13\n\n\nMature\n\n\n\n\n\n\n3\n\n\nBaby \n Toddler\n\n\n14\n\n\nMedia\n\n\n\n\n\n\n4\n\n\nBusiness \n Industrial\n\n\n15\n\n\nOffice Supplies\n\n\n\n\n\n\n5\n\n\nCamera \n Optics\n\n\n16\n\n\nReligious \n Ceremonial\n\n\n\n\n\n\n6\n\n\nElectronics\n\n\n17\n\n\nSoftware\n\n\n\n\n\n\n7\n\n\nFood, Beverage \n Tobacco\n\n\n18\n\n\nSporting Goods\n\n\n\n\n\n\n8\n\n\nFurniture\n\n\n19\n\n\nToys \n Games\n\n\n\n\n\n\n9\n\n\nHardware\n\n\n20\n\n\nVehicles \n Parts\n\n\n\n\n\n\n10\n\n\nHealth \n Beauty\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCurrencies\n\n\n\n\n\n\n\n\nValue\n\n\nCurrency\n\n\nValue\n\n\nCurrency\n\n\nValue\n\n\nCurrency\n\n\n\n\n\n\n\n\n\n\n0\n\n\nAED\n\n\n60\n\n\nHKD\n\n\n120\n\n\nRSD\n\n\n\n\n\n\n1\n\n\nAFN\n\n\n61\n\n\nHNL\n\n\n121\n\n\nRUB\n\n\n\n\n\n\n2\n\n\nALL\n\n\n62\n\n\nHRK\n\n\n122\n\n\nRWF\n\n\n\n\n\n\n3\n\n\nAMD\n\n\n63\n\n\nHTG\n\n\n123\n\n\nSAR\n\n\n\n\n\n\n4\n\n\nANG\n\n\n64\n\n\nHUF\n\n\n124\n\n\nSBD\n\n\n\n\n\n\n5\n\n\nAOA\n\n\n65\n\n\nIDR\n\n\n125\n\n\nSCR\n\n\n\n\n\n\n6\n\n\nARS\n\n\n66\n\n\nILS\n\n\n126\n\n\nSDG\n\n\n\n\n\n\n7\n\n\nAUD\n\n\n67\n\n\nINR\n\n\n127\n\n\nSEK\n\n\n\n\n\n\n8\n\n\nAWG\n\n\n68\n\n\nIQD\n\n\n128\n\n\nSGD\n\n\n\n\n\n\n9\n\n\nAZN\n\n\n69\n\n\nIRR\n\n\n129\n\n\nSHP\n\n\n\n\n\n\n10\n\n\nBAM\n\n\n70\n\n\nISK\n\n\n130\n\n\nSLL\n\n\n\n\n\n\n11\n\n\nBBD\n\n\n71\n\n\nJMD\n\n\n131\n\n\nSOS\n\n\n\n\n\n\n12\n\n\nBDT\n\n\n72\n\n\nJOD\n\n\n132\n\n\nSRD\n\n\n\n\n\n\n13\n\n\nBGN\n\n\n73\n\n\nJPY\n\n\n133\n\n\nSSP\n\n\n\n\n\n\n14\n\n\nBHD\n\n\n74\n\n\nKES\n\n\n134\n\n\nSTD\n\n\n\n\n\n\n15\n\n\nBIF\n\n\n75\n\n\nKGS\n\n\n135\n\n\nSYP\n\n\n\n\n\n\n16\n\n\nBMD\n\n\n76\n\n\nKHR\n\n\n136\n\n\nSZL\n\n\n\n\n\n\n17\n\n\nBND\n\n\n77\n\n\nKMF\n\n\n137\n\n\nTHB\n\n\n\n\n\n\n18\n\n\nBOB\n\n\n78\n\n\nKPW\n\n\n138\n\n\nTJS\n\n\n\n\n\n\n19\n\n\nBOV\n\n\n79\n\n\nKRW\n\n\n139\n\n\nTMT\n\n\n\n\n\n\n20\n\n\nBRL\n\n\n80\n\n\nKWD\n\n\n140\n\n\nTND\n\n\n\n\n\n\n21\n\n\nBSD\n\n\n81\n\n\nKYD\n\n\n141\n\n\nTOP\n\n\n\n\n\n\n22\n\n\nBTN\n\n\n82\n\n\nKZT\n\n\n142\n\n\nTRY\n\n\n\n\n\n\n23\n\n\nBWP\n\n\n83\n\n\nLAK\n\n\n143\n\n\nTTD\n\n\n\n\n\n\n24\n\n\nBYN\n\n\n84\n\n\nLBP\n\n\n144\n\n\nTWD\n\n\n\n\n\n\n25\n\n\nBYR\n\n\n85\n\n\nLKR\n\n\n145\n\n\nTZS\n\n\n\n\n\n\n26\n\n\nBZD\n\n\n86\n\n\nLRD\n\n\n146\n\n\nUAH\n\n\n\n\n\n\n27\n\n\nCAD\n\n\n87\n\n\nLSL\n\n\n147\n\n\nUGX\n\n\n\n\n\n\n28\n\n\nCDF\n\n\n88\n\n\nLYD\n\n\n148\n\n\nUSD\n\n\n\n\n\n\n29\n\n\nCHE\n\n\n89\n\n\nMAD\n\n\n149\n\n\nUSN\n\n\n\n\n\n\n30\n\n\nCHF\n\n\n90\n\n\nMDL\n\n\n150\n\n\nUYI\n\n\n\n\n\n\n31\n\n\nCHW\n\n\n91\n\n\nMGA\n\n\n151\n\n\nUYU\n\n\n\n\n\n\n32\n\n\nCLF\n\n\n92\n\n\nMKD\n\n\n152\n\n\nUZS\n\n\n\n\n\n\n33\n\n\nCLP\n\n\n93\n\n\nMMK\n\n\n153\n\n\nVEF\n\n\n\n\n\n\n34\n\n\nCNY\n\n\n94\n\n\nMNT\n\n\n154\n\n\nVND\n\n\n\n\n\n\n35\n\n\nCOP\n\n\n95\n\n\nMOP\n\n\n155\n\n\nVUV\n\n\n\n\n\n\n36\n\n\nCOU\n\n\n96\n\n\nMRO\n\n\n156\n\n\nWST\n\n\n\n\n\n\n37\n\n\nCRC\n\n\n97\n\n\nMUR\n\n\n157\n\n\nXAF\n\n\n\n\n\n\n38\n\n\nCUC\n\n\n98\n\n\nMVR\n\n\n158\n\n\nXAG\n\n\n\n\n\n\n39\n\n\nCUP\n\n\n99\n\n\nMWK\n\n\n159\n\n\nXAU\n\n\n\n\n\n\n40\n\n\nCVE\n\n\n100\n\n\nMXN\n\n\n160\n\n\nXBA\n\n\n\n\n\n\n41\n\n\nCZK\n\n\n101\n\n\nMXV\n\n\n161\n\n\nXBB\n\n\n\n\n\n\n42\n\n\nDJF\n\n\n102\n\n\nMYR\n\n\n162\n\n\nXBC\n\n\n\n\n\n\n43\n\n\nDKK\n\n\n103\n\n\nMZN\n\n\n163\n\n\nXBD\n\n\n\n\n\n\n44\n\n\nDOP\n\n\n104\n\n\nNAD\n\n\n164\n\n\nXCD\n\n\n\n\n\n\n45\n\n\nDZD\n\n\n105\n\n\nNGN\n\n\n165\n\n\nXDR\n\n\n\n\n\n\n46\n\n\nEGP\n\n\n106\n\n\nNIO\n\n\n166\n\n\nXFU\n\n\n\n\n\n\n47\n\n\nERN\n\n\n107\n\n\nNOK\n\n\n167\n\n\nXOF\n\n\n\n\n\n\n48\n\n\nETB\n\n\n108\n\n\nNPR\n\n\n168\n\n\nXPD\n\n\n\n\n\n\n49\n\n\nEUR\n\n\n109\n\n\nNZD\n\n\n169\n\n\nXPF\n\n\n\n\n\n\n50\n\n\nFJD\n\n\n110\n\n\nOMR\n\n\n170\n\n\nXPT\n\n\n\n\n\n\n51\n\n\nFKP\n\n\n111\n\n\nPAB\n\n\n171\n\n\nXSU\n\n\n\n\n\n\n52\n\n\nGBP\n\n\n112\n\n\nPEN\n\n\n172\n\n\nXTS\n\n\n\n\n\n\n53\n\n\nGEL\n\n\n113\n\n\nPGK\n\n\n173\n\n\nXUA\n\n\n\n\n\n\n54\n\n\nGHS\n\n\n114\n\n\nPHP\n\n\n174\n\n\nXXX\n\n\n\n\n\n\n55\n\n\nGIP\n\n\n115\n\n\nPKR\n\n\n175\n\n\nYER\n\n\n\n\n\n\n56\n\n\nGMD\n\n\n116\n\n\nPLN\n\n\n176\n\n\nZAR\n\n\n\n\n\n\n57\n\n\nGNF\n\n\n117\n\n\nPYG\n\n\n177\n\n\nZMW\n\n\n\n\n\n\n58\n\n\nGTQ\n\n\n118\n\n\nQAR\n\n\n\n\n\n\n\n\n\n\n59\n\n\nGYD\n\n\n119\n\n\nRON\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCordova dependencies\n\n\n\n\n\n\nNode\n\n\n/usr/bin/ruby -e \n$(\ncurl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install\n)\n;\n\nbrew update\n;\n\nbrew install node\n;\n\n\n\n\n\n\n\n\n\nXcode\n\n\n\n\n\n\nInstall \nXcode\n\n\n\n\n\n\nOpen Xcode -\n agree to SDK license agreement\n\n\n\n\n\n\nOpen Xcode -\n Create new Xcode project -\n Run simulator -\n Agree to developer mode on mac\n\n\n\n\n\n\n\n\n\n\nAndroid Studio\n\n\n\n\n\n\nRead \ninstructions\n\n\n\n\n\n\nInstall \nJVM\n\n\n\n\n\n\nInstall \nAndroid Studio\n\n\n\n\n\n\nOpen Android Studio -\n configure -\n appearance/system settings/android sdk -\n android 6.0 -\n Okay\n\n\n\n\n\n\nOpen Android Studio -\n New project -\n ... -\n Run -\n Create new emulator -\n Nexus 6p 23 -\n Finish\n\n\n# add to ~/.bash_profile\n\n\nexport\n \nANDROID_HOME\n=\n$HOME\n/Library/Android/sdk\n\nexport\n \nPATH\n=\n$ANDROID_HOME\n/tools:\n$PATH\n\n\nexport\n \nPATH\n=\n$ANDROID_HOME\n/platform-tools:\n$PATH\n\n\n\n\n\nsource\n ~/.bash_profile\n;\n\n\n\n\n\nandroid update sdk\n;\n\n\n\n\n\n\n\n\n\nInstall Android SDK build-tools 24.0.1\n\n\n\n\n\n\nGenerate Android Keystore\n\n\nkeytool -genkeypair -dname \ncn=Full Name, ou=Business Unit, o=Company, c=US\n -alias release -keypass aaa111 -keystore release.keystore -storepass aaa111 -validity \n10000\n \nkeytool -list -v -keystore release.keystore\n\n\n\n\n\n\n\n\n\n\n\n\nGenymotion \n[optional]\n\n\n\n\n\n\nInstall \nVirtual Box\n\n\n\n\n\n\nInstall \nGenymotion\n\n\n\n\n\n\nGenymotion -\n Add virtual device -\n Google Nexus 6P - 6.0.0 - API 23 -\n Next\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDisplay console logs\n\n\n\n\n\n\niOS Simulator\n\n\n\n\n\n\ncordova run ios;\n\n\n\n\n\n\nSafari -\n Preferences -\n Advance -\n Show Develop menu in menu bar\n\n\n\n\n\n\nSafari -\n Develop -\n Simulator -\n index.html -\n Console\n\n\n\n\n\n\nMay need to unplug and replug device\n\n\n\n\n\n\nMay need to open Xcode and update provisioning profile\n\n\n\n\n\n\n\n\n\n\niOS Xcode\n\n\n\n\n\n\ncordova plugin add cordova-plugin-console;\n\n\n\n\n\n\ncordova build ios;\n\n\n\n\n\n\nXcode -\n APP_LOCATION/platforms/ios/APP_NAME.Xcodeproj\n\n\n\n\n\n\nXcode -\n App -\n General -\n Signing -\n Team\n\n\n\n\n\n\nXcode -\n Product -\n Run\n\n\n\n\n\n\nXcode -\n View -\n Debug Area -\n Activate Console\n\n\n\n\n\n\n\n\n\n\nAndroid Device\n\n\n\n\n\n\nPlug device in\n\n\n\n\n\n\ncordova run android;\n\n\n\n\n\n\nChrome -\n \nchrome://inspect/#devices\n -\n Console\n\n\n\n\n\n\n\n\n\n\nAndroid Genymotion\n\n\n\n\n\n\nGenymotion -\n Start\n\n\n\n\n\n\ncordova run android;\n\n\n\n\n\n\nChrome -\n \nchrome://inspect/#devices\n -\n Console\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUpdate the Branch SDK\n\n\n\n\n\n\nTo get the latest improvements and capabilities\n\n\n# terminal\n\ncordova plugin remove io.branch.sdk\ncordova plugin remove branch-cordova-sdk\n\n\n\n\n!-- config.xml --\n\n\nplugin\n \nname=\nbranch-cordova-sdk\n \nspec=\n^2.5.0\n \n/\n\n\n\n\n\n\n\n\n\n\n\n\n\nIncompatible plugins\n\n\n\n\n\n\nThe following plugins will not work with the Branch SDK\n\n\n\n\n\n\nPhoneGap NFC Plugin\n\n\n\n\n\n\nCustom URL scheme\n\n\n\n\n\n\nCordova Universal Links Plugin\n\n\n\n\n\n\nIonic Deeplinks Plugin\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCordova errors\n\n\n\n\n\n\nBranch opens and installs your app, so you cannot simulate Branch in the desktop browser\n\n\n\n\n\n\nError\n\n\nORIGINAL EXCEPTION: Branch is not defined\n\n\n\n\nReferenceError: Branch is not defined\n\n\n\n\n\n\n\n\nSolution \n\n\n// Ionic 2/3 - running on browser instead of device\n\n\nif\n \n(\n!\nplatform\n.\nis\n(\ncordova\n))\n \n{\n \nreturn\n \n}\n\n\nBranch\n.\nuserCompletedAction\n(\ndid_this\n)\n\n\n\n\n\n// Ionic 2/3 - missing Branch import\n\n\ndeclare\n \nvar\n \nBranch\n\n\n\n\n\n\n\n\n\n\n\n\n\nProvisioning Profile missing\n\n\n\n\n\n\nError\n\n\n** ARCHIVE FAILED **\n\nThe following build commands failed:\n  Check dependencies\n\n(\n1\n failure\n)\n\nError: Error code \n65\n \nfor\n command: xcodebuild with args: -xcconfig,cordova/build-debug.xcconfig,-workspace,Branch Testing.xcworkspace,-scheme,Branch Testing,-configuration,Debug,-destination,generic/platform\n=\niOS,-archivePath,Branch Testing.xcarchive,archive,CONFIGURATION_BUILD_DIR\n=\nbuild/device,SHARED_PRECOMPS_DIR\n=\nbuild/sharedpch\n\n\n\n\nNo profiles \nfor\n \ncom.eneff.branch.cordova_testbed\n were found\n\n\n\n\n\n\n\n\nSolution  \n\n\n\n\nFix by opening your app in \nXcode\n and launch from there (to select a \nProvisioning Profile\n)\n\n\n\n\n\n\n\n\n\n\n\n\nInvalid bundle id\n\n\n\n\n\n\nError\n\n\nAn invalid value \nXC com eneff branch cordova_testbed\n was provided \nfor\n the parameter \nappIdName\n.\n\n\n\n\nError: Error code \n1\n \nfor\n command: /gradlew with args: cdvBuildDebug,-b,/build.gradle,-Dorg.gradle.daemon\n=\ntrue,-Pandroid.useDeprecatedNdk\n=\ntrue\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\nDon't use \ncordova\n, \nhyphens\n (Android), or \nunderscores\n (iOS) in your bundle id (widget id)", 
            "title": "Cordova PhoneGap Ionic"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#integrate-branch", 
            "text": "", 
            "title": "Integrate Branch"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#configure-branch", 
            "text": "Complete your  Branch Dashboard", 
            "title": "Configure Branch"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#configure-app", 
            "text": "Cordova and Ionic  !-- sample config.xml --  widget   id= com.eneff.branch.cordovatestbed   version= 0.0.1   xmlns= http://www.w3.org/ns/widgets   xmlns:cdv= http://cordova.apache.org/ns/1.0 \n   !-- Branch -- \n   plugin   name= branch-cordova-sdk   spec= ^2.5.0   / \n   branch-config \n     branch-key   value= key_live_ndqptlgXNE4LHqIahH1WIpbiyFlb62J3   / \n     uri-scheme   value= branchcordova   / \n     link-domain   value= cordova.app.link   / \n     ios-team-release   value= PW4Q8885U7   / \n   /branch-config     PhoneGap  !-- sample config.xml --  widget   id= com.eneff.branch.cordovatestbed   version= 1.0.0   xmlns= http://www.w3.org/ns/widgets   xmlns:gap= http://phonegap.com/ns/1.0 \n   !-- Branch -- \n   plugin   name= branch-cordova-sdk   spec= ^2.5.0   / \n   branch-config \n     branch-key   value= key_live_ndqptlgXNE4LHqIahH1WIpbiyFlb62J3   / \n     uri-scheme   value= branchcordova   / \n     link-domain   value= cordova.app.link   / \n     ios-team-release   value= PW4Q8885U7   / \n   /branch-config     Change the following values to match your  Branch Dashboard   com.eneff.branch.cordovatestbed  key_live_ndqptlgXNE4LHqIahH1WIpbiyFlb62J3  branchcordova  cordova.app.link  PW4Q8885U7", 
            "title": "Configure app"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#initialize-branch", 
            "text": "Cordova and PhoneGap  // sample index.js  var   app   =   { \n   initialize :   function ()   { \n     this . bindEvents (); \n   }, \n   bindEvents :   function ()   { \n     document . addEventListener ( deviceready ,   this . onDeviceReady ,   false ); \n     document . addEventListener ( resume ,   this . onDeviceResume ,   false ); \n   }, \n   onDeviceReady :   function ()   { \n     app . branchInit (); \n   }, \n   onDeviceResume :   function ()   { \n     app . branchInit (); \n   }, \n   branchInit :   function ()   { \n     // Branch initialization \n     Branch . initSession ( function ( data )   { \n       // read deep link data on click \n       alert ( Deep Link Data:    +   JSON . stringify ( data )); \n     }); \n   }  };  app . initialize ();     Ionic 1  // sample app.js  angular . module ( starter ,   [ ionic ,   starter.controllers ,   starter.services ])  . run ( function ( $ionicPlatform )   { \n   $ionicPlatform . ready ( function ()   { \n     if   ( window . cordova     window . cordova . plugins     window . cordova . plugins . Keyboard )   { \n       cordova . plugins . Keyboard . hideKeyboardAccessoryBar ( true ); \n       cordova . plugins . Keyboard . disableScroll ( true ); \n     } \n     if   ( window . StatusBar )   { \n       StatusBar . styleDefault (); \n     } \n\n     // Branch \n     $ionicPlatform . on ( deviceready ,   function ()   { \n       branchInit (); \n     }); \n\n     $ionicPlatform . on ( resume ,   function ()   { \n       branchInit (); \n     }); \n\n     function   branchInit ()   { \n       // Branch initialization \n       Branch . initSession ( function ( data )   { \n         // read deep link data on click \n         alert ( Deep Link Data:    +   JSON . stringify ( data )); \n       }); \n     } \n   });  })  // ...     Ionic 2 and 3  // sample app.component.js  import   {   Component   }   from   @angular/core ;  import   {   Platform   }   from   ionic-angular ;  import   {   StatusBar ,   Splashscreen   }   from   ionic-native ;  import   {   TabsPage   }   from   ../pages/tabs/tabs ;  // Branch import  declare   var   Branch ;  @Component ({ \n   template :   ` ion-nav [root]= rootPage /ion-nav `  })  export   class   MyApp   { \n   rootPage   =   TabsPage ; \n\n   constructor ( platform :  Platform )   { \n     platform . ready (). then (()   =   { \n       StatusBar . styleDefault (); \n       Splashscreen . hide (); \n       branchInit (); \n     }); \n\n     platform . resume . subscribe (()   =   { \n       branchInit (); \n     }); \n\n     // Branch initialization \n     const   branchInit   =   ()   =   { \n       // only on devices \n       if   ( ! platform . is ( cordova ))   {   return   } \n       Branch . initSession ( data   =   { \n         // read deep link data on click \n         alert ( Deep Link Data:    +   JSON . stringify ( data )); \n       }); \n     } \n   }  }", 
            "title": "Initialize Branch"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#test-deep-link-ios", 
            "text": "Create a deep link from the  Branch Marketing Dashboard    Delete your app from the device    Compile your app  ( cordova run ios   phonegap run ios   ionic run ios )    Paste deep link in  Apple Notes    Long press on the deep link  (not 3D Touch)    Click  Open in \"APP_NAME\"  to open your app  ( example )", 
            "title": "Test deep link iOS"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#test-deep-link-android", 
            "text": "Create a deep link from the  Branch Marketing Dashboard    Delete your app from the device    Compile your app  ( cordova run android   phonegap run android   ionic run android )    Paste deep link in  Google Hangouts    Click on the deep link to open your app", 
            "title": "Test deep link Android"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#implement-features", 
            "text": "", 
            "title": "Implement features"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#initialize-branch-features", 
            "text": "Loads Branch into your app    Must be called on  deviceready  and  resume  // for development and debugging only  Branch . setDebug ( true )  // Branch initialization  Branch . initSession ( function ( data )   { \n   // read deep link data on click \n   alert ( Deep Link Data:    +   JSON . stringify ( data ))  }). then ( function ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function ( err )   { \n   alert ( Error:    +   JSON . stringify ( err ))  })", 
            "title": "Initialize Branch features"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#create-content-reference", 
            "text": "The  Branch Universal Object  encapsulates the thing you want to share (content or user)    Link Data:  Universal Object Properties  // only canonicalIdentifier is required  var   properties   =   { \n   canonicalIdentifier :   content/123 , \n   canonicalUrl :   https://example.com/content/123 , \n   title :   Content 123 Title , \n   contentDescription :   Content 123 Description    +   Date . now (), \n   contentImageUrl :   http://lorempixel.com/400/400/ , \n   price :   12.12 , \n   currency :   GBD , \n   contentIndexingMode :   private , \n   contentMetadata :   { \n     custom :   data , \n     testing :   123 , \n     this_is :   true \n   }  }  // create a branchUniversalObj variable to reference with other Branch methods  var   branchUniversalObj   =   null  Branch . createBranchUniversalObject ( properties ). then ( function   ( res )   { \n   branchUniversalObj   =   res \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function   ( err )   { \n   alert ( Error:    +   JSON . stringify ( err ))  })", 
            "title": "Create content reference"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#create-deep-link", 
            "text": "Creates a deep link URL with encapsulated data    Needs a  Branch Universal Object    Link Data:  Deep Link Properties    Verify on the  Branch Dashboard  // optional fields  var   analytics   =   { \n   channel :   facebook , \n   feature :   onboarding , \n   campaign :   content 123 launch , \n   stage :   new user , \n   tags :   [ one ,   two ,   three ]  }  // optional fields  var   properties   =   { \n   $desktop_url :   http://www.example.com/desktop , \n   $android_url :   http://www.example.com/android , \n   $ios_url :   http://www.example.com/ios , \n   $ipad_url :   http://www.example.com/ipad , \n   $deeplink_path :   content/123 , \n   $match_duration :   2000 , \n   custom_string :   data , \n   custom_integer :   Date . now (), \n   custom_boolean :   true , \n   custom_array :   [ 1 ,   2 ,   3 ,   4 ,   5 ], \n   custom_object :   {   random :   dictionary   }  }  branchUniversalObj . generateShortUrl ( analytics ,   properties ). then ( function   ( res )   { \n   alert ( Response:    +   JSON . stringify ( res . url ))  }). catch ( function   ( err )   { \n   alert ( Error:    +   JSON . stringify ( err ))  })", 
            "title": "Create deep link"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#share-deep-link", 
            "text": "Will generate a Branch deep link and tag it with the channel the user selects    Needs a  Branch Universal Object    Link Data:  Deep Link Properties  // optional fields  var   analytics   =   { \n   channel :   facebook , \n   feature :   onboarding , \n   campaign :   content 123 launch , \n   stage :   new user , \n   tags :   [ one ,   two ,   three ]  }  // optional fields  var   properties   =   { \n   $desktop_url :   http://www.example.com/desktop , \n   custom_string :   data , \n   custom_integer :   Date . now (), \n   custom_boolean :   true , \n   custom_array :   [ 1 ,   2 ,   3 ,   4 ,   5 ], \n   custom_object :   {   random :   dictionary   }  }  var   message   =   Check out this link  // optional listeners (must be called before showShareSheet)  branchUniversalObj . onShareSheetLaunched ( function   ( res )   { \n   // android only \n   console . log ( res )  })  branchUniversalObj . onShareSheetDismissed ( function   ( res )   { \n   console . log ( res )  })  branchUniversalObj . onLinkShareResponse ( function   ( res )   { \n   console . log ( res )  })  branchUniversalObj . onChannelSelected ( function   ( res )   { \n   // android only \n   console . log ( res )  })  // share sheet  branchUniversalObj . showShareSheet ( analytics ,   properties ,   message )", 
            "title": "Share deep link"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#read-deep-link", 
            "text": "Retrieve Branch data from a deep link    Best practice to receive data from the  listener  (to prevent a race condition)    Listener  // Branch initialization within your deviceready and resume  Branch . initSession ( function ( deepLinkData )   { \n   // handler for deep link data on click \n   alert ( Response:    +   JSON . stringify ( deepLinkData ))  })     First data  Branch . getFirstReferringParams (). then ( function ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function ( err )   { \n   alert ( Error:    +   JSON . stringify ( err ))  })     Latest data  Branch . getLatestReferringParams (). then ( function ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function ( err )   { \n   alert ( Error:    +   JSON . stringify ( err ))  })", 
            "title": "Read deep link"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#navigate-to-content", 
            "text": "TODO", 
            "title": "Navigate to content"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#display-content", 
            "text": "List content on iOS Spotlight    Needs a  Branch Universal Object  branchUniversalObj . listOnSpotlight (). then ( function   ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function   ( err )   { \n   alert ( Error:    +   JSON . stringify ( err ))  })", 
            "title": "Display content"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#track-content", 
            "text": "Track how many times a user views a particular piece of content    Needs a  Branch Universal Object    Verify on the  Branch Dashboard  branchUniversalObj . registerView (). then ( function   ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function   ( err )   { \n   alert ( Error:    +   JSON . stringify ( err ))  })", 
            "title": "Track content"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#track-users", 
            "text": "Sets the identity of a user (email, ID, UUID, etc) for events, deep links, and referrals    Verify on the  Branch Dashboard     var   userId   =   123456  Branch . setIdentity ( userId ). then ( function   ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function   ( err )   { \n   alert ( Error:    +   JSON . stringify ( err . message ))  })     Removes the identity of a user  Branch . logout (). then ( function   ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function   ( err )   { \n   alert ( Error:    +   JSON . stringify ( err . message ))  })", 
            "title": "Track users"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#track-events", 
            "text": "Registers custom events    Events named  open ,  close ,  install , and  referred session  are Branch restricted    Recommened to  Track User  before  Track Event  to associate custom events with a user    Verify on the  Branch Dashboard  var   eventName   =   clicked_on_this  var   metadata   =   {   custom_dictionary :   123 ,   anything :   everything   }  Branch . userCompletedAction ( eventName ,   metaData ). then ( function   ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function   ( err )   { \n   alert ( Error:    +   JSON . stringify ( err . message ))  })   var   eventName   =   clicked_on_this  Branch . userCompletedAction ( eventName ). then ( function   ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function   ( err )   { \n   alert ( Error:    +   JSON . stringify ( err . message ))  })", 
            "title": "Track events"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#track-commerce", 
            "text": "Registers a custom commerce event    Link Data:  Track commerce properties  for  Currency  and  Category      Verify on the  Branch Dashboard  // only revenue is required  var   event   =   { \n   revenue :   50.29 , \n   currency :   148 ,   // USD \n   transactionID :   transaction id , \n   coupon :   coupon , \n   shipping :   2.22 , \n   tax :   5.11 , \n   affiliation :   affiliation , \n   products :   [ \n     { \n       sku :   u123 , \n       name :   cactus , \n       price :   4.99 , \n       quantity :   2 , \n       brand :   brand , \n       category :   17 ,   // Software \n       variant :   variant \n     }, \n     { \n       sku :   u456 , \n       name :   grass , \n       price :   0.00 , \n       quantity :   1 \n     } \n   ]  }  // optional fields  var   metadata   =   { \n   custom_dictionary :   123 , \n   anything :   everything  }  Branch . sendCommerceEvent ( event ,   metadata ). then ( function   ( res )   { \n   console . log ( res ) \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function   ( err )   { \n   console . error ( err ) \n   alert ( Error:    +   JSON . stringify ( err . message ))  })", 
            "title": "Track commerce"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#handle-referrals", 
            "text": "Referral points are obtained from events triggered by users from rules created on the  Branch Dashboard    Verify on the  Branch Dashboard    Get credits    Referrer is  tracked    Referrer  creates a deep link    Referrer  shares the deep Link    Referee clicks on deep link    Referee triggers a  custom event    Catch the event in your Branch Dashboard as a  rule    Referrer gets referral points      Spend credits  var   amount   =   10  var   bucket   =   this_bucket  Branch . redeemRewards ( amount ,   bucket ). then ( function   ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function   ( err )   { \n   alert ( Error:    +   JSON . stringify ( err ))  })   var   amount   =   10  Branch . redeemRewards ( amount ). then ( function   ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function   ( err )   { \n   alert ( Error:    +   JSON . stringify ( err ))  })     Load credits  var   bucket   =   this_bucket  Branch . loadRewards ( bucket ). then ( function ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function ( err )   { \n   alert ( Error:    +   JSON . stringify ( err ))  })   Branch . loadRewards (). then ( function   ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function   ( err )   { \n   alert ( Error:    +   JSON . stringify ( err ))  })     Load history  Branch . creditHistory (). then ( function   ( res )   { \n   alert ( Response:    +   JSON . stringify ( res ))  }). catch ( function   ( err )   { \n   alert ( Error:    +   JSON . stringify ( err ))  })", 
            "title": "Handle referrals"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#troubleshoot-issues", 
            "text": "", 
            "title": "Troubleshoot issues"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#recommendations", 
            "text": "Need to select  \"app uses IDFA or GAID\"  when publishing your app    Best to enable  Deep views  ( Testing: Supported Platforms )", 
            "title": "Recommendations"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#optional-app-config", 
            "text": "Additional configuration for custom link domains, simulating installs, unique bundle identifiers, etc  !-- sample config.xml --  widget   id= com.eneff.branch.cordovatestbed   version= 1.0.0   xmlns= http://www.w3.org/ns/widgets   xmlns:cdv= http://cordova.apache.org/ns/1.0 \n   !-- Branch -- \n   plugin   name= branch-cordova-sdk   spec= ~2.4.2   /   !-- optional spec -- \n   branch-config \n     branch-key   value= key_live_ndqptlgXNE4LHqIahH1WIpbiyFlb62J3   / \n     uri-scheme   value= branchcordova   / \n     link-domain   value= yourcustomdomain.com   / \n     link-domain   value= cordova.app.link   /    !-- optional previous link domain -- \n     link-domain   value= bnc.lt   /    !-- optional previous link domain -- \n     ios-team-release   value= PW4Q8885U7   /   !-- required if iOS app -- \n     ios-team-debug   value= FG35JLLMXX   /   !-- optional -- \n     android-prefix   value= /WSuf   /   !-- optional (for bnc.lt and custom domains) -- \n     android-testmode   value= true   /   !-- optional (simulate installs) -- \n   /branch-config   widget   ios-CFBundleIdentifier= com.eneff.branch.cordovatestbedios   android-packageName= com.eneff.branch.cordovatestbedandroid   version= 1.0.0   xmlns= http://www.w3.org/ns/widgets   xmlns:cdv= http://cordova.apache.org/ns/1.0", 
            "title": "Optional app config"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#simulate-an-install", 
            "text": "Delete your app    [iOS]  iPhone Device -  Settings -  Privacy -  Advertising -  Reset Advertising Identifier -  Reset Identifier    [Android]  Add  android-testmode value=\"true\" /  to your  Config.xml  ( Testing: Optional App Config )    Add  Branch.setDebug(true);  before  Branch.initSession();  ( Initialize Branch Features )       Click on a deep link to navigate to your  $fallback_url  because your app is not installed    Install your app    Open your app    Read from  Branch.initSession(data)  for  +is_first_session = true", 
            "title": "Simulate an install"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#sample-app", 
            "text": "Branch Testbed App", 
            "title": "Sample app"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#universal-object-properties", 
            "text": "For  Create Content Reference     Key  Default  Usage  Link Property      canonicalIdentifier   (Required)  This is the unique identifier for content that will help Branch dedupe across many instances of the same thing. Suitable options: a website with pathing, or a database with identifiers for entities  $canonical_identifier    canonicalUrl   The canonical URL, used for SEO purposes  $canonical_url    title   The name for the piece of content  $og_title    contentDescription   A description for the content  $og_description    contentImageUrl   The image URL for the content. Must be an absolute path  $og_image_url    price   The price of the item  $amount    currency   The currency representing the price in ISO 4217 currency code  $currency    contentIndexingMode  \"public\"  Can be set to either  \"public\"  or  \"private\" . Public indicates that you\u2019d like this content to be discovered by other apps.  $publicly_indexable    contentMetadata   Any custom key-value data e.g.  { \"custom\": \"data\" }", 
            "title": "Universal Object properties"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#commerce-properties", 
            "text": "For  Track Commerce    Categories     Value  Category  Value  Category      0  Animals   Pet Supplies  11  Home   Garden    1  Apparel   Accessories  12  Luggage   Bags    2  Arts   Entertainment  13  Mature    3  Baby   Toddler  14  Media    4  Business   Industrial  15  Office Supplies    5  Camera   Optics  16  Religious   Ceremonial    6  Electronics  17  Software    7  Food, Beverage   Tobacco  18  Sporting Goods    8  Furniture  19  Toys   Games    9  Hardware  20  Vehicles   Parts    10  Health   Beauty         Currencies     Value  Currency  Value  Currency  Value  Currency      0  AED  60  HKD  120  RSD    1  AFN  61  HNL  121  RUB    2  ALL  62  HRK  122  RWF    3  AMD  63  HTG  123  SAR    4  ANG  64  HUF  124  SBD    5  AOA  65  IDR  125  SCR    6  ARS  66  ILS  126  SDG    7  AUD  67  INR  127  SEK    8  AWG  68  IQD  128  SGD    9  AZN  69  IRR  129  SHP    10  BAM  70  ISK  130  SLL    11  BBD  71  JMD  131  SOS    12  BDT  72  JOD  132  SRD    13  BGN  73  JPY  133  SSP    14  BHD  74  KES  134  STD    15  BIF  75  KGS  135  SYP    16  BMD  76  KHR  136  SZL    17  BND  77  KMF  137  THB    18  BOB  78  KPW  138  TJS    19  BOV  79  KRW  139  TMT    20  BRL  80  KWD  140  TND    21  BSD  81  KYD  141  TOP    22  BTN  82  KZT  142  TRY    23  BWP  83  LAK  143  TTD    24  BYN  84  LBP  144  TWD    25  BYR  85  LKR  145  TZS    26  BZD  86  LRD  146  UAH    27  CAD  87  LSL  147  UGX    28  CDF  88  LYD  148  USD    29  CHE  89  MAD  149  USN    30  CHF  90  MDL  150  UYI    31  CHW  91  MGA  151  UYU    32  CLF  92  MKD  152  UZS    33  CLP  93  MMK  153  VEF    34  CNY  94  MNT  154  VND    35  COP  95  MOP  155  VUV    36  COU  96  MRO  156  WST    37  CRC  97  MUR  157  XAF    38  CUC  98  MVR  158  XAG    39  CUP  99  MWK  159  XAU    40  CVE  100  MXN  160  XBA    41  CZK  101  MXV  161  XBB    42  DJF  102  MYR  162  XBC    43  DKK  103  MZN  163  XBD    44  DOP  104  NAD  164  XCD    45  DZD  105  NGN  165  XDR    46  EGP  106  NIO  166  XFU    47  ERN  107  NOK  167  XOF    48  ETB  108  NPR  168  XPD    49  EUR  109  NZD  169  XPF    50  FJD  110  OMR  170  XPT    51  FKP  111  PAB  171  XSU    52  GBP  112  PEN  172  XTS    53  GEL  113  PGK  173  XUA    54  GHS  114  PHP  174  XXX    55  GIP  115  PKR  175  YER    56  GMD  116  PLN  176  ZAR    57  GNF  117  PYG  177  ZMW    58  GTQ  118  QAR      59  GYD  119  RON", 
            "title": "Commerce properties"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#cordova-dependencies", 
            "text": "Node  /usr/bin/ruby -e  $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install ) ; \nbrew update ; \nbrew install node ;     Xcode    Install  Xcode    Open Xcode -  agree to SDK license agreement    Open Xcode -  Create new Xcode project -  Run simulator -  Agree to developer mode on mac      Android Studio    Read  instructions    Install  JVM    Install  Android Studio    Open Android Studio -  configure -  appearance/system settings/android sdk -  android 6.0 -  Okay    Open Android Studio -  New project -  ... -  Run -  Create new emulator -  Nexus 6p 23 -  Finish  # add to ~/.bash_profile  export   ANDROID_HOME = $HOME /Library/Android/sdk export   PATH = $ANDROID_HOME /tools: $PATH  export   PATH = $ANDROID_HOME /platform-tools: $PATH   source  ~/.bash_profile ;   android update sdk ;     Install Android SDK build-tools 24.0.1    Generate Android Keystore  keytool -genkeypair -dname  cn=Full Name, ou=Business Unit, o=Company, c=US  -alias release -keypass aaa111 -keystore release.keystore -storepass aaa111 -validity  10000  \nkeytool -list -v -keystore release.keystore      Genymotion  [optional]    Install  Virtual Box    Install  Genymotion    Genymotion -  Add virtual device -  Google Nexus 6P - 6.0.0 - API 23 -  Next", 
            "title": "Cordova dependencies"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#display-console-logs", 
            "text": "iOS Simulator    cordova run ios;    Safari -  Preferences -  Advance -  Show Develop menu in menu bar    Safari -  Develop -  Simulator -  index.html -  Console    May need to unplug and replug device    May need to open Xcode and update provisioning profile      iOS Xcode    cordova plugin add cordova-plugin-console;    cordova build ios;    Xcode -  APP_LOCATION/platforms/ios/APP_NAME.Xcodeproj    Xcode -  App -  General -  Signing -  Team    Xcode -  Product -  Run    Xcode -  View -  Debug Area -  Activate Console      Android Device    Plug device in    cordova run android;    Chrome -   chrome://inspect/#devices  -  Console      Android Genymotion    Genymotion -  Start    cordova run android;    Chrome -   chrome://inspect/#devices  -  Console", 
            "title": "Display console logs"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#update-the-branch-sdk", 
            "text": "To get the latest improvements and capabilities  # terminal \ncordova plugin remove io.branch.sdk\ncordova plugin remove branch-cordova-sdk  !-- config.xml --  plugin   name= branch-cordova-sdk   spec= ^2.5.0   /", 
            "title": "Update the Branch SDK"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#incompatible-plugins", 
            "text": "The following plugins will not work with the Branch SDK    PhoneGap NFC Plugin    Custom URL scheme    Cordova Universal Links Plugin    Ionic Deeplinks Plugin", 
            "title": "Incompatible plugins"
        }, 
        {
            "location": "/pages/apps/cordova-phonegap-ionic/#cordova-errors", 
            "text": "Branch opens and installs your app, so you cannot simulate Branch in the desktop browser    Error  ORIGINAL EXCEPTION: Branch is not defined  ReferenceError: Branch is not defined    Solution   // Ionic 2/3 - running on browser instead of device  if   ( ! platform . is ( cordova ))   {   return   }  Branch . userCompletedAction ( did_this )   // Ionic 2/3 - missing Branch import  declare   var   Branch       Provisioning Profile missing    Error  ** ARCHIVE FAILED **\n\nThe following build commands failed:\n  Check dependencies ( 1  failure ) \nError: Error code  65   for  command: xcodebuild with args: -xcconfig,cordova/build-debug.xcconfig,-workspace,Branch Testing.xcworkspace,-scheme,Branch Testing,-configuration,Debug,-destination,generic/platform = iOS,-archivePath,Branch Testing.xcarchive,archive,CONFIGURATION_BUILD_DIR = build/device,SHARED_PRECOMPS_DIR = build/sharedpch  No profiles  for   com.eneff.branch.cordova_testbed  were found    Solution     Fix by opening your app in  Xcode  and launch from there (to select a  Provisioning Profile )       Invalid bundle id    Error  An invalid value  XC com eneff branch cordova_testbed  was provided  for  the parameter  appIdName .  Error: Error code  1   for  command: /gradlew with args: cdvBuildDebug,-b,/build.gradle,-Dorg.gradle.daemon = true,-Pandroid.useDeprecatedNdk = true     Solution   Don't use  cordova ,  hyphens  (Android), or  underscores  (iOS) in your bundle id (widget id)", 
            "title": "Cordova errors"
        }, 
        {
            "location": "/pages/apps/mparticle-android/", 
            "text": "Integrate Branch\n\n\n\n\n\n\nConfigure Branch\n\n\n\n\n\n\nConfigure app\n\n\n\n\n\n\nInitialize Branch\n\n\n\n\n\n\nTest deep link\n\n\n\n\n\n\nImplement features\n\n\n\n\n\n\nCreate content reference\n\n\n\n\n\n\nCreate deep link\n\n\n\n\n\n\nShare deep link\n\n\n\n\n\n\nRead deep link\n\n\n\n\n\n\nNavigate to content\n\n\n\n\n\n\nDisplay content\n\n\n\n\n\n\nTrack content\n\n\n\n\n\n\nTrack users\n\n\n\n\n\n\nTrack events\n\n\n\n\n\n\nTrack commerce\n\n\n\n\n\n\nHandle referrals\n\n\n\n\n\n\nTroubleshoot issues\n\n\n\n\n\n\nRecommendations\n\n\n\n\n\n\nSample app", 
            "title": "mParticle Android"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#integrate-branch", 
            "text": "", 
            "title": "Integrate Branch"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#configure-branch", 
            "text": "", 
            "title": "Configure Branch"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#configure-app", 
            "text": "", 
            "title": "Configure app"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#initialize-branch", 
            "text": "", 
            "title": "Initialize Branch"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#test-deep-link", 
            "text": "", 
            "title": "Test deep link"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#implement-features", 
            "text": "", 
            "title": "Implement features"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#create-content-reference", 
            "text": "", 
            "title": "Create content reference"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#create-deep-link", 
            "text": "", 
            "title": "Create deep link"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#share-deep-link", 
            "text": "", 
            "title": "Share deep link"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#read-deep-link", 
            "text": "", 
            "title": "Read deep link"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#navigate-to-content", 
            "text": "", 
            "title": "Navigate to content"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#display-content", 
            "text": "", 
            "title": "Display content"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#track-content", 
            "text": "", 
            "title": "Track content"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#track-users", 
            "text": "", 
            "title": "Track users"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#track-events", 
            "text": "", 
            "title": "Track events"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#track-commerce", 
            "text": "", 
            "title": "Track commerce"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#handle-referrals", 
            "text": "", 
            "title": "Handle referrals"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#troubleshoot-issues", 
            "text": "", 
            "title": "Troubleshoot issues"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#recommendations", 
            "text": "", 
            "title": "Recommendations"
        }, 
        {
            "location": "/pages/apps/mparticle-android/#sample-app", 
            "text": "", 
            "title": "Sample app"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/", 
            "text": "Integrate Branch\n\n\n\n\n\n\nConfigure Branch\n\n\n\n\n\n\nConfigure app\n\n\n\n\n\n\nInitialize Branch\n\n\n\n\n\n\nTest deep link\n\n\n\n\n\n\nImplement features\n\n\n\n\n\n\nCreate content reference\n\n\n\n\n\n\nCreate deep link\n\n\n\n\n\n\nShare deep link\n\n\n\n\n\n\nRead deep link\n\n\n\n\n\n\nNavigate to content\n\n\n\n\n\n\nDisplay content\n\n\n\n\n\n\nTrack content\n\n\n\n\n\n\nTrack users\n\n\n\n\n\n\nTrack events\n\n\n\n\n\n\nTrack commerce\n\n\n\n\n\n\nHandle referrals\n\n\n\n\n\n\nTroubleshoot issues\n\n\n\n\n\n\nRecommendations\n\n\n\n\n\n\nSample app", 
            "title": "mParticle iOS"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#integrate-branch", 
            "text": "", 
            "title": "Integrate Branch"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#configure-branch", 
            "text": "", 
            "title": "Configure Branch"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#configure-app", 
            "text": "", 
            "title": "Configure app"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#initialize-branch", 
            "text": "", 
            "title": "Initialize Branch"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#test-deep-link", 
            "text": "", 
            "title": "Test deep link"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#implement-features", 
            "text": "", 
            "title": "Implement features"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#create-content-reference", 
            "text": "", 
            "title": "Create content reference"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#create-deep-link", 
            "text": "", 
            "title": "Create deep link"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#share-deep-link", 
            "text": "", 
            "title": "Share deep link"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#read-deep-link", 
            "text": "", 
            "title": "Read deep link"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#navigate-to-content", 
            "text": "", 
            "title": "Navigate to content"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#display-content", 
            "text": "", 
            "title": "Display content"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#track-content", 
            "text": "", 
            "title": "Track content"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#track-users", 
            "text": "", 
            "title": "Track users"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#track-events", 
            "text": "", 
            "title": "Track events"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#track-commerce", 
            "text": "", 
            "title": "Track commerce"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#handle-referrals", 
            "text": "", 
            "title": "Handle referrals"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#troubleshoot-issues", 
            "text": "", 
            "title": "Troubleshoot issues"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#recommendations", 
            "text": "", 
            "title": "Recommendations"
        }, 
        {
            "location": "/pages/apps/mparticle-ios/#sample-app", 
            "text": "", 
            "title": "Sample app"
        }, 
        {
            "location": "/pages/apps/titanium/", 
            "text": "Integrate Branch\n\n\n\n\n\n\nConfigure Branch\n\n\n\n\n\n\nConfigure app\n\n\n\n\n\n\nInitialize Branch\n\n\n\n\n\n\nTest deep link\n\n\n\n\n\n\nImplement features\n\n\n\n\n\n\nCreate content reference\n\n\n\n\n\n\nCreate deep link\n\n\n\n\n\n\nShare deep link\n\n\n\n\n\n\nRead deep link\n\n\n\n\n\n\nNavigate to content\n\n\n\n\n\n\nDisplay content\n\n\n\n\n\n\nTrack content\n\n\n\n\n\n\nTrack users\n\n\n\n\n\n\nTrack events\n\n\n\n\n\n\nTrack commerce\n\n\n\n\n\n\nHandle referrals\n\n\n\n\n\n\nTroubleshoot issues\n\n\n\n\n\n\nRecommendations\n\n\n\n\n\n\nSample app", 
            "title": "Titanium"
        }, 
        {
            "location": "/pages/apps/titanium/#integrate-branch", 
            "text": "", 
            "title": "Integrate Branch"
        }, 
        {
            "location": "/pages/apps/titanium/#configure-branch", 
            "text": "", 
            "title": "Configure Branch"
        }, 
        {
            "location": "/pages/apps/titanium/#configure-app", 
            "text": "", 
            "title": "Configure app"
        }, 
        {
            "location": "/pages/apps/titanium/#initialize-branch", 
            "text": "", 
            "title": "Initialize Branch"
        }, 
        {
            "location": "/pages/apps/titanium/#test-deep-link", 
            "text": "", 
            "title": "Test deep link"
        }, 
        {
            "location": "/pages/apps/titanium/#implement-features", 
            "text": "", 
            "title": "Implement features"
        }, 
        {
            "location": "/pages/apps/titanium/#create-content-reference", 
            "text": "", 
            "title": "Create content reference"
        }, 
        {
            "location": "/pages/apps/titanium/#create-deep-link", 
            "text": "", 
            "title": "Create deep link"
        }, 
        {
            "location": "/pages/apps/titanium/#share-deep-link", 
            "text": "", 
            "title": "Share deep link"
        }, 
        {
            "location": "/pages/apps/titanium/#read-deep-link", 
            "text": "", 
            "title": "Read deep link"
        }, 
        {
            "location": "/pages/apps/titanium/#navigate-to-content", 
            "text": "", 
            "title": "Navigate to content"
        }, 
        {
            "location": "/pages/apps/titanium/#display-content", 
            "text": "", 
            "title": "Display content"
        }, 
        {
            "location": "/pages/apps/titanium/#track-content", 
            "text": "", 
            "title": "Track content"
        }, 
        {
            "location": "/pages/apps/titanium/#track-users", 
            "text": "", 
            "title": "Track users"
        }, 
        {
            "location": "/pages/apps/titanium/#track-events", 
            "text": "", 
            "title": "Track events"
        }, 
        {
            "location": "/pages/apps/titanium/#track-commerce", 
            "text": "", 
            "title": "Track commerce"
        }, 
        {
            "location": "/pages/apps/titanium/#handle-referrals", 
            "text": "", 
            "title": "Handle referrals"
        }, 
        {
            "location": "/pages/apps/titanium/#troubleshoot-issues", 
            "text": "", 
            "title": "Troubleshoot issues"
        }, 
        {
            "location": "/pages/apps/titanium/#recommendations", 
            "text": "", 
            "title": "Recommendations"
        }, 
        {
            "location": "/pages/apps/titanium/#sample-app", 
            "text": "", 
            "title": "Sample app"
        }, 
        {
            "location": "/pages/apps/react-native/", 
            "text": "Integrate Branch\n\n\n\n\n\n\nConfigure Branch\n\n\n\n\n\n\nConfigure app\n\n\n\n\n\n\nInitialize Branch\n\n\n\n\n\n\nTest deep link\n\n\n\n\n\n\nImplement features\n\n\n\n\n\n\nCreate content reference\n\n\n\n\n\n\nCreate deep link\n\n\n\n\n\n\nShare deep link\n\n\n\n\n\n\nRead deep link\n\n\n\n\n\n\nNavigate to content\n\n\n\n\n\n\nDisplay content\n\n\n\n\n\n\nTrack content\n\n\n\n\n\n\nTrack users\n\n\n\n\n\n\nTrack events\n\n\n\n\n\n\nTrack commerce\n\n\n\n\n\n\nHandle referrals\n\n\n\n\n\n\nTroubleshoot issues\n\n\n\n\n\n\nRecommendations\n\n\n\n\n\n\nSample app", 
            "title": "React Native"
        }, 
        {
            "location": "/pages/apps/react-native/#integrate-branch", 
            "text": "", 
            "title": "Integrate Branch"
        }, 
        {
            "location": "/pages/apps/react-native/#configure-branch", 
            "text": "", 
            "title": "Configure Branch"
        }, 
        {
            "location": "/pages/apps/react-native/#configure-app", 
            "text": "", 
            "title": "Configure app"
        }, 
        {
            "location": "/pages/apps/react-native/#initialize-branch", 
            "text": "", 
            "title": "Initialize Branch"
        }, 
        {
            "location": "/pages/apps/react-native/#test-deep-link", 
            "text": "", 
            "title": "Test deep link"
        }, 
        {
            "location": "/pages/apps/react-native/#implement-features", 
            "text": "", 
            "title": "Implement features"
        }, 
        {
            "location": "/pages/apps/react-native/#create-content-reference", 
            "text": "", 
            "title": "Create content reference"
        }, 
        {
            "location": "/pages/apps/react-native/#create-deep-link", 
            "text": "", 
            "title": "Create deep link"
        }, 
        {
            "location": "/pages/apps/react-native/#share-deep-link", 
            "text": "", 
            "title": "Share deep link"
        }, 
        {
            "location": "/pages/apps/react-native/#read-deep-link", 
            "text": "", 
            "title": "Read deep link"
        }, 
        {
            "location": "/pages/apps/react-native/#navigate-to-content", 
            "text": "", 
            "title": "Navigate to content"
        }, 
        {
            "location": "/pages/apps/react-native/#display-content", 
            "text": "", 
            "title": "Display content"
        }, 
        {
            "location": "/pages/apps/react-native/#track-content", 
            "text": "", 
            "title": "Track content"
        }, 
        {
            "location": "/pages/apps/react-native/#track-users", 
            "text": "", 
            "title": "Track users"
        }, 
        {
            "location": "/pages/apps/react-native/#track-events", 
            "text": "", 
            "title": "Track events"
        }, 
        {
            "location": "/pages/apps/react-native/#track-commerce", 
            "text": "", 
            "title": "Track commerce"
        }, 
        {
            "location": "/pages/apps/react-native/#handle-referrals", 
            "text": "", 
            "title": "Handle referrals"
        }, 
        {
            "location": "/pages/apps/react-native/#troubleshoot-issues", 
            "text": "", 
            "title": "Troubleshoot issues"
        }, 
        {
            "location": "/pages/apps/react-native/#recommendations", 
            "text": "", 
            "title": "Recommendations"
        }, 
        {
            "location": "/pages/apps/react-native/#sample-app", 
            "text": "", 
            "title": "Sample app"
        }, 
        {
            "location": "/pages/apps/unity/", 
            "text": "Integrate Branch\n\n\n\n\n\n\nConfigure Branch\n\n\n\n\n\n\nConfigure app\n\n\n\n\n\n\nInitialize Branch\n\n\n\n\n\n\nTest deep link\n\n\n\n\n\n\nImplement features\n\n\n\n\n\n\nCreate content reference\n\n\n\n\n\n\nCreate deep link\n\n\n\n\n\n\nShare deep link\n\n\n\n\n\n\nRead deep link\n\n\n\n\n\n\nNavigate to content\n\n\n\n\n\n\nDisplay content\n\n\n\n\n\n\nTrack content\n\n\n\n\n\n\nTrack users\n\n\n\n\n\n\nTrack events\n\n\n\n\n\n\nTrack commerce\n\n\n\n\n\n\nHandle referrals\n\n\n\n\n\n\nTroubleshoot issues\n\n\n\n\n\n\nRecommendations\n\n\n\n\n\n\nSample app", 
            "title": "Unity"
        }, 
        {
            "location": "/pages/apps/unity/#integrate-branch", 
            "text": "", 
            "title": "Integrate Branch"
        }, 
        {
            "location": "/pages/apps/unity/#configure-branch", 
            "text": "", 
            "title": "Configure Branch"
        }, 
        {
            "location": "/pages/apps/unity/#configure-app", 
            "text": "", 
            "title": "Configure app"
        }, 
        {
            "location": "/pages/apps/unity/#initialize-branch", 
            "text": "", 
            "title": "Initialize Branch"
        }, 
        {
            "location": "/pages/apps/unity/#test-deep-link", 
            "text": "", 
            "title": "Test deep link"
        }, 
        {
            "location": "/pages/apps/unity/#implement-features", 
            "text": "", 
            "title": "Implement features"
        }, 
        {
            "location": "/pages/apps/unity/#create-content-reference", 
            "text": "", 
            "title": "Create content reference"
        }, 
        {
            "location": "/pages/apps/unity/#create-deep-link", 
            "text": "", 
            "title": "Create deep link"
        }, 
        {
            "location": "/pages/apps/unity/#share-deep-link", 
            "text": "", 
            "title": "Share deep link"
        }, 
        {
            "location": "/pages/apps/unity/#read-deep-link", 
            "text": "", 
            "title": "Read deep link"
        }, 
        {
            "location": "/pages/apps/unity/#navigate-to-content", 
            "text": "", 
            "title": "Navigate to content"
        }, 
        {
            "location": "/pages/apps/unity/#display-content", 
            "text": "", 
            "title": "Display content"
        }, 
        {
            "location": "/pages/apps/unity/#track-content", 
            "text": "", 
            "title": "Track content"
        }, 
        {
            "location": "/pages/apps/unity/#track-users", 
            "text": "", 
            "title": "Track users"
        }, 
        {
            "location": "/pages/apps/unity/#track-events", 
            "text": "", 
            "title": "Track events"
        }, 
        {
            "location": "/pages/apps/unity/#track-commerce", 
            "text": "", 
            "title": "Track commerce"
        }, 
        {
            "location": "/pages/apps/unity/#handle-referrals", 
            "text": "", 
            "title": "Handle referrals"
        }, 
        {
            "location": "/pages/apps/unity/#troubleshoot-issues", 
            "text": "", 
            "title": "Troubleshoot issues"
        }, 
        {
            "location": "/pages/apps/unity/#recommendations", 
            "text": "", 
            "title": "Recommendations"
        }, 
        {
            "location": "/pages/apps/unity/#sample-app", 
            "text": "", 
            "title": "Sample app"
        }, 
        {
            "location": "/pages/apps/xamarin/", 
            "text": "Integrate Branch\n\n\n\n\n\n\nConfigure Branch\n\n\n\n\n\n\nConfigure app\n\n\n\n\n\n\nInitialize Branch\n\n\n\n\n\n\nTest deep link\n\n\n\n\n\n\nImplement features\n\n\n\n\n\n\nCreate content reference\n\n\n\n\n\n\nCreate deep link\n\n\n\n\n\n\nShare deep link\n\n\n\n\n\n\nRead deep link\n\n\n\n\n\n\nNavigate to content\n\n\n\n\n\n\nDisplay content\n\n\n\n\n\n\nTrack content\n\n\n\n\n\n\nTrack users\n\n\n\n\n\n\nTrack events\n\n\n\n\n\n\nTrack commerce\n\n\n\n\n\n\nHandle referrals\n\n\n\n\n\n\nTroubleshoot issues\n\n\n\n\n\n\nRecommendations\n\n\n\n\n\n\nSample app", 
            "title": "Xamarin"
        }, 
        {
            "location": "/pages/apps/xamarin/#integrate-branch", 
            "text": "", 
            "title": "Integrate Branch"
        }, 
        {
            "location": "/pages/apps/xamarin/#configure-branch", 
            "text": "", 
            "title": "Configure Branch"
        }, 
        {
            "location": "/pages/apps/xamarin/#configure-app", 
            "text": "", 
            "title": "Configure app"
        }, 
        {
            "location": "/pages/apps/xamarin/#initialize-branch", 
            "text": "", 
            "title": "Initialize Branch"
        }, 
        {
            "location": "/pages/apps/xamarin/#test-deep-link", 
            "text": "", 
            "title": "Test deep link"
        }, 
        {
            "location": "/pages/apps/xamarin/#implement-features", 
            "text": "", 
            "title": "Implement features"
        }, 
        {
            "location": "/pages/apps/xamarin/#create-content-reference", 
            "text": "", 
            "title": "Create content reference"
        }, 
        {
            "location": "/pages/apps/xamarin/#create-deep-link", 
            "text": "", 
            "title": "Create deep link"
        }, 
        {
            "location": "/pages/apps/xamarin/#share-deep-link", 
            "text": "", 
            "title": "Share deep link"
        }, 
        {
            "location": "/pages/apps/xamarin/#read-deep-link", 
            "text": "", 
            "title": "Read deep link"
        }, 
        {
            "location": "/pages/apps/xamarin/#navigate-to-content", 
            "text": "", 
            "title": "Navigate to content"
        }, 
        {
            "location": "/pages/apps/xamarin/#display-content", 
            "text": "", 
            "title": "Display content"
        }, 
        {
            "location": "/pages/apps/xamarin/#track-content", 
            "text": "", 
            "title": "Track content"
        }, 
        {
            "location": "/pages/apps/xamarin/#track-users", 
            "text": "", 
            "title": "Track users"
        }, 
        {
            "location": "/pages/apps/xamarin/#track-events", 
            "text": "", 
            "title": "Track events"
        }, 
        {
            "location": "/pages/apps/xamarin/#track-commerce", 
            "text": "", 
            "title": "Track commerce"
        }, 
        {
            "location": "/pages/apps/xamarin/#handle-referrals", 
            "text": "", 
            "title": "Handle referrals"
        }, 
        {
            "location": "/pages/apps/xamarin/#troubleshoot-issues", 
            "text": "", 
            "title": "Troubleshoot issues"
        }, 
        {
            "location": "/pages/apps/xamarin/#recommendations", 
            "text": "", 
            "title": "Recommendations"
        }, 
        {
            "location": "/pages/apps/xamarin/#sample-app", 
            "text": "", 
            "title": "Sample app"
        }, 
        {
            "location": "/pages/apps/api/", 
            "text": "Link\n\n\nTODO: test curls\nTODO: test links\nTODO: remove confidential information\nTODO: referrals\n\n\n\n\n\n\nLink Create\n\n\n\n\n\n\nRequest\n\n\ncurl\n \n-XPOST\n \n-H\n \nContent-Type:\n \napplication/json\n \n-d\n \n{\n\n  \nbranch_key\n:\n \nkey_live_icCccJIpd7GlYY5oOmoEtpafuDiuyXhT\n,\n\n  \nchannel\n:\n \nfacebook\n,\n\n  \nfeature\n:\n \nonboarding\n,\n\n  \ncampaign\n:\n \nnew product\n,\n\n  \nstage\n:\n \nnew user\n,\n\n  \ntags\n:\n \n[\none\n,\n \ntwo\n,\n \nthree\n],\n\n  \ntype\n:\n \n2\n,\n\n  \ndata\n:\n \n{\n\n    \n$canonical_identifier\n:\n \ncontent/123\n,\n\n    \n$og_title\n:\n \nTitle 123\n,\n   \n    \n$og_description\n:\n \nDescription 123\n,\n\n    \n$og_image_url\n:\n \nhttp://www.lorempixel.com/400/400/\n,\n\n    \n$deeplink_path\n:\n \ncontent/123\n,\n\n    \ncustom\n:\n \ntrue\n,\n\n    \nrandom\n:\n \n123\n,\n\n    \nanything\n:\n \neverything\n,\n\n    \ntest\n:\n \n[\n1\n,\n2\n,\n3\n,\n4\n,\n5\n,\n6\n],\n\n    \n$marketing_title\n:\n \nthis link\n\n  \n}\n\n\n}\n \nhttps://api.branch.io/v\n1\n/url\n\n\n\n\n\n\n\n\n\nResponse\n\n\n{\n\n  \nurl\n:\n \nhttps://eneff.app.link/7nOIRkPsHz\n\n\n}\n\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nUsage\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nbranch_key\n\n\nstring\n\n\nFrom your \nBranch Settings Dashboard\n\n\n\u221a\n\n\n\n\n\n\n...\n\n\n...\n\n\nParameters from \nConfiguring Links\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLink Create Bulk\n\n\n\n\n\n\nRequest\n\n\ncurl\n \n-XPOST\n \nhttps://api.branch.io/v\n1\n/url/bulk/key_live_icCccJIpd\n7\nGlYY\n5\noOmoEtpafuDiuyXhT\n \n-d\n \n\\\n\n\n[\n\n  \n{\n\n    \nchannel\n:\n \nfacebook\n,\n\n    \nfeature\n:\n \nonboarding\n,\n\n    \ncampaign\n:\n \nnew product\n,\n\n    \nstage\n:\n \nnew user\n,\n\n    \ntags\n:\n \n[\none\n,\n \ntwo\n,\n \nthree\n],\n\n    \ndata\n:\n \n{\n\n      \n$canonical_identifier\n:\n \ncontent/123\n,\n\n      \n$og_title\n:\n \nTitle from Deep Link\n,\n    \n      \n$og_description\n:\n \nDescription from Deep Link\n,\n\n      \n$og_image_url\n:\n \nhttp://www.lorempixel.com/400/400/\n,\n\n      \n$desktop_url\n:\n \nhttp://www.example.com\n,\n\n      \ncustom_boolean\n:\n \ntrue\n,\n\n      \ncustom_integer\n:\n \n1243\n,\n\n      \ncustom_string\n:\n \neverything\n,\n\n      \ncustom_array\n:\n \n[\n1\n,\n2\n,\n3\n,\n4\n,\n5\n,\n6\n],\n\n      \ncustom_object\n:\n \n{\n \nrandom\n:\n \ndictionary\n \n}\n\n    \n}\n\n  \n},\n\n  \n{\n\n    \nchannel\n:\n \ngoogle\n,\n\n    \nfeature\n:\n \nloon\n,\n\n    \ncampaign\n:\n \nlift off\n\n  \n}\n\n\n]\n\n\n\n\n\n\n\n\n\nResponse\n\n\n[\n\n  \n{\n\n    \nurl\n:\nhttps://eneff.app.link/HE7fprkxWE\n\n  \n},\n\n  \n{\n\n    \nurl\n:\nhttps://eneff.app.link/YawoqrkxWE\n\n  \n}\n\n\n]\n\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nUsage\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nbranch_key\n\n\nstring\n\n\nFrom your \nBranch Settings Dashboard\n\n\n\u221a\n\n\n\n\n\n\n...\n\n\n...\n\n\nParameters from \nConfiguring Links\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLink Read\n\n\n\n\n\n\nRequest\n\n\ncurl\n \n-XGET\n \n-H\n \nContent-Type:\n \napplication/json\n \nhttps://api.branch.io/v\n1\n/url?branch_key=key_live_icCccJIpd\n7\nGlYY\n5\noOmoEtpafuDiuyXhT\nurl=https://eneff.app.link/\n7\nnOIRkPsHz\n\n\n\n\n\n\n\n\n\nResponse\n\n\n{\n  \n   \ncampaign\n:\n \nnew product\n,\n\n   \nchannel\n:\n \nfacebook\n,\n\n   \nfeature\n:\n \nonboarding\n,\n\n   \nstage\n:\n \nnew user\n,\n\n   \ntags\n:[\n  \n      \none\n,\n\n      \ntwo\n,\n\n      \nthree\n\n   \n],\n\n   \ndata\n:\n \n{\n  \n      \n$canonical_identifier\n:\n \ncontent/123\n,\n\n      \n$deeplink_path\n:\n \ncontent/123\n,\n\n      \n$og_description\n:\n \nDescription 123\n,\n\n      \n$og_image_url\n:\n \nhttp://www.lorempixel.com/400/400/\n,\n\n      \n$og_title\n:\n \nTitle 123\n,\n\n      \n$one_time_use\n:\nfalse\n,\n\n      \nanything\n:\n \neverything\n,\n\n      \ncustom\n:\ntrue\n,\n\n      \nrandom\n:\n123\n,\n\n      \n~campaign\n:\n \nnew product\n,\n\n      \n~channel\n:\n \nfacebook\n,\n\n      \n~creation_source\n:\n0\n,\n\n      \n~feature\n:\n \nonboarding\n,\n\n      \n~id\n:\n \n345698114818429601\n,\n\n      \n~stage\n:\n \nnew user\n,\n\n      \n~tags\n:[\n  \n         \none\n,\n\n         \ntwo\n,\n\n         \nthree\n\n      \n],\n\n      \nurl\n:\n \nhttps://eneff.app.link/7nOIRkPsHz\n\n   \n},\n\n   \ntype\n:\n0\n,\n\n   \nalias\n:\nnull\n\n\n}\n\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nUsage\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nbranch_key\n\n\nstring\n\n\nFrom your \nBranch Settings Dashboard\n\n\n\u221a\n\n\n\n\n\n\nurl\n\n\nstring\n\n\nThe deep link url\n\n\n\u221a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLink Update\n\n\n\n\n\n\nRequest\n\n\ncurl\n \n-XPUT\n \n-H\n \nContent-Type:\n \napplication/json\n \n-d\n \n{\n\n  \nbranch_key\n:\n \nkey_live_icCccJIpd7GlYY5oOmoEtpafuDiuyXhT\n,\n\n  \nbranch_secret\n:\n \nsecret_live_D3sN7UDL27glpNKZfGPt6BlmKD9txUBp\n,\n\n  \nchannel\n:\n \ntwitter\n,\n    \n  \ndata\n:{\n\n    \nname\n:\n \nalex\n,\n\n    \nuser_id\n:\n \n12346\n,\n\n    \n$deeplink_path\n:\n \narticle/jan/123\n\n  \n}\n\n\n}\n \nhttps://api.branch.io/v\n1\n/url?url=https://eneff.app.link/\n7\nnOIRkPsHz\n\n\n\n\n\n\n\n\n\nResponse\n\n\n{\n\n  \ncampaign\n:\n \nnew product\n,\n\n  \nchannel\n:\n \ntwitter\n,\n\n  \nfeature\n:\n \nonboarding\n,\n\n  \nstage\n:\n \nnew user\n,\n\n  \ntags\n:\n \n[\n\n    \none\n,\n\n    \ntwo\n,\n\n    \nthree\n\n  \n],\n\n  \ndata\n:\n \n{\n\n    \n$deeplink_path\n:\n \narticle/jan/123\n,\n\n    \n$one_time_use\n:\n \nfalse\n,\n\n    \nname\n:\n \nalex\n,\n\n    \nuser_id\n:\n \n12346\n,\n\n    \n~campaign\n:\n \nnew product\n,\n\n    \n~channel\n:\n \nfacebook\n,\n\n    \n~creation_source\n:\n \n0\n,\n\n    \n~feature\n:\n \nonboarding\n,\n\n    \n~id\n:\n \n345698114818429601\n,\n\n    \n~stage\n:\n \nnew user\n,\n\n    \n~tags\n:\n \n[\n\n      \none\n,\n\n      \ntwo\n,\n\n      \nthree\n\n    \n],\n\n    \nurl\n:\n \nhttps://eneff.app.link/7nOIRkPsHz\n\n  \n},\n\n  \ntype\n:\n \n0\n,\n\n  \nalias\n:\n \nnull\n\n\n}\n\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nUsage\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nbranch_key\n\n\nstring\n\n\nFrom your \nBranch Settings Dashboard\n\n\n\u221a\n\n\n\n\n\n\nbranch_secret\n\n\nstring\n\n\nFrom your \nBranch Settings Dashboard\n\n\n\u221a\n\n\n\n\n\n\nurl\n\n\nstring\n\n\nThe deep link url\n\n\n\u221a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLink Troubleshooting\n\n\n\n\n\n\nMust use your \nbranch_key\n and \nbranch_secret\n from your \nBranch Settings Dashboard\n\n\n\n\n\n\ndata\n is overridden on \nLink Update\n, not appended\n\n\n\n\n\n\n\n\n\n\nEvent\n\n\n\n\n\n\nEvent Create\n\n\n\n\n\n\nRequest\n\n\ncurl\n \n-XPOST\n \n-H\n \nContent-Type:\n \napplication/json\n \n-d\n \n{\n\n  \nbranch_key\n:\n \nkey_live_icCccJIpd7GlYY5oOmoEtpafuDiuyXhT\n,\n\n  \nevent\n:\n \nclicked_on_this\n,\n\n  \nidentity\n:\n \nbob\n,\n\n  \nmetadata\n:\n \n{\n\n    \nhello\n:\n \nworld\n,\n\n    \ncustom_data\n:\n \n12345\n\n  \n}\n\n\n}\n \nhttps://api.branch.io/v\n1\n/event\n\n\n\n\n\n\n\n\n\nResponse\n\n\n{}\n\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nUsage\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nbranch_key\n\n\nstring\n\n\nFrom your \nBranch Settings Dashboard\n\n\n\u221a\n\n\n\n\n\n\nevent\n\n\nstring\n\n\nName of the custom event\n\n\n\u221a\n\n\n\n\n\n\nidentity\n\n\nstring\n\n\nUnique user id, also known as the \nDeveloper Id\n on your \nBranch Identity Dashboard\n\n\n\n\n\n\n\n\nmetadata\n\n\n{}\n\n\nCustom key-value pairs related to the event\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUser\n\n\n\n\n\n\nUser Create\n\n\n\n\n\n\nRequest\n\n\ncurl\n \n-XPOST\n \n-H\n \nContent-Type:\n \napplication/json\n \n-d\n \n{\n\n  \nbranch_key\n:\n \nkey_live_icCccJIpd7GlYY5oOmoEtpafuDiuyXhT\n,\n\n  \nidentity\n:\n \nbob\n,\n\n  \nidentity_id\n:\n \n222\n\n\n}\n \nhttps://api.branch.io/v\n1\n/profile\n\n\n\n\n\n\n\n\n\nResponse\n\n\n{\n\n  \nidentity_id\n:\n \n222\n,\n\n  \nlink\n:\n \nhttps:\\/\\/eneff.app.link\\/?%24identity_id=222\n\n\n}\n\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nUsage\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nbranch_key\n\n\nstring\n\n\nFrom your \nBranch Settings Dashboard\n\n\n\u221a\n\n\n\n\n\n\nidentity\n\n\nstring\n\n\nUnique user id, also known as the \nDeveloper Id\n on your \nBranch Identity Dashboard\n\n\n\u221a\n\n\n\n\n\n\nidentity_id\n\n\nstring\n\n\nUnique user id for Branch, also known as the \nBranch Identity Id\n on your \nBranch Identity Dashboard\n\n\n\u221a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUser Read\n\n\n\n\n\n\nRequest\n\n\ncurl\n \n-XGET\n \n-H\n \nContent-Type:\n \napplication/json\n \nhttps://api.branch.io/v\n1\n/profile?branch_key=key_live_icCccJIpd\n7\nGlYY\n5\noOmoEtpafuDiuyXhT\nidentity=bob\n\n\n\n\n\ncurl\n \n-XGET\n \n-H\n \nContent-Type:\n \napplication/json\n \nhttps://api.branch.io/v\n1\n/profile?branch_key=key_live_icCccJIpd\n7\nGlYY\n5\noOmoEtpafuDiuyXhT\nidentity_id=\n222\n\n\n\n\n\n\n\n\n\nResponse\n\n\n{\n\n  \nidentity_id\n:\n \n222\n,\n\n  \nidentity\n:\n \nbob\n,\n\n  \nlink\n:\n \nhttps://eneff.app.link/?%24identity_id=222\n\n\n}\n\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nUsage\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nbranch_key\n\n\nstring\n\n\nFrom your \nBranch Settings Dashboard\n\n\n\u221a\n\n\n\n\n\n\nidentity\n\n\nstring\n\n\nUnique user id, also known as the \nDeveloper Id\n on your \nBranch Identity Dashboard\n\n\n\u221a*\n\n\n\n\n\n\nidentity_id\n\n\nstring\n\n\nUnique user id for Branch, also known as the \nBranch Identity Id\n on your \nBranch Identity Dashboard\n\n\n\u221a*\n\n\n\n\n\n\n\n\n\n\n*\n =  \nidentity\n \nOR\n \nidentity_id\n is required\n\n\n\n\n\n\n\n\n\n\n\n\nReferral\n\n\n\n\n\n\nReferral Update\n\n\n\n\n\n\nReferral Read\n\n\n\n\n\n\nReferral Create\n\n\n\n\n\n\nApp\n\n\n\n\n\n\nApp Create\n\n\n\n\n\n\nRequest \n\n\ncurl\n \n-XPOST\n \n-H\n \nContent-Type:\n \napplication/json\n \n-d\n \n{\n\n  \nuser_id\n:\n \n293816316559643406\n,\n\n  \napp_name\n:\n \neneff_test_3\n,\n\n  \ndev_name\n:\n \nEthan Neff\n,\n\n  \ndev_email\n:\n \neneff@branch.io\n,\n\n\n  \nalways_open_app\n:\n \n1\n,\n\n\n  \nandroid_app\n:\n \n2\n,\n \n  \nandroid_url\n:\n \nhttps://www.example.com/ios\n,\n \n  \nandroid_uri_scheme\n:\n \nbranchtest://\n,\n \n  \nandroid_package_name\n:\n \ncom.branch.test\n,\n \n  \nandroid_app_links_enabled\n:\n \n1\n,\n  \n  \nsha256_cert_fingerprints\n:\n \n[\n14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5\n],\n \n\n  \nios_app\n:\n \n2\n,\n \n  \nios_url\n:\n \nhttps://www.example.com/ios\n,\n \n  \nios_uri_scheme\n:\n \nbranchtest://\n,\n \n  \nios_store_country\n:\n \nUS\n,\n \n  \nuniversal_linking_enabled\n:\n \n1\n,\n   \n  \nios_bundle_id\n:\n \ncom.branch.test\n,\n \n  \nios_team_id\n:\n \nPW4Q8885U7\n,\n \n\n  \nfire_url\n:\n \nhttps://www.example.com/amazon\n,\n \n  \nwindows_phone_url\n:\n \nhttps://www.example.com/windows\n,\n \n  \nblackberry_url\n:\n \nhttps://www.example.com/blackberry\n,\n \n  \nweb_url\n:\n \nhttps://www.example.com/web\n,\n \n\n  \ndefault_desktop_url\n:\n \nhttps://www.example.com/desktop\n,\n \n  \ntext_message\n:\n \nDownload me! {{ link }}\n,\n\n\n  \nog_app_id\n:\n \nbranch 123\n,\n \n  \nog_title\n:\n \nbranch test\n,\n \n  \nog_description\n:\n \nbranch description\n,\n \n  \nog_image_url\n:\n \nhttp://lorempixel.com/400/400/\n,\n \n\n  \ndeepview_desktop\n:\n \nbranch_default\n,\n \n  \ndeepview_ios\n:\n \nbranch_default\n,\n \n  \ndeepview_android\n:\n \nbranch_default\n\n\n}\n \nhttps://api.branch.io/v\n1\n/app\n\n\n\n\n\n\n\n\n\nResponse\n\n\n{\n\n  \nid\n:\n \n...\n,\n\n  \napp_key\n:\n \n...\n,\n\n  \ncreation_date\n:\n \n2016-12-21T22:51:49.067Z\n,\n\n  \napp_name\n:\n \neneff_test_3\n,\n\n  \norigin\n:\n \nAPI: creator id = 293816316559643406, creator email = eneff@branch.io\n,\n\n  \ndev_name\n:\n \nEthan Neff\n,\n\n  \ndev_email\n:\n \neneff@branch.io\n,\n\n  \nalways_open_app\n:\n \n1\n,\n\n  \nandroid_app\n:\n \n2\n,\n\n  \nandroid_url\n:\n \nhttps:\\/\\/www.example.com\\/ios\n,\n\n  \nandroid_uri_scheme\n:\n \nbranchtest:\\/\\/\n,\n\n  \nandroid_package_name\n:\n \ncom.branch.test\n,\n\n  \nsha256_cert_fingerprints\n:\n \n[\n\n    \n14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5\n\n  \n],\n\n  \nandroid_app_links_enabled\n:\n \n1\n,\n\n  \nios_app\n:\n \n2\n,\n\n  \nios_url\n:\n \nhttps:\\/\\/www.example.com\\/ios\n,\n\n  \nios_uri_scheme\n:\n \nbranchtest:\\/\\/\n,\n\n  \nios_store_country\n:\n \nUS\n,\n\n  \nios_bundle_id\n:\n \ncom.branch.test\n,\n\n  \nios_team_id\n:\n \nPW4Q8885U7\n,\n\n  \nuniversal_linking_enabled\n:\n \n1\n,\n\n  \nfire_url\n:\n \nhttps:\\/\\/www.example.com\\/amazon\n,\n\n  \nwindows_phone_url\n:\n \nhttps:\\/\\/www.example.com\\/windows\n,\n\n  \nblackberry_url\n:\n \nhttps:\\/\\/www.example.com\\/blackberry\n,\n\n  \nweb_url\n:\n \nhttps:\\/\\/www.example.com\\/web\n,\n\n  \ndefault_desktop_url\n:\n \nhttps:\\/\\/www.example.com\\/desktop\n,\n\n  \nshort_url_domain\n:\n \n,\n\n  \ndefault_short_url_domain\n:\n \njqk5.app.link\n,\n\n  \nalternate_short_url_domain\n:\n \njqk5-alternate.app.link\n,\n\n  \ntext_message\n:\n \nDownload me! {{ link }}\n,\n\n  \nog_app_id\n:\n \nbranch 123\n,\n\n  \nog_title\n:\n \nbranch test\n,\n\n  \nog_image_url\n:\n \nhttp:\\/\\/lorempixel.com\\/400\\/400\\/\n,\n\n  \nog_description\n:\n \nbranch description\n,\n\n  \nbranch_key\n:\n \n...\n,\n\n  \nbranch_secret\n:\n \n...\n,\n\n  \ndeepview_desktop\n:\n \nbranch_default\n,\n\n  \ndeepview_ios\n:\n \nbranch_default\n,\n\n  \ndeepview_android\n:\n \nbranch_default\n\n\n}\n\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nUsage\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nuser_id\n\n\nstring\n\n\nThe Dashboard User Id obtained from \nBranch Account Dashboard\n\n\n\u221a\n\n\n\n\n\n\napp_name\n\n\nstring\n\n\nThe name of the app\n\n\n\u221a\n\n\n\n\n\n\ndev_name\n\n\nstring\n\n\nThe main contact developer name\n\n\n\u221a\n\n\n\n\n\n\ndev_email\n\n\nstring\n\n\nThe main contact developer email. A email is sent on account creation\n\n\n\u221a\n\n\n\n\n\n\nandroid_app\n\n\nstring\n\n\nWhether an Android app is enabled. \n0\n or \n1\n indicating \ntrue\n\n\n\n\n\n\n\n\nandroid_url\n\n\nstring\n\n\nThe url of the Android store, or package name (e.g. \ncom.android.myapp\n). \nandroid_app\n must be set to \n2\n\n\n\n\n\n\n\n\nandroid_uri_scheme\n\n\nstring\n\n\nThe Android URI scheme\n\n\n\n\n\n\n\n\nandroid_package_name\n\n\nstring\n\n\nThe Android package name (e.g. \ncom.android.myapp\n)\n\n\n\n\n\n\n\n\nsha256_cert_fingerprints\n\n\n[string]\n\n\nThe SHA256 fingerprints for App Links\n\n\n\n\n\n\n\n\nandroid_app_links_enabled\n\n\nstring\n\n\nWhether App Links are enabled. \n0\n or \n1\n indicating \ntrue\n\n\n\n\n\n\n\n\nios_app\n\n\nstring\n\n\nWhether an iOS app is enabled, (\n0\n or \n1\n indicating \ntrue\n\n\n\n\n\n\n\n\nios_url\n\n\nstring\n\n\nThe url of iOS store, or app id (e.g. \nid512451233\n), or a fallback URL for iOS if present. \nios_app\n must be set to \n2\n\n\n\n\n\n\n\n\nios_uri_scheme\n\n\nstring\n\n\nThe iOS URI scheme\n\n\n\n\n\n\n\n\nios_store_country\n\n\nstring\n\n\nThe country code of the app, defaults to \nUS\n\n\n\n\n\n\n\n\nios_bundle_id\n\n\nstring\n\n\nThe iOS Bundle Id\n\n\n\n\n\n\n\n\nios_team_id\n\n\nstring\n\n\nThe iOS Team Id\n\n\n\n\n\n\n\n\nuniversal_linking_enabled\n\n\nstring\n\n\nWhether Universal Links should be enabled. \n0\n or \n1\n indicating \ntrue\n\n\n\n\n\n\n\n\nfire_url\n\n\nstring\n\n\nThe redirect on Fire phone\n\n\n\n\n\n\n\n\nwindows_phone_url\n\n\nstring\n\n\nThe redirect on Windows phone\n\n\n\n\n\n\n\n\nblackberry_url\n\n\nstring\n\n\nThe redirect on Blackberry phone\n\n\n\n\n\n\n\n\nweb_url\n\n\nstring\n\n\nBackup website if URLs are \nnull\n\n\n\n\n\n\n\n\ndefault_desktop_url\n\n\nstring\n\n\nThe default desktop redirect, or \nnull\n if set to hosted SMS\n\n\n\n\n\n\n\n\ntext_message\n\n\nstring\n\n\nText message to use for text-me feature, \n{{ link }}\n is required and will be replaced with a deep link\n\n\n\n\n\n\n\n\nog_app_id\n\n\nstring\n\n\nOpen Graph app id\n\n\n\n\n\n\n\n\nog_title\n\n\nstring\n\n\nOpen Graph title to be used with link\n\n\n\n\n\n\n\n\nog_description\n\n\nstring\n\n\nOpen Graph description to be used with link\n\n\n\n\n\n\n\n\nog_image_url\n\n\nstring\n\n\nOpen Graph image URL to be used with link\n\n\n\n\n\n\n\n\ndeepview_desktop\n\n\nstring\n\n\nThe current deepview selected for the desktop platform\n\n\n\n\n\n\n\n\ndeepview_ios\n\n\nstring\n\n\nThe current deepview selected for the iOS platform\n\n\n\n\n\n\n\n\ndeepview_android\n\n\nstring\n\n\nThe current deepview selected for the Android platform\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nApp Read\n\n\n\n\n\n\nRequest\n\n\ncurl\n \n-XGET\n \n-H\n \nContent-Type:\n \napplication/json\n \nhttps://api.branch.io/v\n1\n/app/key_live_icCccJIpd\n7\nGlYY\n5\noOmoEtpafuDiuyXhT?branch_secret=...\n\n\n\n\n\n\n\n\n\nResponse\n\n\n{\n\n  \nid\n:\n \n...\n,\n\n  \napp_key\n:\n \n...\n,\n\n  \ncreation_date\n:\n \n2016-12-21T22:51:49.067Z\n,\n\n  \napp_name\n:\n \neneff_test_3\n,\n\n  \norigin\n:\n \nAPI: creator id = 293816316559643406, creator email = eneff@branch.io\n,\n\n  \ndev_name\n:\n \nEthan Neff\n,\n\n  \ndev_email\n:\n \neneff@branch.io\n,\n\n  \nalways_open_app\n:\n \n1\n,\n\n  \nauto_fetch\n:\n \nnull\n,\n\n  \nandroid_app\n:\n \n2\n,\n\n  \nandroid_url\n:\n \nhttps:\\/\\/www.example.com\\/ios\n,\n\n  \nandroid_uri_scheme\n:\n \nbranchtest:\\/\\/\n,\n\n  \nandroid_package_name\n:\n \ncom.branch.test\n,\n\n  \nsha256_cert_fingerprints\n:\n \n[\n\n    \n14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5\n\n  \n],\n\n  \nandroid_app_links_enabled\n:\n \ntrue\n,\n\n  \nios_app\n:\n \n2\n,\n\n  \nios_url\n:\n \nhttps:\\/\\/www.example.com\\/ios\n,\n\n  \nios_uri_scheme\n:\n \nbranchtest:\\/\\/\n,\n\n  \nios_store_country\n:\n \nUS\n,\n\n  \nios_bundle_id\n:\n \ncom.branch.test\n,\n\n  \nios_team_id\n:\n \nPW4Q8885U7\n,\n\n  \nuniversal_linking_enabled\n:\n \ntrue\n,\n\n  \nfire_url\n:\n \nhttps:\\/\\/www.example.com\\/amazon\n,\n\n  \nwindows_phone_url\n:\n \nhttps:\\/\\/www.example.com\\/windows\n,\n\n  \nblackberry_url\n:\n \nhttps:\\/\\/www.example.com\\/blackberry\n,\n\n  \nweb_url\n:\n \nhttps:\\/\\/www.example.com\\/web\n,\n\n  \ndefault_desktop_url\n:\n \nhttps:\\/\\/www.example.com\\/desktop\n,\n\n  \nshort_url_domain\n:\n \n,\n\n  \ndefault_short_url_domain\n:\n \njqk5.app.link\n,\n\n  \nalternate_short_url_domain\n:\n \njqk5-alternate.app.link\n,\n\n  \ntext_message\n:\n \nDownload me! {{ link }}\n,\n\n  \nog_app_id\n:\n \nbranch 123\n,\n\n  \nog_title\n:\n \nbranch test\n,\n\n  \nog_image_url\n:\n \nhttp:\\/\\/lorempixel.com\\/400\\/400\\/\n,\n\n  \nog_description\n:\n \nbranch description\n,\n\n  \nbranch_key\n:\n \n...\n,\n\n  \nbranch_secret\n:\n \n...\n,\n\n  \ndeepview_desktop\n:\n \nbranch_default\n,\n\n  \ndeepview_ios\n:\n \nbranch_default\n,\n\n  \ndeepview_android\n:\n \nbranch_default\n,\n\n  \nsitemap_enabled\n:\n \nnull\n,\n\n  \nesp_config\n:\n \nnull\n,\n\n  \nmap_utm_params\n:\n \nnull\n,\n\n  \nenterprise\n:\n \nfalse\n,\n\n  \nzuora_account_id\n:\n \nnull\n,\n\n  \nandroid_cd_enabled\n:\n \nnull\n,\n\n  \nandroid_cd_hashed\n:\n \nnull\n,\n\n  \nios_cd_enabled\n:\n \nnull\n,\n\n  \nios_cd_hashed\n:\n \nnull\n\n\n}\n\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nUsage\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nbranch_key\n\n\nstring\n\n\nFrom your \nBranch Settings Dashboard\n\n\n\u221a\n\n\n\n\n\n\nbranch_secret\n\n\nstring\n\n\nFrom your \nBranch Settings Dashboard\n\n\n\u221a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nApp Update\n\n\n\n\n\n\nRequest\n\n\ncurl\n \n-XPUT\n \n-H\n \nContent-Type:\n \napplication/json\n \n-d\n \n{\n\n  \nbranch_secret\n:\n \n...\n,\n  \n  \ndev_email\n:\n \neneff@branch.io\n,\n\n  \nog_description\n:\n \nbranch description updated\n\n\n}\n \nhttps://api.branch.io/v\n1\n/app/key_live_icCccJIpd\n7\nGlYY\n5\noOmoEtpafuDiuyXhT\n\n\n\n\n\n\n\n\n\nResponse\n\n\n{\n\n  \nid\n:\n \n...\n,\n\n  \napp_key\n:\n \n...\n,\n\n  \ncreation_date\n:\n \n2016-12-21T21:36:44.613Z\n,\n\n  \napp_name\n:\n \neneff_test_3_updated\n,\n\n  \norigin\n:\n \nAPI: creator id = 293816316559643406, creator email = eneff@branch.io\n,\n\n  \ndev_name\n:\n \nEthan Neff\n,\n\n  \ndev_email\n:\n \neneff@branch.io\n,\n\n  \nalways_open_app\n:\n \n1\n,\n\n  \nauto_fetch\n:\n \nnull\n,\n\n  \nandroid_app\n:\n \n2\n,\n\n  \nandroid_url\n:\n \nhttps:\\/\\/www.example.com\\/ios\n,\n\n  \nandroid_uri_scheme\n:\n \nbranchtest:\\/\\/\n,\n\n  \nandroid_package_name\n:\n \ncom.branch.test\n,\n\n  \nsha256_cert_fingerprints\n:\n \n[\n\n    \n14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5\n\n  \n],\n\n  \nandroid_app_links_enabled\n:\n \ntrue\n,\n\n  \nios_app\n:\n \n2\n,\n\n  \nios_url\n:\n \nhttps:\\/\\/www.example.com\\/ios\n,\n\n  \nios_uri_scheme\n:\n \nbranchtest:\\/\\/\n,\n\n  \nios_store_country\n:\n \nUS\n,\n\n  \nios_bundle_id\n:\n \ncom.branch.test\n,\n\n  \nios_team_id\n:\n \nPW4Q8885U7\n,\n\n  \nuniversal_linking_enabled\n:\n \ntrue\n,\n\n  \nfire_url\n:\n \nhttps:\\/\\/www.example.com\\/amazon\n,\n\n  \nwindows_phone_url\n:\n \nhttps:\\/\\/www.example.com\\/windows\n,\n\n  \nblackberry_url\n:\n \nhttps:\\/\\/www.example.com\\/blackberry\n,\n\n  \nweb_url\n:\n \nhttps:\\/\\/www.example.com\\/web\n,\n\n  \ndefault_desktop_url\n:\n \nhttps:\\/\\/www.example.com\\/desktop\n,\n\n  \nshort_url_domain\n:\n \n,\n\n  \ndefault_short_url_domain\n:\n \nnz02.app.link\n,\n\n  \nalternate_short_url_domain\n:\n \nnz02-alternate.app.link\n,\n\n  \ntext_message\n:\n \nDownload me! {{ link }}\n,\n\n  \nog_app_id\n:\n \nbranch 123\n,\n\n  \nog_title\n:\n \nbranch test\n,\n\n  \nog_image_url\n:\n \nhttp:\\/\\/lorempixel.com\\/400\\/400\\/\n,\n\n  \nog_description\n:\n \nbranch description updated\n,\n\n  \nbranch_key\n:\n \n...\n,\n\n  \nbranch_secret\n:\n \n...\n,\n\n  \ndeepview_desktop\n:\n \nbranch_default\n,\n\n  \ndeepview_ios\n:\n \nbranch_default\n,\n\n  \ndeepview_android\n:\n \nbranch_default\n,\n\n  \nsitemap_enabled\n:\n \nnull\n,\n\n  \nesp_config\n:\n \nnull\n,\n\n  \nmap_utm_params\n:\n \nnull\n,\n\n  \nenterprise\n:\n \nfalse\n,\n\n  \nzuora_account_id\n:\n \nnull\n,\n\n  \nandroid_cd_enabled\n:\n \nnull\n,\n\n  \nandroid_cd_hashed\n:\n \nnull\n,\n\n  \nios_cd_enabled\n:\n \nnull\n,\n\n  \nios_cd_hashed\n:\n \nnull\n\n\n}\n\n\n\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nUsage\n\n\nRequired\n\n\n\n\n\n\n\n\n\n\nbranch_key\n\n\nstring\n\n\nFrom your \nBranch Settings Dashboard\n\n\n\u221a\n\n\n\n\n\n\nbranch_secret\n\n\nstring\n\n\nFrom your \nBranch Settings Dashboard\n\n\n\u221a\n\n\n\n\n\n\ndev_email\n\n\nstring\n\n\nThe main contact developer email\n\n\n\u221a\n\n\n\n\n\n\n...\n\n\n...\n\n\nParameters from \nApp Create\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nApp Troubleshooting\n\n\n\n\n\n\nMust use your \nbranch_key\n and \nbranch_secret\n from your \nBranch Settings Dashboard\n\n\n\n\n\n\nYou can get your \nuser_id\n from the \nBranch Account Dashboard\n\n\n\n\n\n\nThe API has a \n255\n character max\n\n\n\n\n\n\nReplace the \n...\n in the examples with values from your \nBranch Settings Dashboard", 
            "title": "API"
        }, 
        {
            "location": "/pages/apps/api/#link", 
            "text": "TODO: test curls\nTODO: test links\nTODO: remove confidential information\nTODO: referrals", 
            "title": "Link"
        }, 
        {
            "location": "/pages/apps/api/#link-create", 
            "text": "Request  curl   -XPOST   -H   Content-Type:   application/json   -d   { \n   branch_key :   key_live_icCccJIpd7GlYY5oOmoEtpafuDiuyXhT , \n   channel :   facebook , \n   feature :   onboarding , \n   campaign :   new product , \n   stage :   new user , \n   tags :   [ one ,   two ,   three ], \n   type :   2 , \n   data :   { \n     $canonical_identifier :   content/123 , \n     $og_title :   Title 123 ,    \n     $og_description :   Description 123 , \n     $og_image_url :   http://www.lorempixel.com/400/400/ , \n     $deeplink_path :   content/123 , \n     custom :   true , \n     random :   123 , \n     anything :   everything , \n     test :   [ 1 , 2 , 3 , 4 , 5 , 6 ], \n     $marketing_title :   this link \n   }  }   https://api.branch.io/v 1 /url     Response  { \n   url :   https://eneff.app.link/7nOIRkPsHz  }     Parameters     Key  Value  Usage  Required      branch_key  string  From your  Branch Settings Dashboard  \u221a    ...  ...  Parameters from  Configuring Links", 
            "title": "Link Create"
        }, 
        {
            "location": "/pages/apps/api/#link-create-bulk", 
            "text": "Request  curl   -XPOST   https://api.branch.io/v 1 /url/bulk/key_live_icCccJIpd 7 GlYY 5 oOmoEtpafuDiuyXhT   -d   \\  [ \n   { \n     channel :   facebook , \n     feature :   onboarding , \n     campaign :   new product , \n     stage :   new user , \n     tags :   [ one ,   two ,   three ], \n     data :   { \n       $canonical_identifier :   content/123 , \n       $og_title :   Title from Deep Link ,     \n       $og_description :   Description from Deep Link , \n       $og_image_url :   http://www.lorempixel.com/400/400/ , \n       $desktop_url :   http://www.example.com , \n       custom_boolean :   true , \n       custom_integer :   1243 , \n       custom_string :   everything , \n       custom_array :   [ 1 , 2 , 3 , 4 , 5 , 6 ], \n       custom_object :   {   random :   dictionary   } \n     } \n   }, \n   { \n     channel :   google , \n     feature :   loon , \n     campaign :   lift off \n   }  ]     Response  [ \n   { \n     url : https://eneff.app.link/HE7fprkxWE \n   }, \n   { \n     url : https://eneff.app.link/YawoqrkxWE \n   }  ]     Parameters     Key  Value  Usage  Required      branch_key  string  From your  Branch Settings Dashboard  \u221a    ...  ...  Parameters from  Configuring Links", 
            "title": "Link Create Bulk"
        }, 
        {
            "location": "/pages/apps/api/#link-read", 
            "text": "Request  curl   -XGET   -H   Content-Type:   application/json   https://api.branch.io/v 1 /url?branch_key=key_live_icCccJIpd 7 GlYY 5 oOmoEtpafuDiuyXhT url=https://eneff.app.link/ 7 nOIRkPsHz     Response  {   \n    campaign :   new product , \n    channel :   facebook , \n    feature :   onboarding , \n    stage :   new user , \n    tags :[   \n       one , \n       two , \n       three \n    ], \n    data :   {   \n       $canonical_identifier :   content/123 , \n       $deeplink_path :   content/123 , \n       $og_description :   Description 123 , \n       $og_image_url :   http://www.lorempixel.com/400/400/ , \n       $og_title :   Title 123 , \n       $one_time_use : false , \n       anything :   everything , \n       custom : true , \n       random : 123 , \n       ~campaign :   new product , \n       ~channel :   facebook , \n       ~creation_source : 0 , \n       ~feature :   onboarding , \n       ~id :   345698114818429601 , \n       ~stage :   new user , \n       ~tags :[   \n          one , \n          two , \n          three \n       ], \n       url :   https://eneff.app.link/7nOIRkPsHz \n    }, \n    type : 0 , \n    alias : null  }     Parameters     Key  Value  Usage  Required      branch_key  string  From your  Branch Settings Dashboard  \u221a    url  string  The deep link url  \u221a", 
            "title": "Link Read"
        }, 
        {
            "location": "/pages/apps/api/#link-update", 
            "text": "Request  curl   -XPUT   -H   Content-Type:   application/json   -d   { \n   branch_key :   key_live_icCccJIpd7GlYY5oOmoEtpafuDiuyXhT , \n   branch_secret :   secret_live_D3sN7UDL27glpNKZfGPt6BlmKD9txUBp , \n   channel :   twitter ,     \n   data :{ \n     name :   alex , \n     user_id :   12346 , \n     $deeplink_path :   article/jan/123 \n   }  }   https://api.branch.io/v 1 /url?url=https://eneff.app.link/ 7 nOIRkPsHz     Response  { \n   campaign :   new product , \n   channel :   twitter , \n   feature :   onboarding , \n   stage :   new user , \n   tags :   [ \n     one , \n     two , \n     three \n   ], \n   data :   { \n     $deeplink_path :   article/jan/123 , \n     $one_time_use :   false , \n     name :   alex , \n     user_id :   12346 , \n     ~campaign :   new product , \n     ~channel :   facebook , \n     ~creation_source :   0 , \n     ~feature :   onboarding , \n     ~id :   345698114818429601 , \n     ~stage :   new user , \n     ~tags :   [ \n       one , \n       two , \n       three \n     ], \n     url :   https://eneff.app.link/7nOIRkPsHz \n   }, \n   type :   0 , \n   alias :   null  }     Parameters     Key  Value  Usage  Required      branch_key  string  From your  Branch Settings Dashboard  \u221a    branch_secret  string  From your  Branch Settings Dashboard  \u221a    url  string  The deep link url  \u221a", 
            "title": "Link Update"
        }, 
        {
            "location": "/pages/apps/api/#link-troubleshooting", 
            "text": "Must use your  branch_key  and  branch_secret  from your  Branch Settings Dashboard    data  is overridden on  Link Update , not appended", 
            "title": "Link Troubleshooting"
        }, 
        {
            "location": "/pages/apps/api/#event", 
            "text": "", 
            "title": "Event"
        }, 
        {
            "location": "/pages/apps/api/#event-create", 
            "text": "Request  curl   -XPOST   -H   Content-Type:   application/json   -d   { \n   branch_key :   key_live_icCccJIpd7GlYY5oOmoEtpafuDiuyXhT , \n   event :   clicked_on_this , \n   identity :   bob , \n   metadata :   { \n     hello :   world , \n     custom_data :   12345 \n   }  }   https://api.branch.io/v 1 /event     Response  {}     Parameters     Key  Value  Usage  Required      branch_key  string  From your  Branch Settings Dashboard  \u221a    event  string  Name of the custom event  \u221a    identity  string  Unique user id, also known as the  Developer Id  on your  Branch Identity Dashboard     metadata  {}  Custom key-value pairs related to the event", 
            "title": "Event Create"
        }, 
        {
            "location": "/pages/apps/api/#user", 
            "text": "", 
            "title": "User"
        }, 
        {
            "location": "/pages/apps/api/#user-create", 
            "text": "Request  curl   -XPOST   -H   Content-Type:   application/json   -d   { \n   branch_key :   key_live_icCccJIpd7GlYY5oOmoEtpafuDiuyXhT , \n   identity :   bob , \n   identity_id :   222  }   https://api.branch.io/v 1 /profile     Response  { \n   identity_id :   222 , \n   link :   https:\\/\\/eneff.app.link\\/?%24identity_id=222  }     Parameters     Key  Value  Usage  Required      branch_key  string  From your  Branch Settings Dashboard  \u221a    identity  string  Unique user id, also known as the  Developer Id  on your  Branch Identity Dashboard  \u221a    identity_id  string  Unique user id for Branch, also known as the  Branch Identity Id  on your  Branch Identity Dashboard  \u221a", 
            "title": "User Create"
        }, 
        {
            "location": "/pages/apps/api/#user-read", 
            "text": "Request  curl   -XGET   -H   Content-Type:   application/json   https://api.branch.io/v 1 /profile?branch_key=key_live_icCccJIpd 7 GlYY 5 oOmoEtpafuDiuyXhT identity=bob   curl   -XGET   -H   Content-Type:   application/json   https://api.branch.io/v 1 /profile?branch_key=key_live_icCccJIpd 7 GlYY 5 oOmoEtpafuDiuyXhT identity_id= 222     Response  { \n   identity_id :   222 , \n   identity :   bob , \n   link :   https://eneff.app.link/?%24identity_id=222  }     Parameters     Key  Value  Usage  Required      branch_key  string  From your  Branch Settings Dashboard  \u221a    identity  string  Unique user id, also known as the  Developer Id  on your  Branch Identity Dashboard  \u221a*    identity_id  string  Unique user id for Branch, also known as the  Branch Identity Id  on your  Branch Identity Dashboard  \u221a*      *  =   identity   OR   identity_id  is required", 
            "title": "User Read"
        }, 
        {
            "location": "/pages/apps/api/#referral", 
            "text": "", 
            "title": "Referral"
        }, 
        {
            "location": "/pages/apps/api/#referral-update", 
            "text": "", 
            "title": "Referral Update"
        }, 
        {
            "location": "/pages/apps/api/#referral-read", 
            "text": "", 
            "title": "Referral Read"
        }, 
        {
            "location": "/pages/apps/api/#referral-create", 
            "text": "", 
            "title": "Referral Create"
        }, 
        {
            "location": "/pages/apps/api/#app", 
            "text": "", 
            "title": "App"
        }, 
        {
            "location": "/pages/apps/api/#app-create", 
            "text": "Request   curl   -XPOST   -H   Content-Type:   application/json   -d   { \n   user_id :   293816316559643406 , \n   app_name :   eneff_test_3 , \n   dev_name :   Ethan Neff , \n   dev_email :   eneff@branch.io , \n\n   always_open_app :   1 , \n\n   android_app :   2 ,  \n   android_url :   https://www.example.com/ios ,  \n   android_uri_scheme :   branchtest:// ,  \n   android_package_name :   com.branch.test ,  \n   android_app_links_enabled :   1 ,   \n   sha256_cert_fingerprints :   [ 14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 ],  \n\n   ios_app :   2 ,  \n   ios_url :   https://www.example.com/ios ,  \n   ios_uri_scheme :   branchtest:// ,  \n   ios_store_country :   US ,  \n   universal_linking_enabled :   1 ,    \n   ios_bundle_id :   com.branch.test ,  \n   ios_team_id :   PW4Q8885U7 ,  \n\n   fire_url :   https://www.example.com/amazon ,  \n   windows_phone_url :   https://www.example.com/windows ,  \n   blackberry_url :   https://www.example.com/blackberry ,  \n   web_url :   https://www.example.com/web ,  \n\n   default_desktop_url :   https://www.example.com/desktop ,  \n   text_message :   Download me! {{ link }} , \n\n   og_app_id :   branch 123 ,  \n   og_title :   branch test ,  \n   og_description :   branch description ,  \n   og_image_url :   http://lorempixel.com/400/400/ ,  \n\n   deepview_desktop :   branch_default ,  \n   deepview_ios :   branch_default ,  \n   deepview_android :   branch_default  }   https://api.branch.io/v 1 /app     Response  { \n   id :   ... , \n   app_key :   ... , \n   creation_date :   2016-12-21T22:51:49.067Z , \n   app_name :   eneff_test_3 , \n   origin :   API: creator id = 293816316559643406, creator email = eneff@branch.io , \n   dev_name :   Ethan Neff , \n   dev_email :   eneff@branch.io , \n   always_open_app :   1 , \n   android_app :   2 , \n   android_url :   https:\\/\\/www.example.com\\/ios , \n   android_uri_scheme :   branchtest:\\/\\/ , \n   android_package_name :   com.branch.test , \n   sha256_cert_fingerprints :   [ \n     14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 \n   ], \n   android_app_links_enabled :   1 , \n   ios_app :   2 , \n   ios_url :   https:\\/\\/www.example.com\\/ios , \n   ios_uri_scheme :   branchtest:\\/\\/ , \n   ios_store_country :   US , \n   ios_bundle_id :   com.branch.test , \n   ios_team_id :   PW4Q8885U7 , \n   universal_linking_enabled :   1 , \n   fire_url :   https:\\/\\/www.example.com\\/amazon , \n   windows_phone_url :   https:\\/\\/www.example.com\\/windows , \n   blackberry_url :   https:\\/\\/www.example.com\\/blackberry , \n   web_url :   https:\\/\\/www.example.com\\/web , \n   default_desktop_url :   https:\\/\\/www.example.com\\/desktop , \n   short_url_domain :   , \n   default_short_url_domain :   jqk5.app.link , \n   alternate_short_url_domain :   jqk5-alternate.app.link , \n   text_message :   Download me! {{ link }} , \n   og_app_id :   branch 123 , \n   og_title :   branch test , \n   og_image_url :   http:\\/\\/lorempixel.com\\/400\\/400\\/ , \n   og_description :   branch description , \n   branch_key :   ... , \n   branch_secret :   ... , \n   deepview_desktop :   branch_default , \n   deepview_ios :   branch_default , \n   deepview_android :   branch_default  }     Parameters     Key  Value  Usage  Required      user_id  string  The Dashboard User Id obtained from  Branch Account Dashboard  \u221a    app_name  string  The name of the app  \u221a    dev_name  string  The main contact developer name  \u221a    dev_email  string  The main contact developer email. A email is sent on account creation  \u221a    android_app  string  Whether an Android app is enabled.  0  or  1  indicating  true     android_url  string  The url of the Android store, or package name (e.g.  com.android.myapp ).  android_app  must be set to  2     android_uri_scheme  string  The Android URI scheme     android_package_name  string  The Android package name (e.g.  com.android.myapp )     sha256_cert_fingerprints  [string]  The SHA256 fingerprints for App Links     android_app_links_enabled  string  Whether App Links are enabled.  0  or  1  indicating  true     ios_app  string  Whether an iOS app is enabled, ( 0  or  1  indicating  true     ios_url  string  The url of iOS store, or app id (e.g.  id512451233 ), or a fallback URL for iOS if present.  ios_app  must be set to  2     ios_uri_scheme  string  The iOS URI scheme     ios_store_country  string  The country code of the app, defaults to  US     ios_bundle_id  string  The iOS Bundle Id     ios_team_id  string  The iOS Team Id     universal_linking_enabled  string  Whether Universal Links should be enabled.  0  or  1  indicating  true     fire_url  string  The redirect on Fire phone     windows_phone_url  string  The redirect on Windows phone     blackberry_url  string  The redirect on Blackberry phone     web_url  string  Backup website if URLs are  null     default_desktop_url  string  The default desktop redirect, or  null  if set to hosted SMS     text_message  string  Text message to use for text-me feature,  {{ link }}  is required and will be replaced with a deep link     og_app_id  string  Open Graph app id     og_title  string  Open Graph title to be used with link     og_description  string  Open Graph description to be used with link     og_image_url  string  Open Graph image URL to be used with link     deepview_desktop  string  The current deepview selected for the desktop platform     deepview_ios  string  The current deepview selected for the iOS platform     deepview_android  string  The current deepview selected for the Android platform", 
            "title": "App Create"
        }, 
        {
            "location": "/pages/apps/api/#app-read", 
            "text": "Request  curl   -XGET   -H   Content-Type:   application/json   https://api.branch.io/v 1 /app/key_live_icCccJIpd 7 GlYY 5 oOmoEtpafuDiuyXhT?branch_secret=...     Response  { \n   id :   ... , \n   app_key :   ... , \n   creation_date :   2016-12-21T22:51:49.067Z , \n   app_name :   eneff_test_3 , \n   origin :   API: creator id = 293816316559643406, creator email = eneff@branch.io , \n   dev_name :   Ethan Neff , \n   dev_email :   eneff@branch.io , \n   always_open_app :   1 , \n   auto_fetch :   null , \n   android_app :   2 , \n   android_url :   https:\\/\\/www.example.com\\/ios , \n   android_uri_scheme :   branchtest:\\/\\/ , \n   android_package_name :   com.branch.test , \n   sha256_cert_fingerprints :   [ \n     14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 \n   ], \n   android_app_links_enabled :   true , \n   ios_app :   2 , \n   ios_url :   https:\\/\\/www.example.com\\/ios , \n   ios_uri_scheme :   branchtest:\\/\\/ , \n   ios_store_country :   US , \n   ios_bundle_id :   com.branch.test , \n   ios_team_id :   PW4Q8885U7 , \n   universal_linking_enabled :   true , \n   fire_url :   https:\\/\\/www.example.com\\/amazon , \n   windows_phone_url :   https:\\/\\/www.example.com\\/windows , \n   blackberry_url :   https:\\/\\/www.example.com\\/blackberry , \n   web_url :   https:\\/\\/www.example.com\\/web , \n   default_desktop_url :   https:\\/\\/www.example.com\\/desktop , \n   short_url_domain :   , \n   default_short_url_domain :   jqk5.app.link , \n   alternate_short_url_domain :   jqk5-alternate.app.link , \n   text_message :   Download me! {{ link }} , \n   og_app_id :   branch 123 , \n   og_title :   branch test , \n   og_image_url :   http:\\/\\/lorempixel.com\\/400\\/400\\/ , \n   og_description :   branch description , \n   branch_key :   ... , \n   branch_secret :   ... , \n   deepview_desktop :   branch_default , \n   deepview_ios :   branch_default , \n   deepview_android :   branch_default , \n   sitemap_enabled :   null , \n   esp_config :   null , \n   map_utm_params :   null , \n   enterprise :   false , \n   zuora_account_id :   null , \n   android_cd_enabled :   null , \n   android_cd_hashed :   null , \n   ios_cd_enabled :   null , \n   ios_cd_hashed :   null  }     Parameters     Key  Value  Usage  Required      branch_key  string  From your  Branch Settings Dashboard  \u221a    branch_secret  string  From your  Branch Settings Dashboard  \u221a", 
            "title": "App Read"
        }, 
        {
            "location": "/pages/apps/api/#app-update", 
            "text": "Request  curl   -XPUT   -H   Content-Type:   application/json   -d   { \n   branch_secret :   ... ,   \n   dev_email :   eneff@branch.io , \n   og_description :   branch description updated  }   https://api.branch.io/v 1 /app/key_live_icCccJIpd 7 GlYY 5 oOmoEtpafuDiuyXhT     Response  { \n   id :   ... , \n   app_key :   ... , \n   creation_date :   2016-12-21T21:36:44.613Z , \n   app_name :   eneff_test_3_updated , \n   origin :   API: creator id = 293816316559643406, creator email = eneff@branch.io , \n   dev_name :   Ethan Neff , \n   dev_email :   eneff@branch.io , \n   always_open_app :   1 , \n   auto_fetch :   null , \n   android_app :   2 , \n   android_url :   https:\\/\\/www.example.com\\/ios , \n   android_uri_scheme :   branchtest:\\/\\/ , \n   android_package_name :   com.branch.test , \n   sha256_cert_fingerprints :   [ \n     14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 \n   ], \n   android_app_links_enabled :   true , \n   ios_app :   2 , \n   ios_url :   https:\\/\\/www.example.com\\/ios , \n   ios_uri_scheme :   branchtest:\\/\\/ , \n   ios_store_country :   US , \n   ios_bundle_id :   com.branch.test , \n   ios_team_id :   PW4Q8885U7 , \n   universal_linking_enabled :   true , \n   fire_url :   https:\\/\\/www.example.com\\/amazon , \n   windows_phone_url :   https:\\/\\/www.example.com\\/windows , \n   blackberry_url :   https:\\/\\/www.example.com\\/blackberry , \n   web_url :   https:\\/\\/www.example.com\\/web , \n   default_desktop_url :   https:\\/\\/www.example.com\\/desktop , \n   short_url_domain :   , \n   default_short_url_domain :   nz02.app.link , \n   alternate_short_url_domain :   nz02-alternate.app.link , \n   text_message :   Download me! {{ link }} , \n   og_app_id :   branch 123 , \n   og_title :   branch test , \n   og_image_url :   http:\\/\\/lorempixel.com\\/400\\/400\\/ , \n   og_description :   branch description updated , \n   branch_key :   ... , \n   branch_secret :   ... , \n   deepview_desktop :   branch_default , \n   deepview_ios :   branch_default , \n   deepview_android :   branch_default , \n   sitemap_enabled :   null , \n   esp_config :   null , \n   map_utm_params :   null , \n   enterprise :   false , \n   zuora_account_id :   null , \n   android_cd_enabled :   null , \n   android_cd_hashed :   null , \n   ios_cd_enabled :   null , \n   ios_cd_hashed :   null  }     Parameters     Key  Value  Usage  Required      branch_key  string  From your  Branch Settings Dashboard  \u221a    branch_secret  string  From your  Branch Settings Dashboard  \u221a    dev_email  string  The main contact developer email  \u221a    ...  ...  Parameters from  App Create", 
            "title": "App Update"
        }, 
        {
            "location": "/pages/apps/api/#app-troubleshooting", 
            "text": "Must use your  branch_key  and  branch_secret  from your  Branch Settings Dashboard    You can get your  user_id  from the  Branch Account Dashboard    The API has a  255  character max    Replace the  ...  in the examples with values from your  Branch Settings Dashboard", 
            "title": "App Troubleshooting"
        }, 
        {
            "location": "/pages/links/behavior/", 
            "text": "Default behavior\n\n\n\n\n\n\nApp is installed\n\n\n\n\nUser \nclicks\n on a Branch deep link\n\n\nDevice \nopens\n app\n\n\nBranch passes deep link \ndata\n into app\n\n\n\n\n\n\n\n\nApp is not installed\n\n\n\n\nUser \nclicks\n on a Branch deep link\n\n\nDevice navigates to the App Store, Google Playstore, or Fallback URL\n\n\nUser \ninstalls\n and \nopens\n app\n\n\nBranch passes deep link \ndata\n into app\n\n\n\n\n\n\n\n\nCustom behavior\n\n\n\n\n\n\nPass data from link to app\n\n\n\n\nhttps://s3z3.app.link/fzmLEhobLD?$custom_data=123\n \n\n\nTODO dashboard TODO sdks\n\n\n\n\n\n\n\n\nRedirect when app is not installed\n\n\n\n\nhttps://name.app.link?$ios_url=https://example.com\n query string\n\n\n$ios_url = 'https://example.com'\n added to \nlink data\n\n\n$fallback_url = 'https://example.com'\n added to \nlink data\n\n\n$ios_deepview = 'deepviewId'\n added to \nlink data\n\n\nDeep view\n enabled globally on the \nBranch Dashboard\n\n\niOS Custom URL\n added on the \nBranch Dashboard\n\n\nDefault URL\n added on the \nBranch Dashboard\n\n\n(ordered by precedence)\n\n\n\n\n\n\n\n\nRedirect when app is installed\n\n\n\n\niOS:\n need to override \nUniversal Links\n\n\nAdd \n$web_only = true\n \ndocs\n\n\nAdd redirect \n$ios_url = 'https://google.com'\n\n\nor\n Append \n/e/\n by \nhttps://s3z3.app.link/fzmLEhobLD\n -\n \nhttps://s3z3.app.link/e/fzmLEhobLD\n\n\n\n\n\n\nAndroid:\n need to override \nApp Links\n\n\nUncheck \nEnable App Links\n and \nSave\n the \nBranch Dashboard\n\n\nAdd redirect \n$android_url = 'https://google.com'\n\n\nAdd a broken URI Scheme with \n$android_deeplink_path = 'random'\n\n\n\n\n\n\n\n\n\n\n\n\nSocial behavior\n\n\n\n\nOG Tags TODO\n\n\nDeep view TODO\n\n\n\n\nSupported platforms\n\n\n\n\n\n\nApps which support Branch deep links\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nUsage\n\n\nAndroid\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\nFacebook NewsFeed\n\n\n\u2705\n\n\nDeep Views\n must be enabled\n\n\n\u2705\n\n\n\n\n\n\n\n\nFacebook Messanger\n\n\n\u2705\n\n\nDeep Views\n must be enabled\n\n\n\u2705\n\n\n\n\n\n\n\n\nInstagram\n\n\n\u2705\n\n\nDeep Views\n must be enabled\n\n\n\u2705\n\n\n\n\n\n\n\n\nSnapChat\n\n\n\u2705\n\n\nDeep Views\n must be enabled\n\n\n\ud83c\udd7e\ufe0f\n\n\napp.link\n deep links are not clickable\n\n\n\n\n\n\nTwitter\n\n\n\u2705\n\n\nDeep Views\n must be enabled\n\n\n\u2705\n\n\n\n\n\n\n\n\nPinterest\n\n\n\u2705\n\n\nDeep Views\n must be enabled\n\n\n\u2705\n\n\n\n\n\n\n\n\nLine\n\n\n\u2705\n\n\nDeep Views\n must be enabled\n\n\n\u2705\n\n\n\n\n\n\n\n\nSkype\n\n\n\u2705\n\n\nDeep Views\n must be enabled\n\n\n\u2705\n\n\n\n\n\n\n\n\nSlack\n\n\n\u2705\n\n\n\n\n\u2705\n\n\n\n\n\n\n\n\nChrome address bar\n\n\n\u2705\n\n\n\n\n\u2705\n\n\n\n\n\n\n\n\nChrome web page\n\n\n\u2705\n\n\n\n\n\u2705\n\n\n\n\n\n\n\n\nFireFox address bar\n\n\n\ud83c\udd7e\ufe0f\n\n\n\n\n\u2705\n\n\n\n\n\n\n\n\nFireFox web page\n\n\n\u2705\n\n\n\n\n\u2705\n\n\n\n\n\n\n\n\nSafari address bar\n\n\n\ud83c\udd7e\ufe0f\n\n\n\n\n\n\n\n\n\n\n\n\nSafari web page\n\n\n\u2705\n\n\n\n\n\n\n\n\n\n\n\n\nWeChat\n\n\n\u2705\n\n\nDeep Views\n must enabled\n\n\n\u2705\n\n\n\n\n\n\n\n\nWhatsApp\n\n\n\u2705\n\n\n\n\n\u2705\n\n\n\n\n\n\n\n\nHangouts\n\n\n\u2705\n\n\n\n\n\u2705\n\n\n\n\n\n\n\n\niMessage\n\n\n\u2705\n\n\n\n\n\n\n\n\n\n\n\n\nApple Mail\n\n\n\u2705\n\n\n\n\n\n\n\n\n\n\n\n\nGmail\n\n\n\u2705\n\n\n\n\n\u2705", 
            "title": "Link behavior"
        }, 
        {
            "location": "/pages/links/behavior/#default-behavior", 
            "text": "", 
            "title": "Default behavior"
        }, 
        {
            "location": "/pages/links/behavior/#app-is-installed", 
            "text": "User  clicks  on a Branch deep link  Device  opens  app  Branch passes deep link  data  into app", 
            "title": "App is installed"
        }, 
        {
            "location": "/pages/links/behavior/#app-is-not-installed", 
            "text": "User  clicks  on a Branch deep link  Device navigates to the App Store, Google Playstore, or Fallback URL  User  installs  and  opens  app  Branch passes deep link  data  into app", 
            "title": "App is not installed"
        }, 
        {
            "location": "/pages/links/behavior/#custom-behavior", 
            "text": "", 
            "title": "Custom behavior"
        }, 
        {
            "location": "/pages/links/behavior/#pass-data-from-link-to-app", 
            "text": "https://s3z3.app.link/fzmLEhobLD?$custom_data=123    TODO dashboard TODO sdks", 
            "title": "Pass data from link to app"
        }, 
        {
            "location": "/pages/links/behavior/#redirect-when-app-is-not-installed", 
            "text": "https://name.app.link?$ios_url=https://example.com  query string  $ios_url = 'https://example.com'  added to  link data  $fallback_url = 'https://example.com'  added to  link data  $ios_deepview = 'deepviewId'  added to  link data  Deep view  enabled globally on the  Branch Dashboard  iOS Custom URL  added on the  Branch Dashboard  Default URL  added on the  Branch Dashboard  (ordered by precedence)", 
            "title": "Redirect when app is not installed"
        }, 
        {
            "location": "/pages/links/behavior/#redirect-when-app-is-installed", 
            "text": "iOS:  need to override  Universal Links  Add  $web_only = true   docs  Add redirect  $ios_url = 'https://google.com'  or  Append  /e/  by  https://s3z3.app.link/fzmLEhobLD  -   https://s3z3.app.link/e/fzmLEhobLD    Android:  need to override  App Links  Uncheck  Enable App Links  and  Save  the  Branch Dashboard  Add redirect  $android_url = 'https://google.com'  Add a broken URI Scheme with  $android_deeplink_path = 'random'", 
            "title": "Redirect when app is installed"
        }, 
        {
            "location": "/pages/links/behavior/#social-behavior", 
            "text": "OG Tags TODO  Deep view TODO", 
            "title": "Social behavior"
        }, 
        {
            "location": "/pages/links/behavior/#supported-platforms", 
            "text": "Apps which support Branch deep links      iOS  Usage  Android  Usage      Facebook NewsFeed  \u2705  Deep Views  must be enabled  \u2705     Facebook Messanger  \u2705  Deep Views  must be enabled  \u2705     Instagram  \u2705  Deep Views  must be enabled  \u2705     SnapChat  \u2705  Deep Views  must be enabled  \ud83c\udd7e\ufe0f  app.link  deep links are not clickable    Twitter  \u2705  Deep Views  must be enabled  \u2705     Pinterest  \u2705  Deep Views  must be enabled  \u2705     Line  \u2705  Deep Views  must be enabled  \u2705     Skype  \u2705  Deep Views  must be enabled  \u2705     Slack  \u2705   \u2705     Chrome address bar  \u2705   \u2705     Chrome web page  \u2705   \u2705     FireFox address bar  \ud83c\udd7e\ufe0f   \u2705     FireFox web page  \u2705   \u2705     Safari address bar  \ud83c\udd7e\ufe0f       Safari web page  \u2705       WeChat  \u2705  Deep Views  must enabled  \u2705     WhatsApp  \u2705   \u2705     Hangouts  \u2705   \u2705     iMessage  \u2705       Apple Mail  \u2705       Gmail  \u2705   \u2705", 
            "title": "Supported platforms"
        }, 
        {
            "location": "/pages/links/data/", 
            "text": "Link data\n\n\nStructure\n\n\n\n\n\n\nDeep link data structure\n\n\n{\n\n  \ntags\n:\n \n[\n \ntag1\n,\n \ntag2\n \n],\n\n  \nchannel\n:\n \nfacebook\n,\n\n  \nfeature\n:\n \ndashboard\n,\n\n  \nstage\n:\n \nnew user\n,\n\n  \nalias\n:\n \nmyalias\n,\n\n  \ndata\n:\n \n{\n\n    \nmydata\n:\n \nsomething\n,\n\n    \nfoo\n:\n \nbar\n,\n\n    \n$desktop_url\n:\n \nhttp://myappwebsite.com\n,\n\n    \n$ios_url\n:\n \nhttp://myappwebsite.com/ios\n,\n\n    \n$android_url\n:\n \nhttp://myappwebsite.com/android\n,\n\n    \n$og_app_id\n:\n \n12345\n,\n\n    \n$og_title\n:\n \nMy App\n,\n\n    \n$og_description\n:\n \nMy app\\\ns description.\n,\n\n    \n$og_image_url\n:\n \nhttp://myappwebsite.com/image.png\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\n\n\nBranch reserved keys\n\n\n\n\n\n\n\n\nPrefix\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\n$\n\n\nBranch reserved keyword\n\n\n\n\n\n\n~\n\n\nBranch analytical data\n\n\n\n\n\n\n+\n\n\nBranch added values\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKey\n\n\nDefault\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\n+match_guaranteed\n\n\nfalse\n\n\nTODO\n\n\n\n\n\n\n+is_first_session\n\n\nfalse\n\n\nTODO\n\n\n\n\n\n\n+clicked_branch_link\n\n\nfalse\n\n\nTODO\n\n\n\n\n\n\n+non_branch_link\n\n\nfalse\n\n\nTODO\n\n\n\n\n\n\n\n\n\n\n\n\nAnalytical labels\n\n\n\n\n\n\nFor \nCreate Deep Link\n and \nShare Deep Link\n\n\n\n\n\n\n\n\nKey\n\n\nDefault\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\nchannel\n\n\n\n\nUse channel to tag the route that your link reaches users. For example, tag links with \n'Facebook'\n or \n'LinkedIn'\n to help track clicks and installs through those paths separately\n\n\n\n\n\n\nfeature\n\n\n\n\nThis is the feature of your app that the link might be associated with. For example, if you had built a referral program, you would label links with the feature \u2018referral\u2019\n\n\n\n\n\n\ncampaign\n\n\n\n\nUse this field to organize the links by actual campaign. For example, if you launched a new feature or product and want to run a campaign around that\n\n\n\n\n\n\nstage\n\n\n\n\nUse this to categorize the progress or category of a user when the link was generated. For example, if you had an invite system accessible on level 1, level 3 and 5, you could differentiate links generated at each level with this parameter\n\n\n\n\n\n\ntags\n\n\n\n\nThis is a free form entry with unlimited values \n['string']\n. Use it to organize your link data with labels that don\u2019t fit within the bounds of the above\n\n\n\n\n\n\nalias\n\n\n\n\nSpecify a link alias in place of the standard encoded short URL e.g. \nyourdomain.com/youralias\n. Link aliases are unique, immutable objects that cannot be deleted. You cannot change the alias of existing links. Aliases on the legacy \nbnc.lt\n domain are incompatible with Universal Links and Spotlight\n\n\n\n\n\n\ntype\n\n\n0\n\n\nMust be an \nint\n. Set to \n1\n to limit deep link to a single use. Set to \n2\n to make the link show up under \nQuick Links\n while adding \n$marketing_title\n to \ndata\n. Does not work with the Native SDKs.\n\n\n\n\n\n\n\n\n\n\n\n\nCustom data\n\n\n\n\n\n\nPass any custom data to be read inside your app\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\nrandom\n\n\n123\n\n\nAny key-value pair\n\n\n\n\n\n\nhello\n\n\n'world'\n\n\nAny key-value pair\n\n\n\n\n\n\ncustom_data\n\n\ntrue\n\n\nAny key-value pair\n\n\n\n\n\n\nany_value\n\n\n{ 'random': 'dictionary' }\n\n\nAny key-value pair\n\n\n\n\n\n\nlook_at\n\n\n[1,2,3,4,5,6]\n\n\nAny key-value pair\n\n\n\n\n\n\nnav_here\n\n\ncontent/123\n\n\nAny key-value pair\n\n\n\n\n\n\n\n\n\n\n\n\nRedirections\n\n\n\n\nNavigate to different locations based on device information\n\n\n\n\nNavigation URLs must be websites, not deep links\n\n\n\n\n\n\n\n\nKey\n\n\nDefault\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\n$fallback_url\n\n\n\n\nChange the redirect endpoint for all platforms - so you don\u2019t have to enable it by platform. Note that Branch will forward all robots to this URL, which \noverrides any OG tags\n entered in the link.  System-wide Default URL (set in Link Settings)\n\n\n\n\n\n\n$desktop_url\n\n\n\n\nChange the redirect endpoint on desktops Text-Me-The-App page (set in Link Settings)\n\n\n\n\n\n\n$ios_url\n\n\n\n\nChange the redirect endpoint for iOS  App Store page for your app (set in Link Settings)\n\n\n\n\n\n\n$ipad_url\n\n\n\n\nChange the redirect endpoint for iPads \n$ios_url\n value\n\n\n\n\n\n\n$android_url\n\n\n\n\nChange the redirect endpoint for Android  Play Store page for your app (set in Link Settings)\n\n\n\n\n\n\n$windows_phone_url\n\n\n\n\nChange the redirect endpoint for Windows OS Windows Phone default URL (set in Link Settings)\n\n\n\n\n\n\n$blackberry_url\n\n\n\n\nChange the redirect endpoint for Blackberry OS  BlackBerry default URL (set in Link Settings)\n\n\n\n\n\n\n$fire_url\n\n\n\n\nChange the redirect endpoint for Amazon Fire OS Fire default URL (set in Link Settings)\n\n\n\n\n\n\n$ios_wechat_url\n\n\n\n\nChange the redirect endpoint for WeChat on iOS devices \n$ios_url value\n\n\n\n\n\n\n$android_wechat_url\n\n\n\n\nChange the redirect endpoint for WeChat on Android devices  \n$android_url\n value\n\n\n\n\n\n\n$after_click_url\n\n\n\n\nURL redirect to after the main click redirect has completed\n\n\n\n\n\n\n$web_only\n\n\nfalse\n\n\nForce to open the \n$fallback_url\n instead of the app\n\n\n\n\n\n\n\n\n\n\n\n\nDeep linking\n\n\n\n\n\n\nNavigate to different locations based on device information\n\n\n\n\n\n\n\n\nKey\n\n\nDefault\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\n$deeplink_path\n\n\nopen?link_click_id=1234\n\n\nSet the deep link path for all platforms - so you don\u2019t have to enable it by platform. When the Branch SDK receives a link with this parameter set, it will automatically load the custom URI path contained within\n\n\n\n\n\n\n$android_deeplink_path\n\n\n\n\nSet the deep link path for Android apps When the Branch SDK receives a link with this parameter set, it will automatically load the custom URI path contained within\n\n\n\n\n\n\n$ios_deeplink_path\n\n\n\n\nSet the deep link path for iOS apps. When the Branch SDK receives a link with this parameter set, it will automatically load the custom URI path contained within\n\n\n\n\n\n\n$match_duration\n\n\n7200\n\n\nLets you control the snapshotting match timeout (the time that a click will wait for an app open to match) also known as attribution window. Specified in seconds\n\n\n\n\n\n\n$always_deeplink\n\n\ntrue\n\n\nSet to \nfalse\n to make links always fall back to your mobile site. Does not apply to Universal Links or Android App Links.\n\n\n\n\n\n\n$ios_redirect_timeout\n\n\n750\n\n\nControl the timeout that the client-side JS waits after trying to open up the app before redirecting to the App Store. Specified in milliseconds\n\n\n\n\n\n\n$android_redirect_timeout\n\n\n750\n\n\nControl the timeout that the client side JS waits after trying to open up the app before redirecting to the Play Store. Specified in milliseconds\n\n\n\n\n\n\n$one_time_use\n\n\nfalse\n\n\nSet to \ntrue\n to limit deep linking behavior of the generated link to a single use. Can also be set using type\n\n\n\n\n\n\n$custom_sms_text\n\n\n\n\nText for SMS link sent for desktop clicks to this link. Must contain \n{{ link }}\n Value of Text me the app page in Settings\n\n\n\n\n\n\n$marketing_title\n\n\n\n\nThe Marketing Title for the deep link in the \nQuick Links\n\n\n\n\n\n\n\n\n\n\n\n\nContent\n\n\n\n\n\n\nset\n\n\n\n\n\n\n\n\nKey\n\n\nDefault\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\n$publicly_indexable\n\n\n1\n\n\nCannot modify here. Needs to be set by the Branch Universal Object\n\n\n\n\n\n\n$keywords\n\n\n\n\nKeywords for which this content should be discovered by. Just assign an array of strings with the keywords you\u2019d like to use\n\n\n\n\n\n\n$canonical_identifier\n\n\n\n\nThis is the unique identifier for content that will help Branch dedupe across many instances of the same thing. Suitable options: a website with pathing, or a database with identifiers for entities\n\n\n\n\n\n\n$exp_date\n\n\n0\n\n\nCannot modify here. Needs to be set by the Branch Universal Object. Must be epoch timestamp with milliseconds\n\n\n\n\n\n\n$content_type\n\n\n\n\nThis is a label for the type of content present. Apple recommends that you use uniform type identifier as described here\n\n\n\n\n\n\n\n\n\n\n\n\nDeepView\n\n\n\n\n\n\nset\n\n\n\n\n\n\n\n\nKey\n\n\nDefault\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\n$ios_deepview\n\n\ndefault_template\n\n\nThe name of the deepview template to use for iOS\n\n\n\n\n\n\n$android_deepview\n\n\ndefault_template\n\n\nThe name of the deepview template to use for Android\n\n\n\n\n\n\n$desktop_deepview\n\n\ndefault_template\n\n\nThe name of the deepview template to use for the Desktop\n\n\n\n\n\n\n\n\n\n\n\n\nOpen Graph\n\n\n\n\n\n\nset\n\n\n\n\n\n\n\n\nKey\n\n\nDefault\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\n$og_title\n\n\n\n\nSet the title of the link as it will be seen in social media displays\n\n\n\n\n\n\n$og_description\n\n\n\n\nSet the description of the link as it will be seen in social media displays\n\n\n\n\n\n\n$og_image_url\n\n\n\n\nSet the image of the link as it will be seen in social media displays\n\n\n\n\n\n\n$og_image_width\n\n\n\n\nSet the image\u2019s width in pixels for social media displays\n\n\n\n\n\n\n$og_image_height\n\n\n\n\nSet the image\u2019s height in pixels for social media displays\n\n\n\n\n\n\n$og_video\n\n\n\n\nSet a video as it will be seen in social media displays\n\n\n\n\n\n\n$og_url\n\n\n\n\nSet the base URL of the link as it will be seen in social media displays\n\n\n\n\n\n\n$og_type\n\n\n\n\nSet the type of custom card format link as it will be seen in social media displays\n\n\n\n\n\n\n$og_redirect\n\n\n\n\n(Advanced, not recommended) Set a custom URL that we redirect the social media robots to in order to retrieve all the appropriate tags\n\n\n\n\n\n\n$og_app_id\n\n\n\n\n(Rarely used) Sets the app id tag\n\n\n\n\n\n\n\n\n\n\n\n\nTwitter\n\n\n\n\n\n\nset\n\n\n\n\n\n\n\n\nKey\n\n\nDefault\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\n$twitter_card\n\n\n\n\nSet the Twitter card type of the link\n\n\n\n\n\n\n$twitter_title\n\n\n\n\nSet the title of the Twitter card\n\n\n\n\n\n\n$twitter_description\n\n\n\n\nSet the description of the Twitter card\n\n\n\n\n\n\n$twitter_image_url\n\n\n\n\nSet the image URL for the Twitter card\n\n\n\n\n\n\n$twitter_site\n\n\n\n\nSet the site for Twitter\n\n\n\n\n\n\n$twitter_app_country\n\n\n\n\nSet the app country for the app card\n\n\n\n\n\n\n$twitter_player\n\n\n\n\nSet the video player\u2019s URL. Defaults to the value of \n$og_video\n.\n\n\n\n\n\n\n$twitter_player_width\n\n\n\n\nSet the player\u2019s width in pixels\n\n\n\n\n\n\n$twitter_player_height\n\n\n\n\nSet the player\u2019s height in pixels", 
            "title": "Link data"
        }, 
        {
            "location": "/pages/links/data/#link-data", 
            "text": "", 
            "title": "Link data"
        }, 
        {
            "location": "/pages/links/data/#structure", 
            "text": "Deep link data structure  { \n   tags :   [   tag1 ,   tag2   ], \n   channel :   facebook , \n   feature :   dashboard , \n   stage :   new user , \n   alias :   myalias , \n   data :   { \n     mydata :   something , \n     foo :   bar , \n     $desktop_url :   http://myappwebsite.com , \n     $ios_url :   http://myappwebsite.com/ios , \n     $android_url :   http://myappwebsite.com/android , \n     $og_app_id :   12345 , \n     $og_title :   My App , \n     $og_description :   My app\\ s description. , \n     $og_image_url :   http://myappwebsite.com/image.png \n   }  }     Branch reserved keys     Prefix  Usage      $  Branch reserved keyword    ~  Branch analytical data    +  Branch added values        Key  Default  Usage      +match_guaranteed  false  TODO    +is_first_session  false  TODO    +clicked_branch_link  false  TODO    +non_branch_link  false  TODO", 
            "title": "Structure"
        }, 
        {
            "location": "/pages/links/data/#analytical-labels", 
            "text": "For  Create Deep Link  and  Share Deep Link     Key  Default  Usage      channel   Use channel to tag the route that your link reaches users. For example, tag links with  'Facebook'  or  'LinkedIn'  to help track clicks and installs through those paths separately    feature   This is the feature of your app that the link might be associated with. For example, if you had built a referral program, you would label links with the feature \u2018referral\u2019    campaign   Use this field to organize the links by actual campaign. For example, if you launched a new feature or product and want to run a campaign around that    stage   Use this to categorize the progress or category of a user when the link was generated. For example, if you had an invite system accessible on level 1, level 3 and 5, you could differentiate links generated at each level with this parameter    tags   This is a free form entry with unlimited values  ['string'] . Use it to organize your link data with labels that don\u2019t fit within the bounds of the above    alias   Specify a link alias in place of the standard encoded short URL e.g.  yourdomain.com/youralias . Link aliases are unique, immutable objects that cannot be deleted. You cannot change the alias of existing links. Aliases on the legacy  bnc.lt  domain are incompatible with Universal Links and Spotlight    type  0  Must be an  int . Set to  1  to limit deep link to a single use. Set to  2  to make the link show up under  Quick Links  while adding  $marketing_title  to  data . Does not work with the Native SDKs.", 
            "title": "Analytical labels"
        }, 
        {
            "location": "/pages/links/data/#custom-data", 
            "text": "Pass any custom data to be read inside your app     Key  Value  Usage      random  123  Any key-value pair    hello  'world'  Any key-value pair    custom_data  true  Any key-value pair    any_value  { 'random': 'dictionary' }  Any key-value pair    look_at  [1,2,3,4,5,6]  Any key-value pair    nav_here  content/123  Any key-value pair", 
            "title": "Custom data"
        }, 
        {
            "location": "/pages/links/data/#redirections", 
            "text": "Navigate to different locations based on device information   Navigation URLs must be websites, not deep links     Key  Default  Usage      $fallback_url   Change the redirect endpoint for all platforms - so you don\u2019t have to enable it by platform. Note that Branch will forward all robots to this URL, which  overrides any OG tags  entered in the link.  System-wide Default URL (set in Link Settings)    $desktop_url   Change the redirect endpoint on desktops Text-Me-The-App page (set in Link Settings)    $ios_url   Change the redirect endpoint for iOS  App Store page for your app (set in Link Settings)    $ipad_url   Change the redirect endpoint for iPads  $ios_url  value    $android_url   Change the redirect endpoint for Android  Play Store page for your app (set in Link Settings)    $windows_phone_url   Change the redirect endpoint for Windows OS Windows Phone default URL (set in Link Settings)    $blackberry_url   Change the redirect endpoint for Blackberry OS  BlackBerry default URL (set in Link Settings)    $fire_url   Change the redirect endpoint for Amazon Fire OS Fire default URL (set in Link Settings)    $ios_wechat_url   Change the redirect endpoint for WeChat on iOS devices  $ios_url value    $android_wechat_url   Change the redirect endpoint for WeChat on Android devices   $android_url  value    $after_click_url   URL redirect to after the main click redirect has completed    $web_only  false  Force to open the  $fallback_url  instead of the app", 
            "title": "Redirections"
        }, 
        {
            "location": "/pages/links/data/#deep-linking", 
            "text": "Navigate to different locations based on device information     Key  Default  Usage      $deeplink_path  open?link_click_id=1234  Set the deep link path for all platforms - so you don\u2019t have to enable it by platform. When the Branch SDK receives a link with this parameter set, it will automatically load the custom URI path contained within    $android_deeplink_path   Set the deep link path for Android apps When the Branch SDK receives a link with this parameter set, it will automatically load the custom URI path contained within    $ios_deeplink_path   Set the deep link path for iOS apps. When the Branch SDK receives a link with this parameter set, it will automatically load the custom URI path contained within    $match_duration  7200  Lets you control the snapshotting match timeout (the time that a click will wait for an app open to match) also known as attribution window. Specified in seconds    $always_deeplink  true  Set to  false  to make links always fall back to your mobile site. Does not apply to Universal Links or Android App Links.    $ios_redirect_timeout  750  Control the timeout that the client-side JS waits after trying to open up the app before redirecting to the App Store. Specified in milliseconds    $android_redirect_timeout  750  Control the timeout that the client side JS waits after trying to open up the app before redirecting to the Play Store. Specified in milliseconds    $one_time_use  false  Set to  true  to limit deep linking behavior of the generated link to a single use. Can also be set using type    $custom_sms_text   Text for SMS link sent for desktop clicks to this link. Must contain  {{ link }}  Value of Text me the app page in Settings    $marketing_title   The Marketing Title for the deep link in the  Quick Links", 
            "title": "Deep linking"
        }, 
        {
            "location": "/pages/links/data/#content", 
            "text": "set     Key  Default  Usage      $publicly_indexable  1  Cannot modify here. Needs to be set by the Branch Universal Object    $keywords   Keywords for which this content should be discovered by. Just assign an array of strings with the keywords you\u2019d like to use    $canonical_identifier   This is the unique identifier for content that will help Branch dedupe across many instances of the same thing. Suitable options: a website with pathing, or a database with identifiers for entities    $exp_date  0  Cannot modify here. Needs to be set by the Branch Universal Object. Must be epoch timestamp with milliseconds    $content_type   This is a label for the type of content present. Apple recommends that you use uniform type identifier as described here", 
            "title": "Content"
        }, 
        {
            "location": "/pages/links/data/#deepview", 
            "text": "set     Key  Default  Usage      $ios_deepview  default_template  The name of the deepview template to use for iOS    $android_deepview  default_template  The name of the deepview template to use for Android    $desktop_deepview  default_template  The name of the deepview template to use for the Desktop", 
            "title": "DeepView"
        }, 
        {
            "location": "/pages/links/data/#open-graph", 
            "text": "set     Key  Default  Usage      $og_title   Set the title of the link as it will be seen in social media displays    $og_description   Set the description of the link as it will be seen in social media displays    $og_image_url   Set the image of the link as it will be seen in social media displays    $og_image_width   Set the image\u2019s width in pixels for social media displays    $og_image_height   Set the image\u2019s height in pixels for social media displays    $og_video   Set a video as it will be seen in social media displays    $og_url   Set the base URL of the link as it will be seen in social media displays    $og_type   Set the type of custom card format link as it will be seen in social media displays    $og_redirect   (Advanced, not recommended) Set a custom URL that we redirect the social media robots to in order to retrieve all the appropriate tags    $og_app_id   (Rarely used) Sets the app id tag", 
            "title": "Open Graph"
        }, 
        {
            "location": "/pages/links/data/#twitter", 
            "text": "set     Key  Default  Usage      $twitter_card   Set the Twitter card type of the link    $twitter_title   Set the title of the Twitter card    $twitter_description   Set the description of the Twitter card    $twitter_image_url   Set the image URL for the Twitter card    $twitter_site   Set the site for Twitter    $twitter_app_country   Set the app country for the app card    $twitter_player   Set the video player\u2019s URL. Defaults to the value of  $og_video .    $twitter_player_width   Set the player\u2019s width in pixels    $twitter_player_height   Set the player\u2019s height in pixels", 
            "title": "Twitter"
        }, 
        {
            "location": "/pages/links/create/", 
            "text": "Dashboard\n\n\nApp\n\n\nAPI", 
            "title": "Creating links"
        }, 
        {
            "location": "/pages/links/create/#dashboard", 
            "text": "", 
            "title": "Dashboard"
        }, 
        {
            "location": "/pages/links/create/#app", 
            "text": "", 
            "title": "App"
        }, 
        {
            "location": "/pages/links/create/#api", 
            "text": "", 
            "title": "API"
        }, 
        {
            "location": "/pages/web/deep-views/", 
            "text": "Overview\n\n\nA Deepview is a mobile web splash page, hosted by Branch, that gives a preview of the in-app content behind a given Branch link. When a visitor opens one of your Branch links and does not have your app installed, you can show them a Deepview instead of sending them directly to the App/Play Store.\n\n\nDeepviews are discoverable in all search portals (Google, Apple Spotlight, Bing, etc), opening up new mechanisms for people to find your app, and drive much higher conversions to install than sending visitors to the App/Play Store directly. Here's an example flow:\n\n\n\n\n\n\nIf you already have a mobile website\n\n\nThe \nWebsite to App Routing\n feature can be used to recreate the functionality of Deepviews using your own website. If you already host your own content previews, this is a good alternative!\n\n\n\n\n\n\nWarning\n\n\nFor Deepviews to function as intended, you should \nintegrate the Branch SDK\n into your app and \nconfigure deep link routing\n.\n\n\n\n\nSetup\n\n\nEnable Deepviews\n\n\n\n\nHead to the \nDeepviews configuration page\n on the Branch dashboard.\n\n\nDeepviews are configured separately for visitors on each platform (iOS, Android, and desktop). Select the platforms you want and click \nEnable\n.\n\n\n\n\n\n\n\n\nWarning\n\n\nIf you enable desktop Deepviews, they will override any \nText-Me-The-App\n page you have configured.\n\n\n\n\n\n\nChanging the app icon\n\n\nIf we pulled the wrong app icon, you can upload a new one in the \nSocial Media Display Customization\n section of the \ndashboard Settings\n.\n\n\n\n\nView Analytics\n\n\nBranch lets you track the flow of users through Deepviews. You can find this information on the \nsummary page\n of the Branch dashboard.\n\n\n\n\nThere are various metrics to understand when deep linking from your mobile website.\n\n\n\n\nViews:\n a user viewed the mobile site.\n\n\nClicks:\n a user clicked on the Deepview CTA\n\n\nInstalls:\n a user installed the app for the first time\n\n\nUpgrades:\n a user re-opened or upgraded the app from a previous version\n\n\n\n\nOnly users who do not have the app will go through this flow. You can view the total counts and conversion rate from each step on this chart.\n\n\nAdvanced\n\n\nCustomizing Deepviews\n\n\nThe default Deepview template simply displays the content from three of the link's \ncontrol parameters\n. You can specify the content of these parameters when creating your link to control what will display in that link\u2019s Deepview. If nothing is set for a particular link, we will gracefully fall back to the OG values set for your entire app in \nSettings \n Link Settings \n Social Media Display Customization.\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\n\n\n\n\n\n\n\n\n$og_title\n\n\nThe title you'd like to appear on the deepview\n\n\n\n\n\n\n$og_description\n\n\nThe description you'd like to appear on the deepview\n\n\n\n\n\n\n$og_image_url\n\n\nThe URL for the image you'd like to appear on the deepview\n\n\n\n\n\n\n\n\n\n\nHosting your own OG tags\n\n\nIf you want to use OG tags you host elsewhere, leave these parameters empty and specify a \n$desktop_url\n control parameter when you create the link. Branch will perform a one-time scrape to populate the Deepview using the OG tags from the URL you specify.\n\n\n\n\nIf you're creating a link by appending query parameters, just append the parameters to the URL. Please make sure to URL encode everything, lest the link will break.\n\n\nhttps://[branchsubdomain]?%24og_title=MyApp%20is%20disrupting%20apps\n$og_image_url=http%3A%2F%2Fmyapp.com%2Fimage.png\n\n\n\n\n\nWhen you create links via a mobile SDK, you simply need to set the OG tag parameters.\n\n\n\n\n\nBranchUniversalObject\n \n*\nbranchUniversalObject\n \n=\n \n[[\nBranchUniversalObject\n \nalloc\n]\n \ninitWithCanonicalIdentifier\n:\n@\nitem/12345\n];\n\n\n// Facebook OG tags -- this will overwrite any defaults you set up on the Branch Dashboard\n\n\nbranchUniversalObject\n.\ntitle\n \n=\n \n@\nMy Content Title\n;\n\n\nbranchUniversalObject\n.\ncontentDescription\n \n=\n \n@\nMy Content Description\n;\n\n\nbranchUniversalObject\n.\nimageUrl\n \n=\n \n@\nhttps://example.com/mycontent-12345.png\n;\n\n\n\n// Add any additional custom OG tags here\n\n\n[\nbranchUniversalObject\n \naddMetadataKey\n:\n@\n$og_video\n \nvalue\n:\n@\nhttp://mysite/video.mpg\n];\n\n\n\n\n\nlet\n \nbranchUniversalObject\n:\n \nBranchUniversalObject\n \n=\n \nBranchUniversalObject\n(\ncanonicalIdentifier\n:\n \nitem/12345\n)\n\n\n// Facebook OG tags -- this will overwrite any defaults you set up on the Branch Dashboard\n\n\nbranchUniversalObject\n.\ntitle\n \n=\n \nMy Content Title\n\n\nbranchUniversalObject\n.\ncontentDescription\n \n=\n \nMy Content Description\n\n\nbranchUniversalObject\n.\nimageUrl\n \n=\n \nhttps://example.com/mycontent-12345.png\n\n\n\n// Add any additional custom OG tags here\n\n\nbranchUniversalObject\n.\naddMetadataKey\n(\n$og_video\n,\n \nvalue\n:\n \nhttp://mysite/video.mpg\n)\n\n\n\n\n\n\n\n\n\n \nBranchUniversalObject\n \nbranchUniversalObject\n \n=\n \nnew\n \nBranchUniversalObject\n()\n\n                \n.\nsetCanonicalIdentifier\n(\nitem/12345\n)\n\n\n// Facebook OG tags -- This will overwrite any defaults you have set on the Branch Dashboard\n\n                \n.\nsetTitle\n(\nMy Content Title\n)\n\n                \n.\nsetContentDescription\n(\nMy Content Description\n)\n\n                \n.\nsetContentImageUrl\n(\nhttps://example.com/mycontent-12345.png\n)\n\n\n\n// Add any additional custom OG tags here\n\n                \n.\naddContentMetadata\n(\n$og_video\n,\n \nhttp://mysite/video.mpg\n);\n\n\n\n\n\n\nEdit the Title, Description and Image URL in the \nSocial Media\n section.\n\n\n\n\nNote:\n the \nDeep Link\n section accepts most link control parameters, but \n$og_title\n, \n$og_description\n and \n$og_image_url\n \ncannot\n be specified there.\n\n\nEnable per-link Deepviews\n\n\nIf you don't want to enable Deepviews globally, you can do it for each platform on a per link basis by inserting custom link control parameters \nlink control parameters\n.\n\n\nEnable Desktop Deepviews by appending query parameters:\n\n\nhttps://[branchsubdomain]?%24desktop_deepview=default_template\n%24ios_deepview=default_template\n\n\n\n\n\nEnable iOS and Android Deepviews through the SDK:\n\n\n\n\n\nBranchLinkProperties\n \n*\nlinkProperties\n \n=\n \n[[\nBranchLinkProperties\n \nalloc\n]\n \ninit\n];\n\n\nlinkProperties\n.\nfeature\n \n=\n \n@\nsharing\n;\n\n\nlinkProperties\n.\nchannel\n \n=\n \n@\nfacebook\n;\n\n\n[\nlinkProperties\n \naddControlParam\n:\n@\n$ios_deepview\n \nwithValue\n:\n@\ndefault_template\n];\n\n\n[\nlinkProperties\n \naddControlParam\n:\n@\n$android_deepview\n \nwithValue\n:\n@\ndefault_template\n];\n\n\n\n\nlet\n \nlinkProperties\n:\n \nBranchLinkProperties\n \n=\n \nBranchLinkProperties\n()\n\n\nlinkProperties\n.\nfeature\n \n=\n \nsharing\n\n\nlinkProperties\n.\nchannel\n \n=\n \nfacebook\n\n\nlinkProperties\n.\naddControlParam\n(\n$ios_deepview\n,\n \nwithValue\n:\n \ndefault_template\n)\n\n\nlinkProperties\n.\naddControlParam\n(\n$android_deepview\n,\n \nwithValue\n:\n \ndefault_template\n)\n\n\n\n\n\n\n\n\n\nLinkProperties linkProperties = new LinkProperties()\n               .setChannel(\nfacebook\n)\n               .setFeature(\nsharing\n)\n               .addControlParameter(\n$ios_deepview\n, \ndefault_template\n)\n               .addControlParameter(\n$android_deepview\n, \ndefault_template\n);\n\n\n\n\n\nFinally, enable Deepviews for an individual link on the \nMarketing dashboard\n by selecting Deepviews as a redirect option under the second page.\n\n\n\n\nDisable per-link Deepviews\n\n\nIf you've enabled Deepviews globally, it's likely that you'll want to disable them now and again for specific use cases. To do so, just follow the instructions for \nenabling Deepviews for one link\n and set one or more of the key values to \nfalse\n.\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\n\n\n\n\n\n\n\n\n$ios_deepview\n\n\nfalse\n\n\n\n\n\n\n$android_deepview\n\n\nfalse\n\n\n\n\n\n\n$desktop_deepview\n\n\nfalse\n\n\n\n\n\n\n\n\nWhen creating Quick Links on the Branch dashboard\n\n\nYou can disable Deepviews for an individual link on the \nMarketing dashboard\n by selecting Deepviews as a redirect option in Configure Options \n Redirects and setting it to false.\n\n\n\n\nCreate New Deepview Templates\n\n\nYou can create new Deepview templates using the \nDeepviews configuration page\n on the Branch dashboard, either by duplicating the default Branch Public Template, or by creating a new one from scratch. New Deepview templates are shared between all platforms (iOS, Android, and desktop), and cannot be deleted after creation.\n\n\n\n\nThe Deepview editing screen contains two tabs: \nBasic\n and \nEditor\n.\n\n\nBasic\n\n\nThe Basic tab displays your new template, and allows you to modify the default fallback OG tags used if none are specified for a link.\n\n\n\n\nDeepview Settings\n\n\n\n\n\n\n\n\nSetting\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\nTitle\n\n\nInternal name for your reference\n\n\n\n\n\n\nKey\n\n\nThe value that you will reference when creating a link. E.g., \n$ios_deepview: [key]\n\n\n\n\n\n\n\n\nApp Settings\n\n\n\n\nThese fields are duplicates of the \nSocial Media\n section of your app's \nmain link settings page\n. Any updates will be applied in both locations.\n\n\n\n\n\n\n\n\n\n\nSetting\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\nOG Title\n\n\nDefault value used if \n$og_title\n is not specified for a link.\n\n\n\n\n\n\nOG Description\n\n\nDefault value used if \n$og_description\n is not specified for a link.\n\n\n\n\n\n\nOG Image Url\n\n\nDefault value used if \n$og_image_url\n is not specified for a link.\n\n\n\n\n\n\n\n\nEdit Deepview Templates\n\n\nYou can use the Deepview editor to edit created templates. You cannot edit pre-created templates. The Editor tab allows you to edit the raw HTML and CSS for your template. The rendered template will update as you modify the markup.\n\n\n\n\n\n\nJavascript not allowed\n\n\nBefore rendering the template, we sanitize the markup of Javascript for security reasons. This includes script tags and event attributes on tags.\n\n\n\n\nInject Other Data Into Deepviews\n\n\nBy customizing your Deepview template, you have the ability to pass through other parameters from your link's \ndata dictionary\n.\n\n\nHere's a full list of liquid available tags:\n\n\napp\n\n\nThis is the App object, which contains app data not specific to any link. This will allow you to surface information like your app name or other properties. You can surface this object in your Deepview like so:\n\n\n{{\napp\n}}\n\n\n\n\n\n\n\n\n\n\n\nKey\n\n\nUsage\n\n\n\n\n\n\n\n\n\n\napp.branch_key\n\n\nYour Branch key from \nSettings\n.\n\n\n\n\n\n\napp.name\n\n\nThe name of your app from \nSettings\n.\n\n\n\n\n\n\napp.og_title\n\n\nThe \nLink Title\n set in the \nSocial Media Display Customization\n section of your app's \nLink Settings\n.\n\n\n\n\n\n\napp.og_description\n\n\nThe \nDescription\n set in the \nSocial Media Display Customization\n section of your app's \nLink Settings\n.\n\n\n\n\n\n\napp.og_image_url\n\n\nThe \nThumbnail Image\n set in the \nSocial Media Display Customization\n section of your app's \nLink Settings\n.\n\n\n\n\n\n\n\n\n\n\nIf you want to show your app's name inside a Deepview, you would expose it like so: \nh1\nGet {% raw %}{{app.name}}{% endraw %}\n/h1\n\n\n\n\nlink data\n\n\nLink Object, which contains all of your link's parameters, including your deep link values from the data dictionary. See the \nConfiguring Links\n page for more information. You can surface this object in your Deepview like so:\n\n\n{{\nlink_data\n}}\n\n\n\n\n\n\n\nIf you want to expose a key value pair of \n'welcome_message' : 'Welcome to my App'\n, you would do the following: \nh1\n{% raw %}{{link_data.welcome_message}}{% endraw %}\n/h1\n, and this would render \nWelcome to my App\n.\n\n\n\n\naction\n\n\nThe URL of the Branch link itself. If you create a new call to action in your Deepview, use this. You can surface this object in your Deepview like so:\n\n\n{{\naction\n}}\n\n\n\n\n\n\n\nCreate a new call to action link: \na href=\"{% raw %}{{action}}{% endraw %}\"\nClick\n/a\n.\n\n\n\n\nGlossary\n\n\nActive Deepviews\n\n\nActive deepviews should only show when the app is \nnot\n installed (or when direct deep linking doesn't work like in the Facebook webview), and pause on the deepview page. These let the user preview the content, ultimately deciding if they want to install the app. The user must click the call-to-action of \nGet The App\n in order to be sent to the appropriate App or Play Store page.\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nDefault Template\n\n\n\n\n\n\n\n\n\n\n$ios_deepview\n\n\nThe name of the template to use for iOS.\n\n\ndefault_template\n\n\n\n\n\n\n$android_deepview\n\n\nThe name of the template to use for Android.\n\n\ndefault_template\n\n\n\n\n\n\n$desktop_deepview\n\n\nThe name of the template to use for the desktop.\n\n\ndefault_template\n\n\n\n\n\n\n\n\nPassive Deepviews\n\n\nPassive deepviews should also only appear when the app is \nnot\n installed, but instead of pausing on the deepview page, they will attempt to redirect to the App/Play Store immediately without the user taking action. These should be used when you don't want a blank white screen to be left in a browser after the user clicks a link to go install your app. Note that these are automatically enabled in Safari iOS 10.3 and Facebook iOS webviews if you're attempting to redirect to your Store page.\n\n\nTo disable passive deepviews, simply set the value to \nfalse\n in the link data.\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\n$ios_passive_deepview\n\n\nThe name of the template to use for iOS.\n\n\ndefault_template\n\n\n\n\n\n\n$android_passive_deepview\n\n\nThe name of the template to use for Android.\n\n\ndefault_template\n\n\n\n\n\n\n\n\nIf you're creating a link by appending query parameters, you simply need to append the parameters to the URL. Please make sure to URL encode everything, lest the link will break.", 
            "title": "Deepviews"
        }, 
        {
            "location": "/pages/web/deep-views/#overview", 
            "text": "A Deepview is a mobile web splash page, hosted by Branch, that gives a preview of the in-app content behind a given Branch link. When a visitor opens one of your Branch links and does not have your app installed, you can show them a Deepview instead of sending them directly to the App/Play Store.  Deepviews are discoverable in all search portals (Google, Apple Spotlight, Bing, etc), opening up new mechanisms for people to find your app, and drive much higher conversions to install than sending visitors to the App/Play Store directly. Here's an example flow:    If you already have a mobile website  The  Website to App Routing  feature can be used to recreate the functionality of Deepviews using your own website. If you already host your own content previews, this is a good alternative!    Warning  For Deepviews to function as intended, you should  integrate the Branch SDK  into your app and  configure deep link routing .", 
            "title": "Overview"
        }, 
        {
            "location": "/pages/web/deep-views/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/pages/web/deep-views/#enable-deepviews", 
            "text": "Head to the  Deepviews configuration page  on the Branch dashboard.  Deepviews are configured separately for visitors on each platform (iOS, Android, and desktop). Select the platforms you want and click  Enable .     Warning  If you enable desktop Deepviews, they will override any  Text-Me-The-App  page you have configured.    Changing the app icon  If we pulled the wrong app icon, you can upload a new one in the  Social Media Display Customization  section of the  dashboard Settings .", 
            "title": "Enable Deepviews"
        }, 
        {
            "location": "/pages/web/deep-views/#view-analytics", 
            "text": "Branch lets you track the flow of users through Deepviews. You can find this information on the  summary page  of the Branch dashboard.   There are various metrics to understand when deep linking from your mobile website.   Views:  a user viewed the mobile site.  Clicks:  a user clicked on the Deepview CTA  Installs:  a user installed the app for the first time  Upgrades:  a user re-opened or upgraded the app from a previous version   Only users who do not have the app will go through this flow. You can view the total counts and conversion rate from each step on this chart.", 
            "title": "View Analytics"
        }, 
        {
            "location": "/pages/web/deep-views/#advanced", 
            "text": "", 
            "title": "Advanced"
        }, 
        {
            "location": "/pages/web/deep-views/#customizing-deepviews", 
            "text": "The default Deepview template simply displays the content from three of the link's  control parameters . You can specify the content of these parameters when creating your link to control what will display in that link\u2019s Deepview. If nothing is set for a particular link, we will gracefully fall back to the OG values set for your entire app in  Settings   Link Settings   Social Media Display Customization.     Key  Value      $og_title  The title you'd like to appear on the deepview    $og_description  The description you'd like to appear on the deepview    $og_image_url  The URL for the image you'd like to appear on the deepview      Hosting your own OG tags  If you want to use OG tags you host elsewhere, leave these parameters empty and specify a  $desktop_url  control parameter when you create the link. Branch will perform a one-time scrape to populate the Deepview using the OG tags from the URL you specify.   If you're creating a link by appending query parameters, just append the parameters to the URL. Please make sure to URL encode everything, lest the link will break.  https://[branchsubdomain]?%24og_title=MyApp%20is%20disrupting%20apps $og_image_url=http%3A%2F%2Fmyapp.com%2Fimage.png   When you create links via a mobile SDK, you simply need to set the OG tag parameters.   BranchUniversalObject   * branchUniversalObject   =   [[ BranchUniversalObject   alloc ]   initWithCanonicalIdentifier : @ item/12345 ];  // Facebook OG tags -- this will overwrite any defaults you set up on the Branch Dashboard  branchUniversalObject . title   =   @ My Content Title ;  branchUniversalObject . contentDescription   =   @ My Content Description ;  branchUniversalObject . imageUrl   =   @ https://example.com/mycontent-12345.png ;  // Add any additional custom OG tags here  [ branchUniversalObject   addMetadataKey : @ $og_video   value : @ http://mysite/video.mpg ];   let   branchUniversalObject :   BranchUniversalObject   =   BranchUniversalObject ( canonicalIdentifier :   item/12345 )  // Facebook OG tags -- this will overwrite any defaults you set up on the Branch Dashboard  branchUniversalObject . title   =   My Content Title  branchUniversalObject . contentDescription   =   My Content Description  branchUniversalObject . imageUrl   =   https://example.com/mycontent-12345.png  // Add any additional custom OG tags here  branchUniversalObject . addMetadataKey ( $og_video ,   value :   http://mysite/video.mpg )       BranchUniversalObject   branchUniversalObject   =   new   BranchUniversalObject () \n                 . setCanonicalIdentifier ( item/12345 )  // Facebook OG tags -- This will overwrite any defaults you have set on the Branch Dashboard \n                 . setTitle ( My Content Title ) \n                 . setContentDescription ( My Content Description ) \n                 . setContentImageUrl ( https://example.com/mycontent-12345.png )  // Add any additional custom OG tags here \n                 . addContentMetadata ( $og_video ,   http://mysite/video.mpg );    Edit the Title, Description and Image URL in the  Social Media  section.   Note:  the  Deep Link  section accepts most link control parameters, but  $og_title ,  $og_description  and  $og_image_url   cannot  be specified there.", 
            "title": "Customizing Deepviews"
        }, 
        {
            "location": "/pages/web/deep-views/#enable-per-link-deepviews", 
            "text": "If you don't want to enable Deepviews globally, you can do it for each platform on a per link basis by inserting custom link control parameters  link control parameters .  Enable Desktop Deepviews by appending query parameters:  https://[branchsubdomain]?%24desktop_deepview=default_template %24ios_deepview=default_template   Enable iOS and Android Deepviews through the SDK:   BranchLinkProperties   * linkProperties   =   [[ BranchLinkProperties   alloc ]   init ];  linkProperties . feature   =   @ sharing ;  linkProperties . channel   =   @ facebook ;  [ linkProperties   addControlParam : @ $ios_deepview   withValue : @ default_template ];  [ linkProperties   addControlParam : @ $android_deepview   withValue : @ default_template ];   let   linkProperties :   BranchLinkProperties   =   BranchLinkProperties ()  linkProperties . feature   =   sharing  linkProperties . channel   =   facebook  linkProperties . addControlParam ( $ios_deepview ,   withValue :   default_template )  linkProperties . addControlParam ( $android_deepview ,   withValue :   default_template )     LinkProperties linkProperties = new LinkProperties()\n               .setChannel( facebook )\n               .setFeature( sharing )\n               .addControlParameter( $ios_deepview ,  default_template )\n               .addControlParameter( $android_deepview ,  default_template );   Finally, enable Deepviews for an individual link on the  Marketing dashboard  by selecting Deepviews as a redirect option under the second page.", 
            "title": "Enable per-link Deepviews"
        }, 
        {
            "location": "/pages/web/deep-views/#disable-per-link-deepviews", 
            "text": "If you've enabled Deepviews globally, it's likely that you'll want to disable them now and again for specific use cases. To do so, just follow the instructions for  enabling Deepviews for one link  and set one or more of the key values to  false .     Key  Value      $ios_deepview  false    $android_deepview  false    $desktop_deepview  false     When creating Quick Links on the Branch dashboard  You can disable Deepviews for an individual link on the  Marketing dashboard  by selecting Deepviews as a redirect option in Configure Options   Redirects and setting it to false.", 
            "title": "Disable per-link Deepviews"
        }, 
        {
            "location": "/pages/web/deep-views/#create-new-deepview-templates", 
            "text": "You can create new Deepview templates using the  Deepviews configuration page  on the Branch dashboard, either by duplicating the default Branch Public Template, or by creating a new one from scratch. New Deepview templates are shared between all platforms (iOS, Android, and desktop), and cannot be deleted after creation.   The Deepview editing screen contains two tabs:  Basic  and  Editor .  Basic  The Basic tab displays your new template, and allows you to modify the default fallback OG tags used if none are specified for a link.   Deepview Settings     Setting  Usage      Title  Internal name for your reference    Key  The value that you will reference when creating a link. E.g.,  $ios_deepview: [key]     App Settings   These fields are duplicates of the  Social Media  section of your app's  main link settings page . Any updates will be applied in both locations.      Setting  Usage      OG Title  Default value used if  $og_title  is not specified for a link.    OG Description  Default value used if  $og_description  is not specified for a link.    OG Image Url  Default value used if  $og_image_url  is not specified for a link.", 
            "title": "Create New Deepview Templates"
        }, 
        {
            "location": "/pages/web/deep-views/#edit-deepview-templates", 
            "text": "You can use the Deepview editor to edit created templates. You cannot edit pre-created templates. The Editor tab allows you to edit the raw HTML and CSS for your template. The rendered template will update as you modify the markup.    Javascript not allowed  Before rendering the template, we sanitize the markup of Javascript for security reasons. This includes script tags and event attributes on tags.", 
            "title": "Edit Deepview Templates"
        }, 
        {
            "location": "/pages/web/deep-views/#inject-other-data-into-deepviews", 
            "text": "By customizing your Deepview template, you have the ability to pass through other parameters from your link's  data dictionary .  Here's a full list of liquid available tags:  app  This is the App object, which contains app data not specific to any link. This will allow you to surface information like your app name or other properties. You can surface this object in your Deepview like so:  {{ app }}      Key  Usage      app.branch_key  Your Branch key from  Settings .    app.name  The name of your app from  Settings .    app.og_title  The  Link Title  set in the  Social Media Display Customization  section of your app's  Link Settings .    app.og_description  The  Description  set in the  Social Media Display Customization  section of your app's  Link Settings .    app.og_image_url  The  Thumbnail Image  set in the  Social Media Display Customization  section of your app's  Link Settings .      If you want to show your app's name inside a Deepview, you would expose it like so:  h1 Get {% raw %}{{app.name}}{% endraw %} /h1   link data  Link Object, which contains all of your link's parameters, including your deep link values from the data dictionary. See the  Configuring Links  page for more information. You can surface this object in your Deepview like so:  {{ link_data }}    If you want to expose a key value pair of  'welcome_message' : 'Welcome to my App' , you would do the following:  h1 {% raw %}{{link_data.welcome_message}}{% endraw %} /h1 , and this would render  Welcome to my App .   action  The URL of the Branch link itself. If you create a new call to action in your Deepview, use this. You can surface this object in your Deepview like so:  {{ action }}    Create a new call to action link:  a href=\"{% raw %}{{action}}{% endraw %}\" Click /a .", 
            "title": "Inject Other Data Into Deepviews"
        }, 
        {
            "location": "/pages/web/deep-views/#glossary", 
            "text": "", 
            "title": "Glossary"
        }, 
        {
            "location": "/pages/web/deep-views/#active-deepviews", 
            "text": "Active deepviews should only show when the app is  not  installed (or when direct deep linking doesn't work like in the Facebook webview), and pause on the deepview page. These let the user preview the content, ultimately deciding if they want to install the app. The user must click the call-to-action of  Get The App  in order to be sent to the appropriate App or Play Store page.     Key  Value  Default Template      $ios_deepview  The name of the template to use for iOS.  default_template    $android_deepview  The name of the template to use for Android.  default_template    $desktop_deepview  The name of the template to use for the desktop.  default_template", 
            "title": "Active Deepviews"
        }, 
        {
            "location": "/pages/web/deep-views/#passive-deepviews", 
            "text": "Passive deepviews should also only appear when the app is  not  installed, but instead of pausing on the deepview page, they will attempt to redirect to the App/Play Store immediately without the user taking action. These should be used when you don't want a blank white screen to be left in a browser after the user clicks a link to go install your app. Note that these are automatically enabled in Safari iOS 10.3 and Facebook iOS webviews if you're attempting to redirect to your Store page.  To disable passive deepviews, simply set the value to  false  in the link data.     Key  Value  Default      $ios_passive_deepview  The name of the template to use for iOS.  default_template    $android_passive_deepview  The name of the template to use for Android.  default_template     If you're creating a link by appending query parameters, you simply need to append the parameters to the URL. Please make sure to URL encode everything, lest the link will break.", 
            "title": "Passive Deepviews"
        }, 
        {
            "location": "/pages/web/journeys/", 
            "text": "", 
            "title": "Journeys App Banners"
        }, 
        {
            "location": "/pages/web/text-me-the-app/", 
            "text": "Overview\n\n\nWhen users click your links on desktop, they have the option to text themselves a link to download your app. We provide this by default on every Branch link, but you can also create your own fully-branded Text Me The App page.\n\n\n\n\nLeft: Branch default. Right: a customized version.\n\n\nThis document will cover how to create a custom Text Me The App page, as well as a general FAQ for this product.\n\n\nSetup\n\n\nIf you don't want to use Branch's default Text Me The App Page or show a desktop deepview, follow these instructions. This will let you customize a Text Me The App page using Branch.\n\n\nSet Destination URL\n\n\n\n\nVisit the \nDesktop SMS\n page on the Branch dashboard.\n\n\nSelect \nCustom Landing Page with SMS\n, after you toggle to \nOn\n.\n\n\nEnter the destination URL.\n\n\n\n\n\n\n\n\nMake sure you can access this page\n\n\nBecause you will be making changes to this URL, be sure you have access to the page and can make changes to its HTML.\n\n\n\n\nInsert SendSMS() snippet into your page\n\n\nWhen you have set your destination URL from the previous step, go to that page and edit the HTML. Paste the following code snippet into it; this is a fully-functional web page that you can use as a template for your Text Me The App page.\n\n\n!DOCTYPE HTML\n\n\nhtml\n \nlang\n=\nen-US\n\n\nhead\n\n\nmeta\n \ncharset\n=\nUTF-8\n\n    \nscript\n \ntype\n=\ntext/javascript\n\n        \n(\nfunction\n(\nb\n,\nr\n,\na\n,\nn\n,\nc\n,\nh\n,\n_\n,\ns\n,\nd\n,\nk\n){\nif\n(\n!\nb\n[\nn\n]\n||!\nb\n[\nn\n].\n_q\n){\nfor\n(;\ns\n_\n.\nlength\n;)\nc\n(\nh\n,\n_\n[\ns\n++\n]);\nd\n=\nr\n.\ncreateElement\n(\na\n);\nd\n.\nasync\n=\n1\n;\nd\n.\nsrc\n=\nhttps://cdn.branch.io/branch-latest.min.js\n;\nk\n=\nr\n.\ngetElementsByTagName\n(\na\n)[\n0\n];\nk\n.\nparentNode\n.\ninsertBefore\n(\nd\n,\nk\n);\nb\n[\nn\n]\n=\nh\n}})(\nwindow\n,\ndocument\n,\nscript\n,\nbranch\n,\nfunction\n(\nb\n,\nr\n){\nb\n[\nr\n]\n=\nfunction\n(){\nb\n.\n_q\n.\npush\n([\nr\n,\narguments\n])}},{\n_q\n:\n[],\n_v\n:\n1\n},\naddListener applyCode banner closeBanner creditHistory credits data deepview deepviewCta first getCode init link logout redeem referrals removeListener sendSMS setBranchViewData setIdentity track validateCode\n.\nsplit\n(\n \n),\n \n0\n);\n\n\n        \nbranch\n.\ninit\n(\nYOUR-BRANCH-KEY\n);\n\n            \nfunction\n \nsendSMS\n(\nform\n)\n \n{\n\n                \nvar\n \nphone\n \n=\n \nform\n.\nphone\n.\nvalue\n;\n\n                \nvar\n \nlinkData\n \n=\n \n{\n\n                    \ntags\n:\n \n[],\n\n                    \nchannel\n:\n \nWebsite\n,\n\n                    \nfeature\n:\n \nTextMeTheApp\n,\n\n                    \ndata\n:\n \n{\n\n                        \nfoo\n:\n \nbar\n\n                    \n}\n\n                \n};\n\n                \nvar\n \noptions\n \n=\n \n{};\n\n                \nvar\n \ncallback\n \n=\n \nfunction\n(\nerr\n,\n \nresult\n)\n \n{\n\n                    \nif\n \n(\nerr\n)\n \n{\n\n                        \nalert\n(\nSorry, something went wrong.\n);\n\n                    \n}\n\n                    \nelse\n \n{\n\n                        \nalert\n(\nSMS sent!\n);\n\n                    \n}\n\n                \n};\n\n                \nbranch\n.\nsendSMS\n(\nphone\n,\n \nlinkData\n,\n \noptions\n,\n \ncallback\n);\n\n                \nform\n.\nphone\n.\nvalue\n \n=\n \n;\n\n            \n}\n\n    \n/\nscript\n\n\n/\nhead\n\n\nbody\n\n        Send SMS\n        \nform\n \nonsubmit\n=\nsendSMS(this); return false;\n\n            \ninput\n \nid\n=\nphone\n \nname\n=\nphone\n \ntype\n=\ntel\n \nplaceholder\n=\n(650) 123-4567\n \n/\n\n            \nbr\n/\n\n            \ninput\n \ntype\n=\nsubmit\n/\n\n        \n/\nform\n\n    \n/\nbody\n\n\n/\nhtml\n\n\n\n\n\nAnd that's it. From here, you can customize the HTML and CSS, and Branch will take care of the rest. If you want to further customize the page or SMS message itself, read further.\n\n\nAdvanced\n\n\nUse your own SMS service\n\n\nBranch uses Twilio to provide your users the ability to text themselves the app for free, but you can roll your own SMS service by using the following basic logic:\n\n\n\n\nDoes \n~referring_link\n exist? (a.k.a. did the user end up on this Text Me The App page because of a Branch link?) If so, use this link when sending the SMS.\n\n\nIf not (\n~referring_link\n is null), generate a new Branch link by making a call to the Web SDK's \nlink()\n method. Use this link when sending the SMS.\n\n\n\n\nThe \n~referring_link\n parameter is returned in the Web SDK's init() callback, buried in the referring link data. See the code below:\n\n\nbranch.init('YOUR-BRANCH-KEY', function(err, data) {\n    if (data.data['~referring_link']) {\n        console.log(\"data.data['~referring_link']:\", data.data['~referring_link']);\n    }\n});\n\n\nUse a custom form with SendSMS()\n\n\nIf you have an existing form for users to input their phone number, you can put our Text Me The App behind it. Add the following code somewhere inside the \nhead\n/head\n tags on your website.\n\n\nscript\n \ntype\n=\ntext/javascript\n\n\nfunction\n \nsendSMS\n(\nform\n)\n \n{\n\n  \nbranch\n.\nsendSMS\n(\n\n    \nphone\n: \nform.phone.text\n,\n\n    \n{\n\n      \nchannel\n:\n \nWebsite\n,\n\n      \nfeature\n:\n \nText-Me-The-App\n,\n\n      \ndata\n:\n \n{\n\n        \nfoo\n:\n \nbar\n\n      \n}\n\n    \n},\n\n    \n{\n \nmake_new_link\n: \nfalse\n \n},\n \n// Default: false. If set to true, sendSMS will generate a new link even if one already exists.\n\n    \nfunction\n(\nerr\n)\n \n{\n \nconsole\n.\nlog\n(\nerr\n);\n \n}\n\n  \n}\n\n\n});\n\n\n/script\n\n\n\n\n\nCall sendSMS when someone enters something into your form.\n\n\nCustomize SMS message content\n\n\nThe default text for SMS messages is \"Click here to download [App Name] {{ link }}\".\n\n\nIf you want to customize this, Branch allows you to set a default for all messages, or customize the message for each link.\n\n\nCustomize all messages\n\n\nYou can create your own custom default message that will be sent if the specific link someone clicks doesn't have a customized message itself. Navigate back to the Desktop SMS page on the \nBranch dashboard\n. You should see the following section below.\n\n\n\n\nEditing this field will modify \nall\n SMS messages sent.\n\n\nCustom link-specific messages\n\n\nIf you don't want to edit the global SMS text, you can define a special SMS message for each individual link. Whether you want to switch the language of a message for a different region or include device specific date, you can specify the message in the \nDeep Link Data\n section at the bottom of the link editing screen.\n\n\n\n\nUse the \n$custom_sms_text\n parameter and then enter your custom message in the value section. Make sure to include the \n{{ link }}\n tag in your custom message! Read the following scenario below to see this in action.\n\n\nThe developer of FlowerPower wants to customize the SMS messages based on the country of the recipient. For each Branch link, they would specify in the deep link data a different custom message.\n\n\nFor ads in France:\n\nCliquez pour t\u00e9l\u00e9charger FlowerPower ici {{ link }}\n\n\nFor ads in Spain:\n\nHaz click aqu\u00ed para descargar FlowerPower {{ link }}\n\n\nFor ads in Germany:\n\nKlicken Sie auf das FlowerPower hier herunterladen {{ link }}\n\n\nUse liquid tags to further customize messages\n\n\nYou can access almost any value of your link's parameters by using liquid tags. The customization options are only limited to your imagination.\n\n\n\n\nThe tag \n{{ link }}\n is replaced with your Branch link\n\n\n{{ link.channel }}\n and \n{{ link.campaign }}\n output the channel and campaign, if these were set when creating the link.\n\n\n{{ link.data.key }}\n will output a parameter of your link's data dictionary, where \nkey\n is the name of the parameter\n\n\n\n\nHere's an example to illustrate this scenario.\n\n\nDmitri is creating Branch links to deep link to each of the different flowers in his app FlowerPower. He creates each link with a key/value pair of the key \nflower\n and the flower name, e.g. \nFlower : Rose\n, \nFlower : Tulip\n. He wants to customize his SMS messages based on name of the flower, so he sets his custom link messages as:\n\n\n{{ link.data.flower }}\ns on the mind? Click here to buy some for your home! \n{{ link }}\n\n\n\n\nGlossary\n\n\nSendSMS() parameters\n\n\nThe \nsendSMS()\n method requires a phone number and \nlink parameters\n. You may optionally specify configuration options and a callback.\n\n\nbranch\n.\nsendSMS\n(\n\n    \nphone\n,\n\n    \nlinkData\n,\n\n    \noptions\n,\n\n    \ncallback\n \n(\nerr\n,\n \ndata\n)\n\n\n);\n\n\n\n\n\nYour call to this method, once filled in with the user's phone number, could look like the following:\n\n\nbranch\n.\nsendSMS\n(\n\n    \nphone\n:\n \n9999999999\n,\n\n    \n{\n\n        \ntags\n:\n \n[\ntag1\n,\n \ntag2\n],\n\n        \nchannel\n:\n \nfacebook\n,\n\n        \nfeature\n:\n \ndashboard\n,\n\n        \nstage\n:\n \nnew user\n,\n\n        \ndata\n:\n \n{\n\n            \nfoo\n:\n \nbar\n\n        \n}\n\n    \n},\n\n    \n{\n \nmake_new_link\n:\n \nfalse\n \n},\n \n// Default: false. If set to true, sendSMS will generate a new link even if one already exists.\n\n    \nfunction\n(\nerr\n)\n \n{\n \nconsole\n.\nlog\n(\nerr\n);\n \n}\n\n\n});\n\n\n\n\n\nSetting default replacement values for liquid tags\n\n\nIf a specific tag isn't always going to be filled, you can use a \n|\n character to specify a default to fallback on if the tag is missing from your link dictionary.\n\n\nE.g. \n{{ link.data.author | default:\"Alex\" }}\n\n\nIf the \nlink.data.author\n information isn't found, the tag will just be replaced with \nAlex\n instead of being replaced by an empty string.\n\n\nFAQ\n\n\nWhat are the SMS rate limits?\n\n\nWe enforce the following rate limits when sending SMS through Branch:\n\n\n1. 5 texts to the same number within an hour.\n1. 100 texts from the same IP within an hour.\n\n\n\n\n\nCan I use this service for international phone numbers?\n\n\nYes. Branch uses Twilio to send SMS messages, which means SMS will be delivered all around the world.\n\n\nI've sent myself multiple texts just now and only received the first few, what's going on?\n\n\nThis occurs when a carrier filters you SMS out due to spam. We try our hardest to rate limit a specific user, however, if bypassed, carriers may block your SMS. The reason is that carriers will agressively block content if it's similar and repeatedly sent to the same number. The solution is to wait 24-48 hours.\n\n\nHow come my (non US) phone number isn't working?\n\n\nWith full numbers, you are required to use \"+\" and the country code. If you know your users are only in a certain country, you can automatically prepend \"+\" and the country code so that they only need to enter their regular number. To do this, you must \nconfigure a custom url\n and complete subsequent steps to create a custom text-me-the-app page. Then, you can alter the code snippet in \nstep 2\n with the following:\n\n\n    \nvar\n \nphone\n \n=\n \n+91\n \n+\n \nform\n.\nphone\n.\nvalue\n;\n\n\n\n\n\nIn the example above, \"+91\" is the code for the country your users are based in.\n\n\nWhy have the SMS links sent from Text Me The App expired?\n\n\nA: All links links generated from the Text Me the App feature will expire after 7 days.", 
            "title": "Text Me The App"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#overview", 
            "text": "When users click your links on desktop, they have the option to text themselves a link to download your app. We provide this by default on every Branch link, but you can also create your own fully-branded Text Me The App page.   Left: Branch default. Right: a customized version.  This document will cover how to create a custom Text Me The App page, as well as a general FAQ for this product.", 
            "title": "Overview"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#setup", 
            "text": "If you don't want to use Branch's default Text Me The App Page or show a desktop deepview, follow these instructions. This will let you customize a Text Me The App page using Branch.", 
            "title": "Setup"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#set-destination-url", 
            "text": "Visit the  Desktop SMS  page on the Branch dashboard.  Select  Custom Landing Page with SMS , after you toggle to  On .  Enter the destination URL.     Make sure you can access this page  Because you will be making changes to this URL, be sure you have access to the page and can make changes to its HTML.", 
            "title": "Set Destination URL"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#insert-sendsms-snippet-into-your-page", 
            "text": "When you have set your destination URL from the previous step, go to that page and edit the HTML. Paste the following code snippet into it; this is a fully-functional web page that you can use as a template for your Text Me The App page.  !DOCTYPE HTML  html   lang = en-US  head  meta   charset = UTF-8 \n     script   type = text/javascript \n         ( function ( b , r , a , n , c , h , _ , s , d , k ){ if ( ! b [ n ] ||! b [ n ]. _q ){ for (; s _ . length ;) c ( h , _ [ s ++ ]); d = r . createElement ( a ); d . async = 1 ; d . src = https://cdn.branch.io/branch-latest.min.js ; k = r . getElementsByTagName ( a )[ 0 ]; k . parentNode . insertBefore ( d , k ); b [ n ] = h }})( window , document , script , branch , function ( b , r ){ b [ r ] = function (){ b . _q . push ([ r , arguments ])}},{ _q : [], _v : 1 }, addListener applyCode banner closeBanner creditHistory credits data deepview deepviewCta first getCode init link logout redeem referrals removeListener sendSMS setBranchViewData setIdentity track validateCode . split (   ),   0 ); \n\n         branch . init ( YOUR-BRANCH-KEY ); \n             function   sendSMS ( form )   { \n                 var   phone   =   form . phone . value ; \n                 var   linkData   =   { \n                     tags :   [], \n                     channel :   Website , \n                     feature :   TextMeTheApp , \n                     data :   { \n                         foo :   bar \n                     } \n                 }; \n                 var   options   =   {}; \n                 var   callback   =   function ( err ,   result )   { \n                     if   ( err )   { \n                         alert ( Sorry, something went wrong. ); \n                     } \n                     else   { \n                         alert ( SMS sent! ); \n                     } \n                 }; \n                 branch . sendSMS ( phone ,   linkData ,   options ,   callback ); \n                 form . phone . value   =   ; \n             } \n     / script  / head  body \n        Send SMS\n         form   onsubmit = sendSMS(this); return false; \n             input   id = phone   name = phone   type = tel   placeholder = (650) 123-4567   / \n             br / \n             input   type = submit / \n         / form \n     / body  / html   And that's it. From here, you can customize the HTML and CSS, and Branch will take care of the rest. If you want to further customize the page or SMS message itself, read further.", 
            "title": "Insert SendSMS() snippet into your page"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#advanced", 
            "text": "", 
            "title": "Advanced"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#use-your-own-sms-service", 
            "text": "Branch uses Twilio to provide your users the ability to text themselves the app for free, but you can roll your own SMS service by using the following basic logic:   Does  ~referring_link  exist? (a.k.a. did the user end up on this Text Me The App page because of a Branch link?) If so, use this link when sending the SMS.  If not ( ~referring_link  is null), generate a new Branch link by making a call to the Web SDK's  link()  method. Use this link when sending the SMS.   The  ~referring_link  parameter is returned in the Web SDK's init() callback, buried in the referring link data. See the code below:  branch.init('YOUR-BRANCH-KEY', function(err, data) {\n    if (data.data['~referring_link']) {\n        console.log(\"data.data['~referring_link']:\", data.data['~referring_link']);\n    }\n});", 
            "title": "Use your own SMS service"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#use-a-custom-form-with-sendsms", 
            "text": "If you have an existing form for users to input their phone number, you can put our Text Me The App behind it. Add the following code somewhere inside the  head /head  tags on your website.  script   type = text/javascript  function   sendSMS ( form )   { \n   branch . sendSMS ( \n     phone :  form.phone.text , \n     { \n       channel :   Website , \n       feature :   Text-Me-The-App , \n       data :   { \n         foo :   bar \n       } \n     }, \n     {   make_new_link :  false   },   // Default: false. If set to true, sendSMS will generate a new link even if one already exists. \n     function ( err )   {   console . log ( err );   } \n   }  });  /script   Call sendSMS when someone enters something into your form.", 
            "title": "Use a custom form with SendSMS()"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#customize-sms-message-content", 
            "text": "The default text for SMS messages is \"Click here to download [App Name] {{ link }}\".  If you want to customize this, Branch allows you to set a default for all messages, or customize the message for each link.", 
            "title": "Customize SMS message content"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#customize-all-messages", 
            "text": "You can create your own custom default message that will be sent if the specific link someone clicks doesn't have a customized message itself. Navigate back to the Desktop SMS page on the  Branch dashboard . You should see the following section below.   Editing this field will modify  all  SMS messages sent.", 
            "title": "Customize all messages"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#custom-link-specific-messages", 
            "text": "If you don't want to edit the global SMS text, you can define a special SMS message for each individual link. Whether you want to switch the language of a message for a different region or include device specific date, you can specify the message in the  Deep Link Data  section at the bottom of the link editing screen.   Use the  $custom_sms_text  parameter and then enter your custom message in the value section. Make sure to include the  {{ link }}  tag in your custom message! Read the following scenario below to see this in action.  The developer of FlowerPower wants to customize the SMS messages based on the country of the recipient. For each Branch link, they would specify in the deep link data a different custom message.  For ads in France: Cliquez pour t\u00e9l\u00e9charger FlowerPower ici {{ link }}  For ads in Spain: Haz click aqu\u00ed para descargar FlowerPower {{ link }}  For ads in Germany: Klicken Sie auf das FlowerPower hier herunterladen {{ link }}", 
            "title": "Custom link-specific messages"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#use-liquid-tags-to-further-customize-messages", 
            "text": "You can access almost any value of your link's parameters by using liquid tags. The customization options are only limited to your imagination.   The tag  {{ link }}  is replaced with your Branch link  {{ link.channel }}  and  {{ link.campaign }}  output the channel and campaign, if these were set when creating the link.  {{ link.data.key }}  will output a parameter of your link's data dictionary, where  key  is the name of the parameter   Here's an example to illustrate this scenario.  Dmitri is creating Branch links to deep link to each of the different flowers in his app FlowerPower. He creates each link with a key/value pair of the key  flower  and the flower name, e.g.  Flower : Rose ,  Flower : Tulip . He wants to customize his SMS messages based on name of the flower, so he sets his custom link messages as:  {{ link.data.flower }} s on the mind? Click here to buy some for your home!  {{ link }}", 
            "title": "Use liquid tags to further customize messages"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#glossary", 
            "text": "", 
            "title": "Glossary"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#sendsms-parameters", 
            "text": "The  sendSMS()  method requires a phone number and  link parameters . You may optionally specify configuration options and a callback.  branch . sendSMS ( \n     phone , \n     linkData , \n     options , \n     callback   ( err ,   data )  );   Your call to this method, once filled in with the user's phone number, could look like the following:  branch . sendSMS ( \n     phone :   9999999999 , \n     { \n         tags :   [ tag1 ,   tag2 ], \n         channel :   facebook , \n         feature :   dashboard , \n         stage :   new user , \n         data :   { \n             foo :   bar \n         } \n     }, \n     {   make_new_link :   false   },   // Default: false. If set to true, sendSMS will generate a new link even if one already exists. \n     function ( err )   {   console . log ( err );   }  });", 
            "title": "SendSMS() parameters"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#setting-default-replacement-values-for-liquid-tags", 
            "text": "If a specific tag isn't always going to be filled, you can use a  |  character to specify a default to fallback on if the tag is missing from your link dictionary.  E.g.  {{ link.data.author | default:\"Alex\" }}  If the  link.data.author  information isn't found, the tag will just be replaced with  Alex  instead of being replaced by an empty string.", 
            "title": "Setting default replacement values for liquid tags"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#faq", 
            "text": "", 
            "title": "FAQ"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#what-are-the-sms-rate-limits", 
            "text": "We enforce the following rate limits when sending SMS through Branch:  1. 5 texts to the same number within an hour.\n1. 100 texts from the same IP within an hour.", 
            "title": "What are the SMS rate limits?"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#can-i-use-this-service-for-international-phone-numbers", 
            "text": "Yes. Branch uses Twilio to send SMS messages, which means SMS will be delivered all around the world.", 
            "title": "Can I use this service for international phone numbers?"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#ive-sent-myself-multiple-texts-just-now-and-only-received-the-first-few-whats-going-on", 
            "text": "This occurs when a carrier filters you SMS out due to spam. We try our hardest to rate limit a specific user, however, if bypassed, carriers may block your SMS. The reason is that carriers will agressively block content if it's similar and repeatedly sent to the same number. The solution is to wait 24-48 hours.", 
            "title": "I've sent myself multiple texts just now and only received the first few, what's going on?"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#how-come-my-non-us-phone-number-isnt-working", 
            "text": "With full numbers, you are required to use \"+\" and the country code. If you know your users are only in a certain country, you can automatically prepend \"+\" and the country code so that they only need to enter their regular number. To do this, you must  configure a custom url  and complete subsequent steps to create a custom text-me-the-app page. Then, you can alter the code snippet in  step 2  with the following:       var   phone   =   +91   +   form . phone . value ;   In the example above, \"+91\" is the code for the country your users are based in.", 
            "title": "How come my (non US) phone number isn't working?"
        }, 
        {
            "location": "/pages/web/text-me-the-app/#why-have-the-sms-links-sent-from-text-me-the-app-expired", 
            "text": "A: All links links generated from the Text Me the App feature will expire after 7 days.", 
            "title": "Why have the SMS links sent from Text Me The App expired?"
        }, 
        {
            "location": "/pages/ads/apple/", 
            "text": "Overview\n\n\nBranch can help track your Apple Search Ad campaigns by fetching the search ad attribution from Apple at app install.  You can then use the parameters you've set in the Apple Search Ad dashboard, parameters such as the campaign name, and take special action in you app after an install, or simply track the effectiveness of a campaign in the Branch dashboard, along with other your other Branch statistics, such as total installs, referrals, and app link statistics.\n\n\n\n\nApple Search Ads\n\n\nApple Search Ads for Developers\n\n\nApple Search Ads WWDC\n\n\n\n\nSetup\n\n\nIn order to check if the user came from an Apple Search Ad, you must make the attribution call before Branch initializes. As a warning, Apple's API is extremely slow often taking more than 1 second round trip. This means that your call to Branch's initSession to the execution of the callback block will be delayed by this additional 1 second.\n\n\nYou must add Apple's iAd.framework to your project to enable Apple Search Ad checking.\n\n\nEnable Apple Search Ads Check\n\n\nTo enable this check, add a \ndelayInitToCheckForSearchAds\n call to your \nAppDelegate.m\n (or \nAppDelegate.swift\n) file after you create the Branch singleton, but \nbefore\n you call \ninitSession\n. Your code will end up looking something like this:\n\n\nBranch\n \n*\nbranch\n \n=\n \n[\nBranch\n \ngetInstance\n];\n\n\n[\nbranch\n \ndelayInitToCheckForSearchAds\n];\n\n\n[\nbranch\n \ninitSession\n.....\n\n\n\n\n\nlet\n \nbranch\n:\n \nBranch\n \n=\n \nBranch\n.\ngetInstance\n()\n\n\nbranch\n.\ndelayInitToCheckForSearchAds\n()\n\n\nbranch\n.\ninitSession\n.....\n\n\n\n\n\nIf you're concerned about the additional 1 second latency, the call to \ndelayInitToCheckForSearchAds\n can be called conditionally at run time. So, if you want to only check on first install, or the like, then just don't call this method.\n\n\nApple Search Ads Debug\n\n\nWe've also added a debug mode which will demonstrate the functionality. You can enable it like so, but just remember to remove this before release!\n\n\nBranch\n \n*\nbranch\n \n=\n \n[\nBranch\n \ngetInstance\n];\n\n\n[\nbranch\n \nsetAppleSearchAdsDebugMode\n];\n\n\n[\nbranch\n \ndelayInitToCheckForSearchAds\n];\n\n\n[\nbranch\n \ninitSession\n.....\n\n\n\n\n\nlet\n \nbranch\n:\n \nBranch\n \n=\n \nBranch\n.\ngetInstance\n()\n\n\nbranch\n.\nsetAppleSearchAdsDebugMode\n()\n\n\nbranch\n.\ndelayInitToCheckForSearchAds\n()\n\n\nbranch\n.\ninitSession\n.....\n\n\n\n\n\nView Attribution on Dashboard\n\n\nAll the attribution can be visible on the \nBranch dashboard summary page\n. All installs and opens registered from this channel will automatically be tagged with the \nchannel\n: \nApple App Store\n and the \nfeature\n: \nSearch Ads\n. The \ncampaign\n will be set to the Campaign Name you've configured in the Apple Search Ads dashboard.\n\n\nNote that these stats are \nlimited to the date range\n at the top of the page. You can expand the range if you'd like.\n\n\nSupport\n\n\nAdding deep linking to Apple Search Ads\n\n\nSince this integration doesn't utilize Branch links, options for deep linking are limited. We'll pass back the value you use for \ncampaign\n in the Apple Ads dashboard. Since this value is controlled by you, you can put anything there, but it will reflect on the Apple ads dashboard. We will track installs regularly.", 
            "title": "Apple Search Ads"
        }, 
        {
            "location": "/pages/ads/apple/#overview", 
            "text": "Branch can help track your Apple Search Ad campaigns by fetching the search ad attribution from Apple at app install.  You can then use the parameters you've set in the Apple Search Ad dashboard, parameters such as the campaign name, and take special action in you app after an install, or simply track the effectiveness of a campaign in the Branch dashboard, along with other your other Branch statistics, such as total installs, referrals, and app link statistics.   Apple Search Ads  Apple Search Ads for Developers  Apple Search Ads WWDC", 
            "title": "Overview"
        }, 
        {
            "location": "/pages/ads/apple/#setup", 
            "text": "In order to check if the user came from an Apple Search Ad, you must make the attribution call before Branch initializes. As a warning, Apple's API is extremely slow often taking more than 1 second round trip. This means that your call to Branch's initSession to the execution of the callback block will be delayed by this additional 1 second.  You must add Apple's iAd.framework to your project to enable Apple Search Ad checking.", 
            "title": "Setup"
        }, 
        {
            "location": "/pages/ads/apple/#enable-apple-search-ads-check", 
            "text": "To enable this check, add a  delayInitToCheckForSearchAds  call to your  AppDelegate.m  (or  AppDelegate.swift ) file after you create the Branch singleton, but  before  you call  initSession . Your code will end up looking something like this:  Branch   * branch   =   [ Branch   getInstance ];  [ branch   delayInitToCheckForSearchAds ];  [ branch   initSession .....   let   branch :   Branch   =   Branch . getInstance ()  branch . delayInitToCheckForSearchAds ()  branch . initSession .....   If you're concerned about the additional 1 second latency, the call to  delayInitToCheckForSearchAds  can be called conditionally at run time. So, if you want to only check on first install, or the like, then just don't call this method.", 
            "title": "Enable Apple Search Ads Check"
        }, 
        {
            "location": "/pages/ads/apple/#apple-search-ads-debug", 
            "text": "We've also added a debug mode which will demonstrate the functionality. You can enable it like so, but just remember to remove this before release!  Branch   * branch   =   [ Branch   getInstance ];  [ branch   setAppleSearchAdsDebugMode ];  [ branch   delayInitToCheckForSearchAds ];  [ branch   initSession .....   let   branch :   Branch   =   Branch . getInstance ()  branch . setAppleSearchAdsDebugMode ()  branch . delayInitToCheckForSearchAds ()  branch . initSession .....", 
            "title": "Apple Search Ads Debug"
        }, 
        {
            "location": "/pages/ads/apple/#view-attribution-on-dashboard", 
            "text": "All the attribution can be visible on the  Branch dashboard summary page . All installs and opens registered from this channel will automatically be tagged with the  channel :  Apple App Store  and the  feature :  Search Ads . The  campaign  will be set to the Campaign Name you've configured in the Apple Search Ads dashboard.  Note that these stats are  limited to the date range  at the top of the page. You can expand the range if you'd like.", 
            "title": "View Attribution on Dashboard"
        }, 
        {
            "location": "/pages/ads/apple/#support", 
            "text": "", 
            "title": "Support"
        }, 
        {
            "location": "/pages/ads/apple/#adding-deep-linking-to-apple-search-ads", 
            "text": "Since this integration doesn't utilize Branch links, options for deep linking are limited. We'll pass back the value you use for  campaign  in the Apple Ads dashboard. Since this value is controlled by you, you can put anything there, but it will reflect on the Apple ads dashboard. We will track installs regularly.", 
            "title": "Adding deep linking to Apple Search Ads"
        }, 
        {
            "location": "/pages/ads/deep-link-feeds/", 
            "text": "", 
            "title": "Deep Link Feeds"
        }, 
        {
            "location": "/pages/ads/app-install-ads/", 
            "text": "", 
            "title": "App Install Ads"
        }, 
        {
            "location": "/pages/ads/doubleclick/", 
            "text": "Overview\n\n\nTrack your Doubleclick campaigns using Branch's Universal Ads product. Branch's Ad Product will enable you to update your Doubleclick Campaign Manager (DCM) campaigns with deep links that send data back to Doubleclick's servers.\n\n\nYou can now run campaigns on a variety of in-app and mobile web publishing sites, and provide your users with the smoothest experience with Branch's deep links. Read on to learn how to set everything up.\n\n\nSetup\n\n\nDoubleclick Campaign Manager Set Up\n\n\nBefore we start anything on the Branch side, we need to configure options on the DCM side. Start by heading to your DCM dashboard, and navigating to the advertisers section.\n\n\nGrab Advertiser ID\n\n\nFirst, we'll need to grab the advertiser ID. Select the advertiser you want to track with, and grab the Advertiser ID. In this example, it is 6637276. This is the advertiser you will track campaigns with. Please keep note of it.\n\n\n\n\nGrab Server to Server Token\n\n\nOnce you've captured the advertiser ID and selected the advertiser, navigate to \nFloodlight Configuration\n. From there, go to \"server to server\", and make sure \"in-app attribution tracking\" is check-marked. Click new token, call it \u201cBranch token\u201d, and save it. Copy this value, as well.\n\n\n\n\nNow that you have \nAdvertiser ID\n and \nServer to Server Token\n, the last step is to find the events you need to track.\n\n\nGrab Tags for Events\n\n\nGo to the \nFloodlight activities\n tab. For all the events you want to track, grab the \nActivity tag String\n and \nGroup tag String\n.\n\n\n\n\nIn the above screenshot, the two values for \nActivity tag String\n are \nact-ios\n and \nact-android\n. The one value for \nGroup tag String\n is \nsales\n. Do this for all activities you want to track.\n\n\nOnce you're done with this exercise, you should have at least 4 unique values:\n\n\n\n\nServer to Server token\n\n\nAdvertiser ID\n\n\nActivity tag String (per event)\n\n\nGroup tag String (per event)\n\n\n\n\nBranch Dashboard Setup\n\n\nLet's take these values and place them in Branch's dashboard. Begin by navigating to the \npartners page\n.\n\n\nEnable\n\n\nFind doubleclick in the search box. Hit enable. In the \nAccount Settings\n tab, insert your \nServer to Server token\n.\n\n\nMap Events\n\n\nAt this point, you have enabled Branch to communicate with Doubleclick. Now we need to map Branch events to \nFloodlight Activities\n found on the Doubleclick dashboard. Click the \nPostback Config\n tab. You should see a URL for the event \nInstall\n. For demonstration purposes, we will assume you have a corresponding Install event on the Doubleclick dashboard, but this applies to any event you add.\n\n\nStart by grabbing your \nAdvertiser ID\n, \nActivity tag String\n, and \nGroup tag String\n.\n\n\nIn the screenshot above, we have two events, \"In App Activations - Android\", and \"In App Activations - iOS\", which correspond to the Branch Install event. For this example, the \nActivity tag Strings\n are \nact-and\n and \nact-ios\n. The \nGroup tag String\n is \nsales\n.\n\n\nCopy the existing URL in Install, and replace the \nsrc\n, \ncat\n, and \ntype\n variables. Your end result should look exactly like this:\n\n\nhttps://ad.doubleclick.net/ddm/s2s/appactivity/src=6637276;cat=\n#if user_data.os==\"IOS\"\nact-ios\n/#if\n#if user_data.os==\"ANDROID\"\nact-and\n/#if\n;type=sales;ord=${ (id)! }\n\n\nIf you don't have two different tags for iOS and Android, then it will look simpler:\n\n\nhttps://ad.doubleclick.net/ddm/s2s/appactivity/src=6637276;cat=act-tag;type=sales;ord=${ (id)! }\n\n\n\n\nSimply update and hit save.\n\n\nRun campaigns\n\n\nAt this point, you can now create a link for the Doubleclick network and send data back. Take your Branch link, and place it as the Click Through URL for your placement.", 
            "title": "Doubleclick"
        }, 
        {
            "location": "/pages/ads/doubleclick/#overview", 
            "text": "Track your Doubleclick campaigns using Branch's Universal Ads product. Branch's Ad Product will enable you to update your Doubleclick Campaign Manager (DCM) campaigns with deep links that send data back to Doubleclick's servers.  You can now run campaigns on a variety of in-app and mobile web publishing sites, and provide your users with the smoothest experience with Branch's deep links. Read on to learn how to set everything up.", 
            "title": "Overview"
        }, 
        {
            "location": "/pages/ads/doubleclick/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/pages/ads/doubleclick/#doubleclick-campaign-manager-set-up", 
            "text": "Before we start anything on the Branch side, we need to configure options on the DCM side. Start by heading to your DCM dashboard, and navigating to the advertisers section.", 
            "title": "Doubleclick Campaign Manager Set Up"
        }, 
        {
            "location": "/pages/ads/doubleclick/#grab-advertiser-id", 
            "text": "First, we'll need to grab the advertiser ID. Select the advertiser you want to track with, and grab the Advertiser ID. In this example, it is 6637276. This is the advertiser you will track campaigns with. Please keep note of it.", 
            "title": "Grab Advertiser ID"
        }, 
        {
            "location": "/pages/ads/doubleclick/#grab-server-to-server-token", 
            "text": "Once you've captured the advertiser ID and selected the advertiser, navigate to  Floodlight Configuration . From there, go to \"server to server\", and make sure \"in-app attribution tracking\" is check-marked. Click new token, call it \u201cBranch token\u201d, and save it. Copy this value, as well.   Now that you have  Advertiser ID  and  Server to Server Token , the last step is to find the events you need to track.", 
            "title": "Grab Server to Server Token"
        }, 
        {
            "location": "/pages/ads/doubleclick/#grab-tags-for-events", 
            "text": "Go to the  Floodlight activities  tab. For all the events you want to track, grab the  Activity tag String  and  Group tag String .   In the above screenshot, the two values for  Activity tag String  are  act-ios  and  act-android . The one value for  Group tag String  is  sales . Do this for all activities you want to track.  Once you're done with this exercise, you should have at least 4 unique values:   Server to Server token  Advertiser ID  Activity tag String (per event)  Group tag String (per event)", 
            "title": "Grab Tags for Events"
        }, 
        {
            "location": "/pages/ads/doubleclick/#branch-dashboard-setup", 
            "text": "Let's take these values and place them in Branch's dashboard. Begin by navigating to the  partners page .", 
            "title": "Branch Dashboard Setup"
        }, 
        {
            "location": "/pages/ads/doubleclick/#enable", 
            "text": "Find doubleclick in the search box. Hit enable. In the  Account Settings  tab, insert your  Server to Server token .", 
            "title": "Enable"
        }, 
        {
            "location": "/pages/ads/doubleclick/#map-events", 
            "text": "At this point, you have enabled Branch to communicate with Doubleclick. Now we need to map Branch events to  Floodlight Activities  found on the Doubleclick dashboard. Click the  Postback Config  tab. You should see a URL for the event  Install . For demonstration purposes, we will assume you have a corresponding Install event on the Doubleclick dashboard, but this applies to any event you add.  Start by grabbing your  Advertiser ID ,  Activity tag String , and  Group tag String .  In the screenshot above, we have two events, \"In App Activations - Android\", and \"In App Activations - iOS\", which correspond to the Branch Install event. For this example, the  Activity tag Strings  are  act-and  and  act-ios . The  Group tag String  is  sales .  Copy the existing URL in Install, and replace the  src ,  cat , and  type  variables. Your end result should look exactly like this:  https://ad.doubleclick.net/ddm/s2s/appactivity/src=6637276;cat= #if user_data.os==\"IOS\" act-ios /#if #if user_data.os==\"ANDROID\" act-and /#if ;type=sales;ord=${ (id)! }  If you don't have two different tags for iOS and Android, then it will look simpler:  https://ad.doubleclick.net/ddm/s2s/appactivity/src=6637276;cat=act-tag;type=sales;ord=${ (id)! }   Simply update and hit save.", 
            "title": "Map Events"
        }, 
        {
            "location": "/pages/ads/doubleclick/#run-campaigns", 
            "text": "At this point, you can now create a link for the Doubleclick network and send data back. Take your Branch link, and place it as the Click Through URL for your placement.", 
            "title": "Run campaigns"
        }, 
        {
            "location": "/pages/ads/google-app-installs/", 
            "text": "", 
            "title": "Google App Installs"
        }, 
        {
            "location": "/pages/ads/google-universal-app-campaigns/", 
            "text": "", 
            "title": "Google Universal App Campaigns"
        }, 
        {
            "location": "/pages/ads/google-search/", 
            "text": "", 
            "title": "Google Search Ads"
        }, 
        {
            "location": "/pages/ads/facebook-app-installs/", 
            "text": "", 
            "title": "Facebook App Installs"
        }, 
        {
            "location": "/pages/ads/facebook-app-engagement/", 
            "text": "", 
            "title": "Facebook App Engagement"
        }, 
        {
            "location": "/pages/ads/facebook-instagram/", 
            "text": "", 
            "title": "Facebook Instagram"
        }, 
        {
            "location": "/pages/ads/twitter/", 
            "text": "Overview\n\n\nConfiguring Twitter install ads to use Branch links is very simple. The only trick is that you will be using the website click/conversion ads instead of the standard app install ad. Using Branch links allows you to track ad-driven installs on the Branch dashboard and deep link those new users directly to content the first time they open your app.\n\n\nSetup\n\n\nCreate Quick Links\n\n\n\n\nVisit the \nMarketing page\n on the Branch dashboard and click \n+ Add link\n.\n\n\nCreate a link, and fill in values for \ncampaign\n and \nchannel\n. Make sure to add deep link data.\n\n\n\n\nConfigure ad campaign on Twitter\n\n\n\n\nSelect campaign type\n\n\nGo to Twitter and set up a new ad campaign. When selecting the campaign type that you want, select \nWebsite Clicks or Conversions\n.\n\n\nSet the device targeting\n\n\nSet the device targeting as desired.\n\n\nEnter Branch Quick Link\n\n\nOn the ad creation card, enter the Branch Quick Link you created in the \nWebsite URL\n field.\n\n\n\n\nView your data using the Branch dashboard\n\n\nThe \nMarketing page\n on the Branch dashboard shows the performance of each individual link. You can find your link listed in the table with a quick summary of the \ntotal\n clicks and installs.\n\n\n\n\nTo view more details stats, click the \nsmall button that looks like a bar chart\n on the far right. Note that these stats are \nlimited to the date range\n at the top. You can expand the range if you'd like.", 
            "title": "Twitter Ads"
        }, 
        {
            "location": "/pages/ads/twitter/#overview", 
            "text": "Configuring Twitter install ads to use Branch links is very simple. The only trick is that you will be using the website click/conversion ads instead of the standard app install ad. Using Branch links allows you to track ad-driven installs on the Branch dashboard and deep link those new users directly to content the first time they open your app.", 
            "title": "Overview"
        }, 
        {
            "location": "/pages/ads/twitter/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/pages/ads/twitter/#create-quick-links", 
            "text": "Visit the  Marketing page  on the Branch dashboard and click  + Add link .  Create a link, and fill in values for  campaign  and  channel . Make sure to add deep link data.", 
            "title": "Create Quick Links"
        }, 
        {
            "location": "/pages/ads/twitter/#configure-ad-campaign-on-twitter", 
            "text": "", 
            "title": "Configure ad campaign on Twitter"
        }, 
        {
            "location": "/pages/ads/twitter/#select-campaign-type", 
            "text": "Go to Twitter and set up a new ad campaign. When selecting the campaign type that you want, select  Website Clicks or Conversions .", 
            "title": "Select campaign type"
        }, 
        {
            "location": "/pages/ads/twitter/#set-the-device-targeting", 
            "text": "Set the device targeting as desired.", 
            "title": "Set the device targeting"
        }, 
        {
            "location": "/pages/ads/twitter/#enter-branch-quick-link", 
            "text": "On the ad creation card, enter the Branch Quick Link you created in the  Website URL  field.", 
            "title": "Enter Branch Quick Link"
        }, 
        {
            "location": "/pages/ads/twitter/#view-your-data-using-the-branch-dashboard", 
            "text": "The  Marketing page  on the Branch dashboard shows the performance of each individual link. You can find your link listed in the table with a quick summary of the  total  clicks and installs.   To view more details stats, click the  small button that looks like a bar chart  on the far right. Note that these stats are  limited to the date range  at the top. You can expand the range if you'd like.", 
            "title": "View your data using the Branch dashboard"
        }, 
        {
            "location": "/pages/organic-search/firebase/", 
            "text": "Overview\n\n\nGoogle's App Indexing is a project that attempts to expose app results in Google searches performed on mobile devices. This project is formally called Firebase App Indexing.\n\n\nAt a high level, App Indexing has two themes to consider.\n\n\n\n\nResults, ranking and relevancy are based upon web scraping. App Indexing does not improve relevancy in results.\n\n\nApp Indexing makes it so that web results \nalso\n open up your app.\n\n\n\n\nWhen enabling App Indexing, you will likely want to make these changes to your website, as well:\n\n\n\n\nMake your existing website support Apple's Universal Links and Android's App Links. After this, all of your links will correctly open the app and you're done.\n\n\nAdd the undocumented header \nlink rel=\"alternate\" ..\n tags to your website for when Google crawls the page. Branch can assist with this using \nautoAppIndex()\n, documented below.\n\n\n\n\nIf Google knows your website opens the app, when it shows up in a search result, and the user has the app installed, the app will open instead of the website, therefore achieveing App Indexing results in organic search portals.\n\n\nBranch's App Indexing integration is designed for businesses that don't have a website, and want Branch to host their site for them. If you have a website, Branch can dynamically inject App Indexing tags through the WebSDK function \nautoAppIndex()\n described \nhere\n.\n\n\nNote that in order for you to get traffic from this feature, your Branch link will need to appear in search results. We've just now supercharged our app indexing feature with AMP tech to leverage Google's new prioritization of these pages.\n\n\nSetup\n\n\nIndex Your Content\n\n\nAssuming you followed our get started guide, you have already indexed your content by creating \nBranch Universal Objects\n. If you haven't, please go to the get started section and do so.\n\n\nEnable App Indexing\n\n\nEnable automatic sitemap generation on the \nOrganic Search\n page of the Branch Dashboard. Check the \nAutomatic sitemap generation\n checkbox.\n\n\n\n\nOnce you enable this, your app will be included in our nightly job to automatically generate sitemaps. These sitemaps can be scraped by Google, and all of the included links can then be indexed.\n\n\nAfter you've enabled App Indexing, this page will showcase the following data:\n\n\n\n\nThe date the sitemap files were last generated (and included at least one of your links)\n\n\nThe total number of links to unique pieces content that Branch has included in sitemaps\n\n\nThe date Google last scraped your links\n\n\nThe total number of times that Google has scraped links to your content\n\n\n\n\nBoth the sitemap itself and statistics about Google scraping your links are updated via nightly map-reduce jobs.\n\n\n\n\nAdvanced\n\n\nConfigure existing website for App Indexing\n\n\nIf you already have your own website, we recommend that you configure your own site for App Indexing rather than use Branch's hosted App Indexing. You want your main website, with your domain and SEO juice to appear in Google rather than try to push your \napp.link\n domain into search results. Therefore, we recommend you go through a few steps to configure your site for App Indexing.\n\n\nApp Indexing, despite the confusing amount of literature out there, simply opens up your app when installed and falls back to your website when not. You actually don't need to use any of Google's tools (Firebase App Indexing) to accomplish this. Merely configuring your domain for Universal Links on iOS and App Links on Android will do the trick. Here are more details:\n\n\nRecommended: Add Universal Link and App Link support to your domain\n\n\nThis is by far the easiest way to take advantage of Google App Indexing, and the recommended way per conversations that we've had with their team. All you need to do is configure Universal Links and Android App Links on your domain and your corresponding apps.\n\n\nWe've put together some handy guides on our blogs:\n- \nEnable Universal Links on your domain\n\n- \nEnable Android App Links on your domain\n\n\nFeel free to drop us a line if you need help with this stuff.\n\n\nAlternative: Have the WebSDK inject App Indexing tags into your Webpage\n\n\nIf you don\u2019t want to implement Universal or App Links then you can allow the WebSDK to inject App Indexing meta tags between the head section of your webpage. These tags allow Google's web crawling bots to index your app content by launching your app through URI schemes.\n\n\nThis requires:\n\n\n\n\n\n\nBranch to be integrated for URI based deep linking. Please ensure that steps 1, 2, 3 and 4 (\niOS\n only) of the following guides are completed:\n\n\n\n\nAndroid SDK Integration Guide\n\n\niOS SDK Integration Guide\n\n\n\n\n\n\n\n\nA call to \nautoAppIndex()\n (a WebSDK function) to be made with the appropriate parameters (see below).\n\n\n\n\n\n\nEnsure that you've placed the snippet from \nhere\n somewhere between the \nhead\n/head\n tags of your webpage. Then position \nbranch.autoAppIndex({..})\n below \nbranch.init()\n and with the optional parameters below:\n\n\n\n\n\n\n\n\nKey\n\n\nValue\n\n\n\n\n\n\n\n\n\n\n\"androidPackageName\"\n\n\nAndroid App's package name\n\n\n\n\n\n\n\"androidURL\"\n\n\nA custom scheme for your Android App such as: \nexample/home/cupertino/12345\n where \nexample\n is the App's URI scheme and \nhome/cupertino/12345\n routes to unique content in the App\n\n\n\n\n\n\n\"iosAppId\"\n\n\niTunes App Store ID for your iOS App\n\n\n\n\n\n\n\"iosURL\"\n\n\nA custom scheme for your iOS App such as: \nexample/home/cupertino/12345\n\n\n\n\n\n\n\"data\"\n\n\nAny additional deep link data that you would like to pass to your App\n\n\n\n\n\n\n\n\nbranch\n.\nautoAppIndex\n({\n\n    \niosAppId\n:\n123456789\n,\n\n    \niosURL\n:\nexample/home/cupertino/12345\n,\n\n    \nandroidPackageName\n:\ncom.somecompany.app\n,\n\n    \nandroidURL\n:\nexample/home/cupertino/12345\n,\n\n    \ndata\n:\n{\nwalkScore\n:\n65\n,\n \ntransitScore\n:\n50\n}\n\n\n},\n \nfunction\n(\nerr\n)\n \n{\n \nconsole\n.\nlog\n(\nerr\n);\n \n});\n\n\n\n\n\nAfter the WebSDK has initialized, the function will inject Firebase App Indexing tags between the head section of your webpage with the following format:\n\n\nhtml\n\n\nhead\n\n  ...\n  \nlink\n \nrel\n=\nalternate\n \nhref\n=\nandroid-app://{androidPackageName}/{androidURL}?{branch_tracking_params_and_additional_deep_link_data}\n/\n\n  \nlink\n \nrel\n=\nalternate\n \nhref\n=\nios-app://{iosAppId}/{iosURL}?{branch_tracking_params_and_additional_deep_link_data}\n/\n\n  ...\n\n/\nhead\n\n\nbody\n \u2026 \n/\nbody\n\n\n\n\n\nNote\n: If optional parameters from above are not specified, Branch will try to build Firebase App Indexing tags using your page's \nApp Links\n tags.\n\n\nAlternatively, if optional parameters are specified but Firebase App Indexing tags already exist then this function will append Branch tracking params to the end of those tags and ignore what is passed into \n.autoAppIndex()\n.\n\n\nFor debugging purposes, you can check that the method is correctly inserting these tags by right clicking anywhere on your webpage in Chrome then clicking on inspect. After that, toggle the head section of your page's HTML and you should see the dynamically generated Firebase App Indexing tags.\n\n\nAnalytics related to Google's attempts to index your App's content via these tags can be found from Source Analytics in Dashboard where \nchannel\n is \nFirebase App Indexing\n and \nfeature\n is \nAuto App Indexing\n.\n\n\n\n\nTesting with webmaster tools\n\n\nWe have read on Google's official blog that Googlebot renders javascript before it indexes webpages however, there are times where it may choose not to. The reasons why are unclear to us. Therefore, dynamically generated App Indexing meta tags created as part of this function may or may not appear in your tests with Webmaster Tools when you try to fetch and render as Googlebot.\n\n\n\n\nAttribute app traffic to organic search\n\n\nCurious as to how well your content is performing -- how many clicks and installs it is driving?\n\n\nWe automatically tag clicks on these links as coming from Google App Indexing. In the Click Flow section of our Dashboard's \nSummary\n page, you can filter for these clicks. Just select either \nchannel: google_search\n or \nfeature: google_app_index\n.\n\n\nHiding content from the index\n\n\nNot all content is public, and not all content should be publicly indexed. If you want to enable Branch's automatic sitemap generation but exclude certain pieces of content, you can mark that content as private. You should set the content indexing mode for the individual Branch Universal Object. This property is called \ncontentIndexMode\n.\n\n\nBranchUniversalObject\n \n*\nbranchUniversalObject\n \n=\n \n[[\nBranchUniversalObject\n \nalloc\n]\n \ninitWithCanonicalIdentifier\n:\n@\nitem/12345\n];\n\n\nbranchUniversalObject\n.\ncontentIndexMode\n \n=\n \nContentIndexModePrivate\n;\n\n\n\n\n\nlet\n \nbranchUniversalObject\n:\n \nBranchUniversalObject\n \n=\n \nBranchUniversalObject\n(\ncanonicalIdentifier\n:\n \nitem/12345\n)\n\n\nbranchUniversalObject\n.\ncontentIndexMode\n \n=\n \nContentIndexModePrivate\n\n\n\n\n\n \nBranchUniversalObject\n \nbranchUniversalObject\n \n=\n \nnew\n \nBranchUniversalObject\n()\n\n                \n.\nsetCanonicalIdentifier\n(\nitem/12345\n)\n\n                \n.\nsetContentIndexingMode\n(\nBranchUniversalObject\n.\nCONTENT_INDEX_MODE\n.\nPRIVATE\n);", 
            "title": "Firebase"
        }, 
        {
            "location": "/pages/organic-search/firebase/#overview", 
            "text": "Google's App Indexing is a project that attempts to expose app results in Google searches performed on mobile devices. This project is formally called Firebase App Indexing.  At a high level, App Indexing has two themes to consider.   Results, ranking and relevancy are based upon web scraping. App Indexing does not improve relevancy in results.  App Indexing makes it so that web results  also  open up your app.   When enabling App Indexing, you will likely want to make these changes to your website, as well:   Make your existing website support Apple's Universal Links and Android's App Links. After this, all of your links will correctly open the app and you're done.  Add the undocumented header  link rel=\"alternate\" ..  tags to your website for when Google crawls the page. Branch can assist with this using  autoAppIndex() , documented below.   If Google knows your website opens the app, when it shows up in a search result, and the user has the app installed, the app will open instead of the website, therefore achieveing App Indexing results in organic search portals.  Branch's App Indexing integration is designed for businesses that don't have a website, and want Branch to host their site for them. If you have a website, Branch can dynamically inject App Indexing tags through the WebSDK function  autoAppIndex()  described  here .  Note that in order for you to get traffic from this feature, your Branch link will need to appear in search results. We've just now supercharged our app indexing feature with AMP tech to leverage Google's new prioritization of these pages.", 
            "title": "Overview"
        }, 
        {
            "location": "/pages/organic-search/firebase/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/pages/organic-search/firebase/#index-your-content", 
            "text": "Assuming you followed our get started guide, you have already indexed your content by creating  Branch Universal Objects . If you haven't, please go to the get started section and do so.", 
            "title": "Index Your Content"
        }, 
        {
            "location": "/pages/organic-search/firebase/#enable-app-indexing", 
            "text": "Enable automatic sitemap generation on the  Organic Search  page of the Branch Dashboard. Check the  Automatic sitemap generation  checkbox.   Once you enable this, your app will be included in our nightly job to automatically generate sitemaps. These sitemaps can be scraped by Google, and all of the included links can then be indexed.  After you've enabled App Indexing, this page will showcase the following data:   The date the sitemap files were last generated (and included at least one of your links)  The total number of links to unique pieces content that Branch has included in sitemaps  The date Google last scraped your links  The total number of times that Google has scraped links to your content   Both the sitemap itself and statistics about Google scraping your links are updated via nightly map-reduce jobs.", 
            "title": "Enable App Indexing"
        }, 
        {
            "location": "/pages/organic-search/firebase/#advanced", 
            "text": "", 
            "title": "Advanced"
        }, 
        {
            "location": "/pages/organic-search/firebase/#configure-existing-website-for-app-indexing", 
            "text": "If you already have your own website, we recommend that you configure your own site for App Indexing rather than use Branch's hosted App Indexing. You want your main website, with your domain and SEO juice to appear in Google rather than try to push your  app.link  domain into search results. Therefore, we recommend you go through a few steps to configure your site for App Indexing.  App Indexing, despite the confusing amount of literature out there, simply opens up your app when installed and falls back to your website when not. You actually don't need to use any of Google's tools (Firebase App Indexing) to accomplish this. Merely configuring your domain for Universal Links on iOS and App Links on Android will do the trick. Here are more details:", 
            "title": "Configure existing website for App Indexing"
        }, 
        {
            "location": "/pages/organic-search/firebase/#recommended-add-universal-link-and-app-link-support-to-your-domain", 
            "text": "This is by far the easiest way to take advantage of Google App Indexing, and the recommended way per conversations that we've had with their team. All you need to do is configure Universal Links and Android App Links on your domain and your corresponding apps.  We've put together some handy guides on our blogs:\n-  Enable Universal Links on your domain \n-  Enable Android App Links on your domain  Feel free to drop us a line if you need help with this stuff.", 
            "title": "Recommended: Add Universal Link and App Link support to your domain"
        }, 
        {
            "location": "/pages/organic-search/firebase/#alternative-have-the-websdk-inject-app-indexing-tags-into-your-webpage", 
            "text": "If you don\u2019t want to implement Universal or App Links then you can allow the WebSDK to inject App Indexing meta tags between the head section of your webpage. These tags allow Google's web crawling bots to index your app content by launching your app through URI schemes.  This requires:    Branch to be integrated for URI based deep linking. Please ensure that steps 1, 2, 3 and 4 ( iOS  only) of the following guides are completed:   Android SDK Integration Guide  iOS SDK Integration Guide     A call to  autoAppIndex()  (a WebSDK function) to be made with the appropriate parameters (see below).    Ensure that you've placed the snippet from  here  somewhere between the  head /head  tags of your webpage. Then position  branch.autoAppIndex({..})  below  branch.init()  and with the optional parameters below:     Key  Value      \"androidPackageName\"  Android App's package name    \"androidURL\"  A custom scheme for your Android App such as:  example/home/cupertino/12345  where  example  is the App's URI scheme and  home/cupertino/12345  routes to unique content in the App    \"iosAppId\"  iTunes App Store ID for your iOS App    \"iosURL\"  A custom scheme for your iOS App such as:  example/home/cupertino/12345    \"data\"  Any additional deep link data that you would like to pass to your App     branch . autoAppIndex ({ \n     iosAppId : 123456789 , \n     iosURL : example/home/cupertino/12345 , \n     androidPackageName : com.somecompany.app , \n     androidURL : example/home/cupertino/12345 , \n     data : { walkScore : 65 ,   transitScore : 50 }  },   function ( err )   {   console . log ( err );   });   After the WebSDK has initialized, the function will inject Firebase App Indexing tags between the head section of your webpage with the following format:  html  head \n  ...\n   link   rel = alternate   href = android-app://{androidPackageName}/{androidURL}?{branch_tracking_params_and_additional_deep_link_data} / \n   link   rel = alternate   href = ios-app://{iosAppId}/{iosURL}?{branch_tracking_params_and_additional_deep_link_data} / \n  ... / head  body  \u2026  / body   Note : If optional parameters from above are not specified, Branch will try to build Firebase App Indexing tags using your page's  App Links  tags.  Alternatively, if optional parameters are specified but Firebase App Indexing tags already exist then this function will append Branch tracking params to the end of those tags and ignore what is passed into  .autoAppIndex() .  For debugging purposes, you can check that the method is correctly inserting these tags by right clicking anywhere on your webpage in Chrome then clicking on inspect. After that, toggle the head section of your page's HTML and you should see the dynamically generated Firebase App Indexing tags.  Analytics related to Google's attempts to index your App's content via these tags can be found from Source Analytics in Dashboard where  channel  is  Firebase App Indexing  and  feature  is  Auto App Indexing .   Testing with webmaster tools  We have read on Google's official blog that Googlebot renders javascript before it indexes webpages however, there are times where it may choose not to. The reasons why are unclear to us. Therefore, dynamically generated App Indexing meta tags created as part of this function may or may not appear in your tests with Webmaster Tools when you try to fetch and render as Googlebot.", 
            "title": "Alternative: Have the WebSDK inject App Indexing tags into your Webpage"
        }, 
        {
            "location": "/pages/organic-search/firebase/#attribute-app-traffic-to-organic-search", 
            "text": "Curious as to how well your content is performing -- how many clicks and installs it is driving?  We automatically tag clicks on these links as coming from Google App Indexing. In the Click Flow section of our Dashboard's  Summary  page, you can filter for these clicks. Just select either  channel: google_search  or  feature: google_app_index .", 
            "title": "Attribute app traffic to organic search"
        }, 
        {
            "location": "/pages/organic-search/firebase/#hiding-content-from-the-index", 
            "text": "Not all content is public, and not all content should be publicly indexed. If you want to enable Branch's automatic sitemap generation but exclude certain pieces of content, you can mark that content as private. You should set the content indexing mode for the individual Branch Universal Object. This property is called  contentIndexMode .  BranchUniversalObject   * branchUniversalObject   =   [[ BranchUniversalObject   alloc ]   initWithCanonicalIdentifier : @ item/12345 ];  branchUniversalObject . contentIndexMode   =   ContentIndexModePrivate ;   let   branchUniversalObject :   BranchUniversalObject   =   BranchUniversalObject ( canonicalIdentifier :   item/12345 )  branchUniversalObject . contentIndexMode   =   ContentIndexModePrivate     BranchUniversalObject   branchUniversalObject   =   new   BranchUniversalObject () \n                 . setCanonicalIdentifier ( item/12345 ) \n                 . setContentIndexingMode ( BranchUniversalObject . CONTENT_INDEX_MODE . PRIVATE );", 
            "title": "Hiding content from the index"
        }, 
        {
            "location": "/pages/organic-search/spotlight/", 
            "text": "Overview\n\n\nListing your app content on Apple's new Spotlight search with Branch is easy. Note that this guide will list on both \ncloud search\n and \nlocal spotlight search\n.\n\n\n\n\nWarning\n\n\nSome older devices cannot index content. iPad minis, for example, cannot use CoreSpotlight. The SDK includes a check for these devices and will return an error message if you attempt to index content on them.\n\n\n\n\nSetup\n\n\n\n\nPre-reqs\n\n\nThis guide requires you to have already \nintegrated the Branch SDK\n into your app. For Spotlight search results to function as intended, you should also \nconfigure deep link routing\n.\n\n\n\n\n{% endprerequisite %}\n\n\nList Content\n\n\nContent can be added to Spotlight search by using the \nBranchUniversalObject\n. We'd recommend that you put this on every page that renders a piece of content for your users. This way, a user could rediscover a previous thing that they had viewed.\n\n\nFirst, define the content that you'd like to be listed by customizing the \nBranchUniversalObject\n. We'd recommend that you do this in \nviewDidLoad\n\n\nBranchUniversalObject\n \n*\nbranchUniversalObject\n \n=\n \n[[\nBranchUniversalObject\n \nalloc\n]\n \ninitWithCanonicalIdentifier\n:\n@\nitem/12345\n];\n\n\nbranchUniversalObject\n.\ntitle\n \n=\n \n@\nMy Content Title\n;\n\n\nbranchUniversalObject\n.\ncontentDescription\n \n=\n \n@\nMy Content Description\n;\n\n\nbranchUniversalObject\n.\nimageUrl\n \n=\n \n@\nhttps://example.com/mycontent-12345.png\n;\n\n\n[\nbranchUniversalObject\n \naddMetadataKey\n:\n@\nproperty1\n \nvalue\n:\n@\nblue\n];\n\n\n[\nbranchUniversalObject\n \naddMetadataKey\n:\n@\nproperty2\n \nvalue\n:\n@\nred\n];\n\n\n\n// important to set this flag to true\n\n\nbranchUniversalObject\n.\nautomaticallyListOnSpotlight\n \n=\n \nYES\n;\n\n\n\n\n\nlet\n \nbranchUniversalObject\n:\n \nBranchUniversalObject\n \n=\n \nBranchUniversalObject\n(\ncanonicalIdentifier\n:\n \nitem/12345\n)\n\n\nbranchUniversalObject\n.\ntitle\n \n=\n \nMy Content Title\n\n\nbranchUniversalObject\n.\ncontentDescription\n \n=\n \nMy Content Description\n\n\nbranchUniversalObject\n.\nimageUrl\n \n=\n \nhttps://example.com/mycontent-12345.png\n\n\nbranchUniversalObject\n.\naddMetadataKey\n(\nproperty1\n,\n \nvalue\n:\n \nblue\n)\n\n\nbranchUniversalObject\n.\naddMetadataKey\n(\nproperty2\n,\n \nvalue\n:\n \nred\n)\n\n\n\n// important to set this flag to true\n\n\nbranchUniversalObject\n.\nautomaticallyListOnSpotlight\n \n=\n \ntrue\n\n\n{\n%\n \nendhighlight\n \n%\n}\n\n\n\n\n\nThen call the \nuserCompletedAction\n method with the \nView\n event on your \nBranchUniversalObject\n. You will want to do this every single time a user goes to view a page in your app, so we recommend putting this in \nviewDidAppear\n, which means you must initialize the Branch Universal Object with all appropriate metadata before \nviewDidAppear\n.\n\n\n[\nbranchUniversalObject\n \nuserCompletedAction\n:\nBNCRegisterViewEvent\n];\n\n\n\n\n\nbranchUniversalObject\n.\nuserCompletedAction\n(\nBNCRegisterViewEvent\n)\n\n\n\n\n\nThis will create the appropriate NSUserActivity and tell Apple that a view occurred, adding it to the local Spotlight index if not already present in addition to increasing it's ranking in the global index. To read more about this, check out \nthis blog post\n.\n\n\nHandle incoming traffic from Spotlight\n\n\nOpen your \nAppDelegate.m\n file and add the following method. If you completed the basic SDK integration guide, this is likely already present.\n\n\n-\n \n(\nBOOL\n)\napplication:\n(\nUIApplication\n \n*\n)\napplication\n \ncontinueUserActivity:\n(\nNSUserActivity\n \n*\n)\nuserActivity\n \nrestorationHandler:\n(\nvoid\n \n(\n^\n)(\nNSArray\n \n*\nrestorableObjects\n))\nrestorationHandler\n \n{\n\n    \n[[\nBranch\n \ngetInstance\n]\n \ncontinueUserActivity\n:\nuserActivity\n];\n\n\n    \nreturn\n \nYES\n;\n\n\n}\n\n\n\n\n\nIn Swift:\n\n\n{\n%\n \nhighlight\n \nswift\n \n%\n}\n\n\nfunc\n \napplication\n(\n_\n \napplication\n:\n \nUIApplication\n,\n \ncontinue\n \nuserActivity\n:\n \nNSUserActivity\n,\n \nrestorationHandler\n:\n \n@\nescaping\n \n([\nAny\n]?)\n \n-\n \nVoid\n)\n \n-\n \nBool\n \n{\n\n    \n// pass the url to the handle deep link call\n\n    \nreturn\n \nBranch\n.\ngetInstance\n().\ncontinueUserActivity\n(\nuserActivity\n)\n\n\n    \nreturn\n \ntrue\n\n\n}\n\n\n\n\n\nAdvanced\n\n\nUse deepviews for user acquisition\n\n\nIf the user doesn't have the app installed and finds your content through search, Spotlight will open up the browser. In this situation, you can \nshow a Deepview\n, which is an automatically-generated, mobile web render of the app content.\n\n\nCustomize content\n\n\nYou can use our identifier when indexing to perform advanced customizations of the content being listed.\n\n\n[\nbranch\n \ngetSpotlightUrlWithParams\n:\n@{\n@\n$og_title\n:\n \n@\nMy App\n,\n\n                                    \n@\n$og_description\n:\n \n@\nMy app is disrupting apps\n,\n\n                                    \n@\n$og_thumb\n:\n \n@\nhttps://s3-us-west-1.amazonaws.com/branchhost/mosaic_og.png\n,\n\n                                    \n@\nobject_id\n:\n \n@\n1234\n}\n\n                         \ncallback\n:\n^\n(\nNSDictionary\n \n*\nparams\n,\n \nNSError\n \n*\nerror\n)\n \n{\n\n    \nif\n \n(\n!\nerror\n \n \nparams\n)\n \n{\n\n        \n// params will contain @\nurl\n and @\nspotlight_identifier\n\n        \n// the example below shows where to use them\n\n\n        \n// Index via the NSUserActivity strategy\n\n        \n// you must set the new NSUserActivity to the property of a UIViewController\n\n        \nself\n.\nuserActivity\n \n=\n \n[[\nNSUserActivity\n \nalloc\n]\n \ninitWithActivityType\n:\nparams\n[\n@\nspotlight_identifer\n]];\n\n        \nself\n.\nuserActivity\n.\nwebpageURL\n \n=\n \n[\nNSURL\n \nURLWithString\n:\nparams\n[\n@\nurl\n]];\n\n        \n[\nself\n.\nuserActivity\n \nbecomeCurrent\n];\n\n    \n}\n\n\n}];\n\n\n\n\n\nIndex content at scale\n\n\nIf the goal is to simply index the content of the app without creating a \nBranchUniversalObject\n or if you want index content at scale then we recommend using the following method:\n\n\nBranchCSSearchableItemAttributeSet\n \n*\nset\n \n=\n \n[[\nBranchCSSearchableItemAttributeSet\n \nalloc\n]\n \ninit\n];\n\n\nset\n.\ntitle\n \n=\n \n@\nMy Content Title\n;\n\n\nset\n.\ncontentDescription\n \n=\n \n@\nMy Content Description\n;\n\n\nset\n.\nparams\n \n=\n \n@{\n@\nproperty1\n \n:\n \n@\nblue\n,\n \n@\nproperty2\n \n:\n \n@\nred\n}\n;\n\n\nset\n.\nkeywords\n \n=\n \n[\nNSSet\n \nsetWithArray\n:\n@[\narray\n,\n \nof\n,\n \nkeywords\n]\n];\n\n\nset\n.\nthumbnailURL\n \n=\n \n@\nhttps://example.com/mycontent-12345.png\n;\n\n\n\n[\nset\n \nindexWithCallback\n:\n^\n(\nNSString\n \n*\n \n_Nullable\n \nurl\n,\n \nNSString\n \n*\n \n_Nullable\n \nspotlightIdentifier\n,\n \nNSError\n \n*\n \n_Nullable\n \nerror\n)\n \n{\n\n        \nNSLog\n(\n@\nurl %@, spotlightIdentifier %@, error %@ \n,\n \nurl\n,\n \nspotlightIdentifier\n,\n \nerror\n);\n\n\n}];", 
            "title": "Spotlight"
        }, 
        {
            "location": "/pages/organic-search/spotlight/#overview", 
            "text": "Listing your app content on Apple's new Spotlight search with Branch is easy. Note that this guide will list on both  cloud search  and  local spotlight search .   Warning  Some older devices cannot index content. iPad minis, for example, cannot use CoreSpotlight. The SDK includes a check for these devices and will return an error message if you attempt to index content on them.", 
            "title": "Overview"
        }, 
        {
            "location": "/pages/organic-search/spotlight/#setup", 
            "text": "Pre-reqs  This guide requires you to have already  integrated the Branch SDK  into your app. For Spotlight search results to function as intended, you should also  configure deep link routing .   {% endprerequisite %}", 
            "title": "Setup"
        }, 
        {
            "location": "/pages/organic-search/spotlight/#list-content", 
            "text": "Content can be added to Spotlight search by using the  BranchUniversalObject . We'd recommend that you put this on every page that renders a piece of content for your users. This way, a user could rediscover a previous thing that they had viewed.  First, define the content that you'd like to be listed by customizing the  BranchUniversalObject . We'd recommend that you do this in  viewDidLoad  BranchUniversalObject   * branchUniversalObject   =   [[ BranchUniversalObject   alloc ]   initWithCanonicalIdentifier : @ item/12345 ];  branchUniversalObject . title   =   @ My Content Title ;  branchUniversalObject . contentDescription   =   @ My Content Description ;  branchUniversalObject . imageUrl   =   @ https://example.com/mycontent-12345.png ;  [ branchUniversalObject   addMetadataKey : @ property1   value : @ blue ];  [ branchUniversalObject   addMetadataKey : @ property2   value : @ red ];  // important to set this flag to true  branchUniversalObject . automaticallyListOnSpotlight   =   YES ;   let   branchUniversalObject :   BranchUniversalObject   =   BranchUniversalObject ( canonicalIdentifier :   item/12345 )  branchUniversalObject . title   =   My Content Title  branchUniversalObject . contentDescription   =   My Content Description  branchUniversalObject . imageUrl   =   https://example.com/mycontent-12345.png  branchUniversalObject . addMetadataKey ( property1 ,   value :   blue )  branchUniversalObject . addMetadataKey ( property2 ,   value :   red )  // important to set this flag to true  branchUniversalObject . automaticallyListOnSpotlight   =   true  { %   endhighlight   % }   Then call the  userCompletedAction  method with the  View  event on your  BranchUniversalObject . You will want to do this every single time a user goes to view a page in your app, so we recommend putting this in  viewDidAppear , which means you must initialize the Branch Universal Object with all appropriate metadata before  viewDidAppear .  [ branchUniversalObject   userCompletedAction : BNCRegisterViewEvent ];   branchUniversalObject . userCompletedAction ( BNCRegisterViewEvent )   This will create the appropriate NSUserActivity and tell Apple that a view occurred, adding it to the local Spotlight index if not already present in addition to increasing it's ranking in the global index. To read more about this, check out  this blog post .", 
            "title": "List Content"
        }, 
        {
            "location": "/pages/organic-search/spotlight/#handle-incoming-traffic-from-spotlight", 
            "text": "Open your  AppDelegate.m  file and add the following method. If you completed the basic SDK integration guide, this is likely already present.  -   ( BOOL ) application: ( UIApplication   * ) application   continueUserActivity: ( NSUserActivity   * ) userActivity   restorationHandler: ( void   ( ^ )( NSArray   * restorableObjects )) restorationHandler   { \n     [[ Branch   getInstance ]   continueUserActivity : userActivity ]; \n\n     return   YES ;  }   In Swift:  { %   highlight   swift   % }  func   application ( _   application :   UIApplication ,   continue   userActivity :   NSUserActivity ,   restorationHandler :   @ escaping   ([ Any ]?)   -   Void )   -   Bool   { \n     // pass the url to the handle deep link call \n     return   Branch . getInstance (). continueUserActivity ( userActivity ) \n\n     return   true  }", 
            "title": "Handle incoming traffic from Spotlight"
        }, 
        {
            "location": "/pages/organic-search/spotlight/#advanced", 
            "text": "", 
            "title": "Advanced"
        }, 
        {
            "location": "/pages/organic-search/spotlight/#use-deepviews-for-user-acquisition", 
            "text": "If the user doesn't have the app installed and finds your content through search, Spotlight will open up the browser. In this situation, you can  show a Deepview , which is an automatically-generated, mobile web render of the app content.", 
            "title": "Use deepviews for user acquisition"
        }, 
        {
            "location": "/pages/organic-search/spotlight/#customize-content", 
            "text": "You can use our identifier when indexing to perform advanced customizations of the content being listed.  [ branch   getSpotlightUrlWithParams : @{ @ $og_title :   @ My App , \n                                     @ $og_description :   @ My app is disrupting apps , \n                                     @ $og_thumb :   @ https://s3-us-west-1.amazonaws.com/branchhost/mosaic_og.png , \n                                     @ object_id :   @ 1234 } \n                          callback : ^ ( NSDictionary   * params ,   NSError   * error )   { \n     if   ( ! error     params )   { \n         // params will contain @ url  and @ spotlight_identifier \n         // the example below shows where to use them \n\n         // Index via the NSUserActivity strategy \n         // you must set the new NSUserActivity to the property of a UIViewController \n         self . userActivity   =   [[ NSUserActivity   alloc ]   initWithActivityType : params [ @ spotlight_identifer ]]; \n         self . userActivity . webpageURL   =   [ NSURL   URLWithString : params [ @ url ]]; \n         [ self . userActivity   becomeCurrent ]; \n     }  }];", 
            "title": "Customize content"
        }, 
        {
            "location": "/pages/organic-search/spotlight/#index-content-at-scale", 
            "text": "If the goal is to simply index the content of the app without creating a  BranchUniversalObject  or if you want index content at scale then we recommend using the following method:  BranchCSSearchableItemAttributeSet   * set   =   [[ BranchCSSearchableItemAttributeSet   alloc ]   init ];  set . title   =   @ My Content Title ;  set . contentDescription   =   @ My Content Description ;  set . params   =   @{ @ property1   :   @ blue ,   @ property2   :   @ red } ;  set . keywords   =   [ NSSet   setWithArray : @[ array ,   of ,   keywords ] ];  set . thumbnailURL   =   @ https://example.com/mycontent-12345.png ;  [ set   indexWithCallback : ^ ( NSString   *   _Nullable   url ,   NSString   *   _Nullable   spotlightIdentifier ,   NSError   *   _Nullable   error )   { \n         NSLog ( @ url %@, spotlightIdentifier %@, error %@  ,   url ,   spotlightIdentifier ,   error );  }];", 
            "title": "Index content at scale"
        }, 
        {
            "location": "/pages/emails/responsys/", 
            "text": "", 
            "title": "Responsys"
        }, 
        {
            "location": "/pages/emails/sfmc/", 
            "text": "", 
            "title": "SFMC"
        }, 
        {
            "location": "/pages/emails/sendgrid/", 
            "text": "", 
            "title": "SendGrid"
        }, 
        {
            "location": "/pages/emails/sailthru/", 
            "text": "", 
            "title": "Sailthru"
        }, 
        {
            "location": "/pages/emails/appboy/", 
            "text": "", 
            "title": "AppBoy"
        }, 
        {
            "location": "/pages/emails/self-serve/", 
            "text": "", 
            "title": "Self Serve"
        }, 
        {
            "location": "/pages/app-to-app/android-instant-apps/", 
            "text": "Overview\n\n\nAt the 2017 Google IO, Google launched the public version of Instant Apps for developers to adopt and build on. Instant Apps are a way to load a partial section (or \nsplit\n as Google refers to them), without the user having to visit the Play Store and install your app. In effect, it's instant access to your native app. If you have been using a website as a fallback when your full Android app is not installed, an Instant App is an alternative. You'll have to choose between mobile web and your Instant App on Android so make sure you plan out your integration!\n\n\nBranch has made it incredibly easy to start using your basic Branch links in your Instant Apps as shown below. The guide on this page will walk you through the full configuration process to enable Branch in your new Instant App.\n\n\n\n\n\n\nNote\n\n\nThis guide is not about how to configure your Android app to be an Instant App. Please see \nGoogle's documentation for detailed instructions\n on how to do this. Come back to this guide when you're ready to enable Branch.\n\n\n\n\nWhy use Branch for your Instant Apps\n\n\nIf you follow Google's guide, they'll have you integrate your own web links as Android App Links, that will trigger Instant Apps. What can Branch do for you then? First off, let me explain how Branch works with Instant Apps. Branch will act as a \nnew\n web domain that you'll register for Android App Links in addition to your own web domain or as your only domain in the manifest. We act as your link.\n\n\nHere's a list of the potential use cases for Branch links and Instant Apps:\n\n\n\n\nBranch will host personalized web links for you since we provision a custom domain (yourapp.app.link or whitelabeled) for every app. If you don't have a website, this means that we can take care of all your Android App Links needs, automatically configuring and hosting the assetlinks.json file on your behalf.\n\n\nIf you have a popular website and have configured Android App Links, you likely don't want 100% of your web links triggering your Instant App. Your Instant App will only support a fraction of your full app functionality. You can configure your Instant App to only trigger on your Branch link domains and paths, then use the usage of Branch to control when users are linked to Instant Apps.\n\n\nBranch can measure and attribute \nclicks\n, \ninstalls\n and custom conversion events back to the Branch tracking link for \nall visits to your Instant App\n, which are visible on the dashboard.\n\n\nYou can use Branch links to deferred deep link from the Android Instant App to the full Android App. You'll likely build a feature that pushes users from the Instant App to the full Android app, and Branch can do its magic on this transition.\n\n\nBranch can measure and attribute \nclicks\n, \ninstalls\n and custom conversion events inside your full native Android App for users who were referred from an Instant App, showing the conversion from click -\n Instant App -\n Full App on the dashboard.\n\n\n\n\nSetup\n\n\nIntegrating Branch for your Instant App\n\n\nSo you're convinced. Let's get started! If at any time, you need a real example, you can check out a \nfull demo application\n on our Github. We've replicated our \noriginal Android demo application\n and modified it to support Android Instant Apps.\n\n\nInitialize the Branch SDK\n\n\nHead to your \ncore library project\n, where your Application class is defined and drop in the snippet of code to the onCreate() method as follows. If you plan on deep linking from your Android Instant App to your full Android app after its installed, you'll need to add the line \nenablePlayStoreReferrer\n. This adds a delay to the initialization to wait for the Google Play Referrer, which can take up to a second.\n\n\npublic\n \nvoid\n \nonCreate\n()\n \n{\n\n  \nsuper\n.\nonCreate\n();\n\n  \n// This is needed to deferred deep link from an Android Instant App to a full app\n\n  \n// It tells the Branch initialization to wait for the Google Play Referrer before proceeding.\n\n  \nBranch\n.\nenablePlayStoreReferrer\n(\n1000L\n);\n\n\n  \n// Initialize the Branch SDK\n\n  \nBranch\n.\ngetAutoInstance\n(\nthis\n);\n\n\n}\n\n\n\n\n\nAdd your Branch keys and register for Install Referrer\n\n\nInstant Apps can be rather confusing as there are many different manifests, but you want to find the Manifest that contains your \napplication\n tags. Make sure your Application class name is defined here, and then specify the Branch keys \ninside\n the \napplication\n element.\n\n\napplication\n\n        \nandroid:allowBackup=\ntrue\n\n        \nandroid:label=\n@string/app_name\n\n        \nandroid:theme=\n@style/AppTheme\n\n        \nandroid:supportsRtl=\ntrue\n\n        \nandroid:name=\n.MyApplication\n\n\n  \nmeta-data\n \nandroid:name=\nio.branch.sdk.TestMode\n \nandroid:value=\nfalse\n \n/\n \n!-- Set to true to use Branch_Test_Key --\n\n  \nmeta-data\n \nandroid:name=\nio.branch.sdk.BranchKey\n \nandroid:value=\nkey_live_my_live_key\n \n/\n\n  \nmeta-data\n \nandroid:name=\nio.branch.sdk.BranchKey.test\n \nandroid:value=\nkey_test_my_test_key\n \n/\n\n\n  \nreceiver\n \nandroid:name=\nio.branch.referral.InstallListener\n \nandroid:exported=\ntrue\n\n    \nintent-filter\n\n       \naction\n \nandroid:name=\ncom.android.vending.INSTALL_REFERRER\n \n/\n\n    \n/intent-filter\n\n  \n/receiver\n\n\n/application\n\n\n\n\n\nConfigure your Branch links as Android App Links\n\n\nThis guide presumes that you've already configured Branch for Android App Links in the past. If you haven't configured your full native app to use Branch as Android App Links, \nplease complete this guide\n which will correctly configure the dashboard and manifest.\n\n\nNow, you simply need to edit the above manifest and paste in the following snippet \ninside\n the \napplication\n element. Then you'll need to replace the \nxxxx\n with your own custom subdomain which will be visible on \nthe Branch link settings dashboard\n at the bottom of the page. If you're using a custom subdomain, you can find the advanced instructions in the above link regarding configuring Android App Links.\n\n\napplication\n\n  \n......\n\n\n  ......\n\n  \nintent-filter\n \nandroid:autoVerify=\ntrue\n\n      \naction\n \nandroid:name=\nandroid.intent.action.VIEW\n \n/\n\n      \ncategory\n \nandroid:name=\nandroid.intent.category.DEFAULT\n \n/\n\n      \ncategory\n \nandroid:name=\nandroid.intent.category.BROWSABLE\n \n/\n\n      \ndata\n \nandroid:scheme=\nhttps\n \nandroid:host=\nxxxx.app.link\n \n/\n\n      \ndata\n \nandroid:scheme=\nhttps\n \nandroid:host=\nxxxx-alternate.app.link\n \n/\n\n  \n/intent-filter\n\n\n\n/application\n\n\n\n\n\nRetrieve Branch deep link data\n\n\nAdd Branch initSession in Activities which are configured to open from a link click in order to receive the deep link params. This will return the deep link data from the referring link.\n\n\nprotected\n \nvoid\n \nonStart\n()\n \n{\n\n    \nsuper\n.\nonStart\n();\n\n    \nBranch\n.\ngetInstance\n().\ninitSession\n(\nnew\n \nBranch\n.\nBranchReferralInitListener\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonInitFinished\n(\nJSONObject\n \nreferringParams\n,\n \nBranchError\n \nerror\n)\n \n{\n\n            \nLog\n.\nd\n(\nBranch\n,\n \nonInitFinished() with deep link data: \n \n+\n \nreferringParams\n);\n\n        \n}\n\n    \n});\n\n\n}\n\n\n\n\n\nConfigure the deep linking from Instant App to your Full App\n\n\nNow, the user has arrived in your Instant App and you're ready to convert them to install your full native app. Don't worry, Branch as got your covered! We have overridden the default \nshowInstallPrompt\n with a method that auto configures the Google Play prompt with all of the deep link data you need to carry context through install. Additionally, we can provide you the full set of attribution on how many users convert through this prompt.\n\n\nBranch SDK provides convenient methods to check for app types and full app conversion. This eliminates the dependency on Google IA support SDK ('com.google.android.instantapp'). Here are some of the methods that makes life easy\n\n\n\n\nBranch#isInstantApp()\n\n\n\n\nThis convenience methods checks whether the current version of app running is Instant App or Full Android App to allow you convenience\n\n\n\n\nBranch#showInstallPrompt()\n\n\n\n\nThis methods shows an install prompt for the full Android app, allowing you an easy way to pass Branch referring deep data to the full app through the install process. Similar to how deferred deep linking works for Branch normally, the full app will receive the deep link params in the handle callback.\n\n\nThe below example shows how to create a custom Branch Universal Object, the associate it with the installation prompt that will be passed through to your full native Android app after the user installs.\n\n\nif\n \n(\nBranch\n.\nisInstantApp\n(\nthis\n))\n \n{\n\n  \nmyFullAppInstallButton\n.\nsetVisibility\n(\nView\n.\nVISIBLE\n);\n\n  \nmyFullAppInstallButton\n.\nsetOnClickListener\n(\nnew\n \nOnClickListener\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonClick\n(\nView\n \nv\n)\n \n{\n\n       \nBranchUniversalObject\n \nbranchUniversalObject\n \n=\n \nnew\n \nBranchUniversalObject\n()\n\n            \n.\nsetCanonicalIdentifier\n(\nitem/12345\n)\n\n            \n.\nsetTitle\n(\nMy Content Title\n)\n\n            \n.\nsetContentDescription\n(\nMy Content Description\n)\n\n            \n.\nsetContentImageUrl\n(\nhttps://example.com/mycontent-12345.png\n)\n\n            \n.\naddContentMetadata\n(\nproperty1\n,\n \nblue\n)\n\n            \n.\naddContentMetadata\n(\nproperty2\n,\n \nred\n);\n\n\n      \nBranch\n.\nshowInstallPrompt\n(\nmyActivity\n,\n \nactivity_ret_code\n,\n \nbranchUniversalObject\n);\n\n    \n}\n\n  \n});\n\n\n}\n \nelse\n \n{\n\n  \nmyFullAppInstallButton\n.\nsetVisibility\n(\nView\n.\nGONE\n);\n\n\n}\n\n\n\n\n\nTroubleshooting\n\n\nTest Instant Apps\n\n\nYou can create Branch links in \na million different ways\n, but to quickly test your Branch integration, head to the \nquick links section\n on our dashboard and create a link. If you configured deep linking via a specific key in the deep link data, make sure that you add it to your quick link to properly simulate a real live Branch link.", 
            "title": "Android Instant Apps"
        }, 
        {
            "location": "/pages/app-to-app/android-instant-apps/#overview", 
            "text": "At the 2017 Google IO, Google launched the public version of Instant Apps for developers to adopt and build on. Instant Apps are a way to load a partial section (or  split  as Google refers to them), without the user having to visit the Play Store and install your app. In effect, it's instant access to your native app. If you have been using a website as a fallback when your full Android app is not installed, an Instant App is an alternative. You'll have to choose between mobile web and your Instant App on Android so make sure you plan out your integration!  Branch has made it incredibly easy to start using your basic Branch links in your Instant Apps as shown below. The guide on this page will walk you through the full configuration process to enable Branch in your new Instant App.    Note  This guide is not about how to configure your Android app to be an Instant App. Please see  Google's documentation for detailed instructions  on how to do this. Come back to this guide when you're ready to enable Branch.", 
            "title": "Overview"
        }, 
        {
            "location": "/pages/app-to-app/android-instant-apps/#why-use-branch-for-your-instant-apps", 
            "text": "If you follow Google's guide, they'll have you integrate your own web links as Android App Links, that will trigger Instant Apps. What can Branch do for you then? First off, let me explain how Branch works with Instant Apps. Branch will act as a  new  web domain that you'll register for Android App Links in addition to your own web domain or as your only domain in the manifest. We act as your link.  Here's a list of the potential use cases for Branch links and Instant Apps:   Branch will host personalized web links for you since we provision a custom domain (yourapp.app.link or whitelabeled) for every app. If you don't have a website, this means that we can take care of all your Android App Links needs, automatically configuring and hosting the assetlinks.json file on your behalf.  If you have a popular website and have configured Android App Links, you likely don't want 100% of your web links triggering your Instant App. Your Instant App will only support a fraction of your full app functionality. You can configure your Instant App to only trigger on your Branch link domains and paths, then use the usage of Branch to control when users are linked to Instant Apps.  Branch can measure and attribute  clicks ,  installs  and custom conversion events back to the Branch tracking link for  all visits to your Instant App , which are visible on the dashboard.  You can use Branch links to deferred deep link from the Android Instant App to the full Android App. You'll likely build a feature that pushes users from the Instant App to the full Android app, and Branch can do its magic on this transition.  Branch can measure and attribute  clicks ,  installs  and custom conversion events inside your full native Android App for users who were referred from an Instant App, showing the conversion from click -  Instant App -  Full App on the dashboard.", 
            "title": "Why use Branch for your Instant Apps"
        }, 
        {
            "location": "/pages/app-to-app/android-instant-apps/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/pages/app-to-app/android-instant-apps/#integrating-branch-for-your-instant-app", 
            "text": "So you're convinced. Let's get started! If at any time, you need a real example, you can check out a  full demo application  on our Github. We've replicated our  original Android demo application  and modified it to support Android Instant Apps.", 
            "title": "Integrating Branch for your Instant App"
        }, 
        {
            "location": "/pages/app-to-app/android-instant-apps/#initialize-the-branch-sdk", 
            "text": "Head to your  core library project , where your Application class is defined and drop in the snippet of code to the onCreate() method as follows. If you plan on deep linking from your Android Instant App to your full Android app after its installed, you'll need to add the line  enablePlayStoreReferrer . This adds a delay to the initialization to wait for the Google Play Referrer, which can take up to a second.  public   void   onCreate ()   { \n   super . onCreate (); \n   // This is needed to deferred deep link from an Android Instant App to a full app \n   // It tells the Branch initialization to wait for the Google Play Referrer before proceeding. \n   Branch . enablePlayStoreReferrer ( 1000L ); \n\n   // Initialize the Branch SDK \n   Branch . getAutoInstance ( this );  }", 
            "title": "Initialize the Branch SDK"
        }, 
        {
            "location": "/pages/app-to-app/android-instant-apps/#add-your-branch-keys-and-register-for-install-referrer", 
            "text": "Instant Apps can be rather confusing as there are many different manifests, but you want to find the Manifest that contains your  application  tags. Make sure your Application class name is defined here, and then specify the Branch keys  inside  the  application  element.  application \n         android:allowBackup= true \n         android:label= @string/app_name \n         android:theme= @style/AppTheme \n         android:supportsRtl= true \n         android:name= .MyApplication \n\n   meta-data   android:name= io.branch.sdk.TestMode   android:value= false   /   !-- Set to true to use Branch_Test_Key -- \n   meta-data   android:name= io.branch.sdk.BranchKey   android:value= key_live_my_live_key   / \n   meta-data   android:name= io.branch.sdk.BranchKey.test   android:value= key_test_my_test_key   / \n\n   receiver   android:name= io.branch.referral.InstallListener   android:exported= true \n     intent-filter \n        action   android:name= com.android.vending.INSTALL_REFERRER   / \n     /intent-filter \n   /receiver  /application", 
            "title": "Add your Branch keys and register for Install Referrer"
        }, 
        {
            "location": "/pages/app-to-app/android-instant-apps/#configure-your-branch-links-as-android-app-links", 
            "text": "This guide presumes that you've already configured Branch for Android App Links in the past. If you haven't configured your full native app to use Branch as Android App Links,  please complete this guide  which will correctly configure the dashboard and manifest.  Now, you simply need to edit the above manifest and paste in the following snippet  inside  the  application  element. Then you'll need to replace the  xxxx  with your own custom subdomain which will be visible on  the Branch link settings dashboard  at the bottom of the page. If you're using a custom subdomain, you can find the advanced instructions in the above link regarding configuring Android App Links.  application \n   ...... \n\n  ......\n\n   intent-filter   android:autoVerify= true \n       action   android:name= android.intent.action.VIEW   / \n       category   android:name= android.intent.category.DEFAULT   / \n       category   android:name= android.intent.category.BROWSABLE   / \n       data   android:scheme= https   android:host= xxxx.app.link   / \n       data   android:scheme= https   android:host= xxxx-alternate.app.link   / \n   /intent-filter  /application", 
            "title": "Configure your Branch links as Android App Links"
        }, 
        {
            "location": "/pages/app-to-app/android-instant-apps/#retrieve-branch-deep-link-data", 
            "text": "Add Branch initSession in Activities which are configured to open from a link click in order to receive the deep link params. This will return the deep link data from the referring link.  protected   void   onStart ()   { \n     super . onStart (); \n     Branch . getInstance (). initSession ( new   Branch . BranchReferralInitListener ()   { \n         @Override \n         public   void   onInitFinished ( JSONObject   referringParams ,   BranchError   error )   { \n             Log . d ( Branch ,   onInitFinished() with deep link data:    +   referringParams ); \n         } \n     });  }", 
            "title": "Retrieve Branch deep link data"
        }, 
        {
            "location": "/pages/app-to-app/android-instant-apps/#configure-the-deep-linking-from-instant-app-to-your-full-app", 
            "text": "Now, the user has arrived in your Instant App and you're ready to convert them to install your full native app. Don't worry, Branch as got your covered! We have overridden the default  showInstallPrompt  with a method that auto configures the Google Play prompt with all of the deep link data you need to carry context through install. Additionally, we can provide you the full set of attribution on how many users convert through this prompt.  Branch SDK provides convenient methods to check for app types and full app conversion. This eliminates the dependency on Google IA support SDK ('com.google.android.instantapp'). Here are some of the methods that makes life easy   Branch#isInstantApp()   This convenience methods checks whether the current version of app running is Instant App or Full Android App to allow you convenience   Branch#showInstallPrompt()   This methods shows an install prompt for the full Android app, allowing you an easy way to pass Branch referring deep data to the full app through the install process. Similar to how deferred deep linking works for Branch normally, the full app will receive the deep link params in the handle callback.  The below example shows how to create a custom Branch Universal Object, the associate it with the installation prompt that will be passed through to your full native Android app after the user installs.  if   ( Branch . isInstantApp ( this ))   { \n   myFullAppInstallButton . setVisibility ( View . VISIBLE ); \n   myFullAppInstallButton . setOnClickListener ( new   OnClickListener ()   { \n     @Override \n     public   void   onClick ( View   v )   { \n        BranchUniversalObject   branchUniversalObject   =   new   BranchUniversalObject () \n             . setCanonicalIdentifier ( item/12345 ) \n             . setTitle ( My Content Title ) \n             . setContentDescription ( My Content Description ) \n             . setContentImageUrl ( https://example.com/mycontent-12345.png ) \n             . addContentMetadata ( property1 ,   blue ) \n             . addContentMetadata ( property2 ,   red ); \n\n       Branch . showInstallPrompt ( myActivity ,   activity_ret_code ,   branchUniversalObject ); \n     } \n   });  }   else   { \n   myFullAppInstallButton . setVisibility ( View . GONE );  }", 
            "title": "Configure the deep linking from Instant App to your Full App"
        }, 
        {
            "location": "/pages/app-to-app/android-instant-apps/#troubleshooting", 
            "text": "", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/pages/app-to-app/android-instant-apps/#test-instant-apps", 
            "text": "You can create Branch links in  a million different ways , but to quickly test your Branch integration, head to the  quick links section  on our dashboard and create a link. If you configured deep linking via a specific key in the deep link data, make sure that you add it to your quick link to properly simulate a real live Branch link.", 
            "title": "Test Instant Apps"
        }, 
        {
            "location": "/pages/app-to-app/imessage-apps/", 
            "text": "Overview\n\n\nWith iOS 10, Branch has \nadded support\n for extension type apps so that you can bundle the SDK into your iMessage app. Apple didn't build full deep linking support into extension apps, so unfortunately the use cases are limited to driving new installs for now. We'll wait patiently to observe updates over time\n\n\niMessage apps are now completely separate from your main App Store app, and should be treated as such. Thus, there is some common confusion that we wanted to clear up regarding how to use Branch with your iMessage app. Here's a list of best practices to ensure your integration is successful.\n\n\nSetup\n\n\nBest practices\n\n\nCreate a separate Branch app for the messages app\n\n\nWe highly recommend that you create a \nseparate\n Branch app via the dashboard for your iMessage app than your full iOS app. Why? Because there's no technical way to handle deep link routing elegantly between your core app and the messages app. Apple has not built support for this use case.\n\n\nConfigure one Branch app's settings to link to your messages app in the iMessage App Store, then configure another Branch app settings to link to your core app in the main App Store. This means you'll integrate the SDK into your messages app with a different Branch key than your main app.\n\n\nOnly use Branch for driving installs of messages apps\n\n\nApple did not build support for the use case where a user clicks a link and the messages app opens. Therefore, Branch cannot open up the existing, pre-installed messages app. Branch can only link to the messages app in the iMessage App Store, even when it's already installed.\n\n\nBecause of this, you should primarily use Branch for tracking installs and deep linking through install. Don't expect a high quality user experience if the app is already installed.\n\n\nMarket your messages app separately from your main app\n\n\nBecause there's no good way to intelligently route to the main App Store, iMessages App Store and existing app depending on the context, we recommend you market your messages app with different links from your main App Store app. So, message to a user you're going to link them to your messages app differently than when you're linking to the App Store app.\n\n\nConfiguring redirects\n\n\nIntroductory concept on messages redirects\n\n\nIf you've read the above, you know that the iMessage App Store is a completely different store than the main App Store. In order to link users to your app in the iMessage App Store, you simply need to append \n?app=messages\n to the link. You can try this on any iOS 10 phone with the links below:\n\n\n\n\niMessages App Store: \nhttps://itunes.apple.com/us/app/classic-mac/id1127542169?app=messages\n\n\nMain App Store: \nhttps://itunes.apple.com/us/app/classic-mac/id1127542169\n\n\n\n\nConfigure your Branch links\n\n\nFirst, create an entirely new app via the \nBranch dashboard\n. You can do this in the pull down selector that shows your app name in the top right section. Then head to the \nlink settings page\n and scroll to the iOS section to configure it as follows:\n\n\n\n\nEnsure you do the following:\n\n\n\n\nUncheck \u201cI have an iOS App\u201d\n\n\nDisable Universal Links\n\n\nPaste the App Store URL with \n?app=messages\n appended into the URL field\n\n\nClick Save\n\n\n\n\nYou're all set! All of your Branch links will correctly link to the iMessages App Store.\n\n\nTroubleshooting\n\n\nTracking installs\n\n\nTo track installs and personalize the first time user experience, you simply need to follow the instructions in the \nSDK integration guide\n for iMessage apps. You'll integrate the SDK just as you have for your main App Store app.", 
            "title": "iMessage Apps"
        }, 
        {
            "location": "/pages/app-to-app/imessage-apps/#overview", 
            "text": "With iOS 10, Branch has  added support  for extension type apps so that you can bundle the SDK into your iMessage app. Apple didn't build full deep linking support into extension apps, so unfortunately the use cases are limited to driving new installs for now. We'll wait patiently to observe updates over time  iMessage apps are now completely separate from your main App Store app, and should be treated as such. Thus, there is some common confusion that we wanted to clear up regarding how to use Branch with your iMessage app. Here's a list of best practices to ensure your integration is successful.", 
            "title": "Overview"
        }, 
        {
            "location": "/pages/app-to-app/imessage-apps/#setup", 
            "text": "", 
            "title": "Setup"
        }, 
        {
            "location": "/pages/app-to-app/imessage-apps/#best-practices", 
            "text": "", 
            "title": "Best practices"
        }, 
        {
            "location": "/pages/app-to-app/imessage-apps/#create-a-separate-branch-app-for-the-messages-app", 
            "text": "We highly recommend that you create a  separate  Branch app via the dashboard for your iMessage app than your full iOS app. Why? Because there's no technical way to handle deep link routing elegantly between your core app and the messages app. Apple has not built support for this use case.  Configure one Branch app's settings to link to your messages app in the iMessage App Store, then configure another Branch app settings to link to your core app in the main App Store. This means you'll integrate the SDK into your messages app with a different Branch key than your main app.", 
            "title": "Create a separate Branch app for the messages app"
        }, 
        {
            "location": "/pages/app-to-app/imessage-apps/#only-use-branch-for-driving-installs-of-messages-apps", 
            "text": "Apple did not build support for the use case where a user clicks a link and the messages app opens. Therefore, Branch cannot open up the existing, pre-installed messages app. Branch can only link to the messages app in the iMessage App Store, even when it's already installed.  Because of this, you should primarily use Branch for tracking installs and deep linking through install. Don't expect a high quality user experience if the app is already installed.", 
            "title": "Only use Branch for driving installs of messages apps"
        }, 
        {
            "location": "/pages/app-to-app/imessage-apps/#market-your-messages-app-separately-from-your-main-app", 
            "text": "Because there's no good way to intelligently route to the main App Store, iMessages App Store and existing app depending on the context, we recommend you market your messages app with different links from your main App Store app. So, message to a user you're going to link them to your messages app differently than when you're linking to the App Store app.", 
            "title": "Market your messages app separately from your main app"
        }, 
        {
            "location": "/pages/app-to-app/imessage-apps/#configuring-redirects", 
            "text": "", 
            "title": "Configuring redirects"
        }, 
        {
            "location": "/pages/app-to-app/imessage-apps/#introductory-concept-on-messages-redirects", 
            "text": "If you've read the above, you know that the iMessage App Store is a completely different store than the main App Store. In order to link users to your app in the iMessage App Store, you simply need to append  ?app=messages  to the link. You can try this on any iOS 10 phone with the links below:   iMessages App Store:  https://itunes.apple.com/us/app/classic-mac/id1127542169?app=messages  Main App Store:  https://itunes.apple.com/us/app/classic-mac/id1127542169", 
            "title": "Introductory concept on messages redirects"
        }, 
        {
            "location": "/pages/app-to-app/imessage-apps/#configure-your-branch-links", 
            "text": "First, create an entirely new app via the  Branch dashboard . You can do this in the pull down selector that shows your app name in the top right section. Then head to the  link settings page  and scroll to the iOS section to configure it as follows:   Ensure you do the following:   Uncheck \u201cI have an iOS App\u201d  Disable Universal Links  Paste the App Store URL with  ?app=messages  appended into the URL field  Click Save   You're all set! All of your Branch links will correctly link to the iMessages App Store.", 
            "title": "Configure your Branch links"
        }, 
        {
            "location": "/pages/app-to-app/imessage-apps/#troubleshooting", 
            "text": "", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/pages/app-to-app/imessage-apps/#tracking-installs", 
            "text": "To track installs and personalize the first time user experience, you simply need to follow the instructions in the  SDK integration guide  for iMessage apps. You'll integrate the SDK just as you have for your main App Store app.", 
            "title": "Tracking installs"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/", 
            "text": "Overview\n\n\nTo help you grow your app, Facebook offers a feature called App Invites as an alternative to sharing on the Facebook wall. It is a private, friend-to-friend invite, similar to a direct SMS message.\n\n\n\n\nSet Up\n\n\n\n\nBefore you get started\n\n\nTo use Facebook App Invites, you need to integrate both the Branch and Facebook SDKs.\n\n\n\n\nAuthenticate Branch with Facebook\n\n\nIn order for Branch to work with Facebook App Invites, you must first allow Branch to access your Facebook app information.\n\n\n\n\nLog in to Facebook, navigate to \ndevelopers.facebook.com/apps\n and choose your app. You'll need the \nApp ID\n and \nApp Secret\n.{% image src='/img/pages/features/facebook-app-invites/fb_auth_fb.png' three-quarters center alt='Facebook Auth' %}\n\n\nOn the Branch Dashboard, go to \nLink Settings\n and scroll down to 'Authenticate for Facebook Install Ads'. Enter your \nApp ID\n and \nApp Secret\n from Facebook.{% image src='/img/pages/features/facebook-app-invites/fb_auth_branch.png' three-quarters center alt='Facebook Auth' %}\n\n\nPress 'Authenticate'.\n\n\n\n\nInsert Branch link into App Invite\n\n\nEvery Branch link automatically handles both \nfresh installs\n for new users and \nopens\n for users who already have the app. You simply need to insert it into the Facebook App Invite dialog.\n\n\n\n\n\nIn Objectice C\n\n#import \nBranchUniversalObject.h\n\n\n#import \nBranchLinkProperties.h\n\n\n#import \nFBSDKShareKit/FBSDKShareKit.h\n\n\n\n\nIn Swift\n\nIn\n \nthe\n \nBridging\n \nHeader\n,\n \nadd\n \nthe\n \nfollowing\n:\n\n\n\n{\n%\n \nhighlight\n \nobjective\n-\nc\n \n%\n}\n\n\n#import \nBranch.h\n\n\n#import \nBranchUniversalObject.h\n\n\n#import \nBranchLinkProperties.h\n\n\n#import \nBranchConstants.h\n\n\n#import \nFBSDKShareKit/FBSDKShareKit.h\n\n\n\n\nCreate a \nBranchUniversalObject\n containing details about the user who is initiating the App Invite.\n\n\nBranchUniversalObject\n \n*\nbranchUniversalObject\n \n=\n \n[[\nBranchUniversalObject\n \nalloc\n]\n \ninitWithCanonicalIdentifier\n:\n@\nuser/12345\n];\n\n\nbranchUniversalObject\n.\ntitle\n \n=\n \n@\nCheck out my app!\n;\n\n\nbranchUniversalObject\n.\ncontentDescription\n \n=\n \n@\nYour friend Zack has invited you to check out my app\n;\n\n\nbranchUniversalObject\n.\nimageUrl\n \n=\n \n@\nhttps://example.com/monster-pic-12345.png\n;\n\n\n[\nbranchUniversalObject\n \naddMetadataKey\n:\n@\nuserId\n \nvalue\n:\n@\n12345\n];\n\n\n[\nbranchUniversalObject\n \naddMetadataKey\n:\n@\nuserName\n \nvalue\n:\n@\nZack Zuckerberg\n];\n\n\n\n\n\nlet\n \nbranchUniversalObject\n:\n \nBranchUniversalObject\n \n=\n \nBranchUniversalObject\n(\ncanonicalIdentifier\n:\n \nuser/12345\n)\n\n\nbranchUniversalObject\n.\ntitle\n \n=\n \nCheck out my app!\n\n\nbranchUniversalObject\n.\ncontentDescription\n \n=\n \nYour friend Zack has invited you to check out my app\n\n\nbranchUniversalObject\n.\nimageUrl\n \n=\n \nhttps://example.com/josh-profile-pic-12345.png\n\n\nbranchUniversalObject\n.\naddMetadataKey\n(\nuserId\n,\n \nvalue\n:\n \n12345\n)\n\n\nbranchUniversalObject\n.\naddMetadataKey\n(\nuserName\n,\n \nvalue\n:\n \nZack Zuckerberg\n)\n\n\n\n\n\nThen define the properties of the link. In the example, our properties reflect that this is an App Invite shared via Facebook:\n\n\nBranchLinkProperties\n*\n \nlinkProperties\n \n=\n \n[[\nBranchLinkProperties\n \nalloc\n]\n \ninit\n];\n\n\nlinkProperties\n.\nfeature\n \n=\n \n@\nApp Invite\n;\n\n\nlinkProperties\n.\nchannel\n \n=\n \n@\nFacebook\n;\n\n\n\n\n\nlet\n \nlinkProperties\n:\n \nBranchLinkProperties\n \n=\n \nBranchLinkProperties\n()\n\n\nlinkProperties\n.\nfeature\n \n=\n \nApp Invite\n\n\nlinkProperties\n.\nchannel\n \n=\n \nFacebook\n\n\n\n\n\nLastly, trigger the invite!\n\n\n[\nbranchUniversalObject\n \ngetShortUrlWithLinkProperties\n:\nlinkProperties\n \nandCallback\n:\n^\n(\nNSString\n*\n \nurl\n,\n \nNSError\n*\n \nerror\n)\n \n{\n\n    \nif\n \n(\n!\nerror\n \n \nurl\n)\n \n{\n\n        \nFBSDKAppInviteDialog\n*\n \ninviteDialog\n \n=\n \n[\nFBSDKAppInviteDialog\n \nnew\n];\n\n        \nif\n \n([\ninviteDialog\n \ncanShow\n])\n \n{\n\n            \ninviteDialog\n.\ncontent\n \n=\n[[\nFBSDKAppInviteContent\n \nalloc\n]\n \ninit\n];\n\n            \ninviteDialog\n.\ncontent\n.\nappLinkURL\n \n=\n \n[\nNSURL\n \nURLWithString\n:\nurl\n];\n\n            \ninviteDialog\n.\ncontent\n.\nappInvitePreviewImageURL\n \n=\n \n[\nNSURL\n \nURLWithString\n:\n@\nhttps://s3-us-west-1.amazonaws.com/host/zackspic.png\n];\n\n\n            \n[\ninviteDialog\n \nshow\n];\n\n        \n}\n\n    \n}\n\n\n}];\n\n\n\n\n\nbranchUniversalObject\n.\ngetShortUrl\n(\nwith\n:\n \nlinkProperties\n)\n \n{\n \n(\nurl\n,\n \nerror\n)\n \nin\n\n    \nif\n \n(\nerror\n \n==\n \nnil\n)\n \n{\n\n        \nvar\n \ninviteContent\n:\n \nFBSDKAppInviteContent\n \n=\n \nFBSDKAppInviteContent\n()\n\n\n        \ninviteContent\n.\nappLinkURL\n \n=\n \nNSURL\n(\nString\n:\n \nurl\n)\n!\n\n\n        \ninviteDialog\n.\ncontent\n \n=\n \ninviteContent\n\n        \ninviteDialog\n.\ndelegate\n \n=\n \nself\n\n        \ninviteDialog\n.\nshow\n()\n\n    \n}\n\n\n}\n\n\n\n\n\nThen use the Facebook SDK's \nappInviteDialog\n method (\ndocumentation here\n) to show the App Invite dialog:\n\n\n// add these methods in if you extend your sharing view controller with \nFBSDKAppInviteDialogDelegate\n\n\n-\n \n(\nvoid\n)\nappInviteDialog:\n(\nFBSDKAppInviteDialog\n*\n)\n \nappInviteDialog\n\n \ndidCompleteWithResults:\n(\nNSDictionary\n*\n)\n \nresults\n \n{\n\n    \n[[\nBranch\n \ngetInstance\n]\n \nuserCompletedAction\n:\nBNCShareCompletedEvent\n];\n\n    \nNSLog\n(\n@\napp invite dialog did complete\n);\n\n\n}\n\n\n\n-\n \n(\nvoid\n)\nappInviteDialog:\n(\nFBSDKAppInviteDialog\n*\n)\n \nappInviteDialog\n\n       \ndidFailWithError:\n(\nNSError\n*\n)\n \nerror\n \n{\n\n    \nNSLog\n(\n@\napp invite dialog did fail\n);\n\n\n}\n\n\n\n\n\nfunc\n \nappInviteDialog\n(\nappInviteDialog\n:\n \nFBSDKAppInviteDialog\n!,\n \ndidCompleteWithResults\n \nresults\n:\n \n[\nNSObject\n \n:\n \nAnyObject\n]\n!\n)\n \n{\n\n    \nprint\n(\nComplete invite without error\n)\n\n\n}\n\n\n\nfunc\n \nappInviteDialog\n(\nappInviteDialog\n:\n \nFBSDKAppInviteDialog\n!,\n \ndidFailWithError\n \nerror\n:\n \nNSError\n!)\n \n{\n\n    \nNSLog\n(\nError in invite \n\\(\nerror\n)\n)\n\n\n}\n\n\n\n\n\n\n\n\n\nCreate a \nBranchUniversalObject\n containing details about the user who is initiating the App Invite.\n\n\n \nBranchUniversalObject\n \nbranchUniversalObject\n \n=\n \nnew\n \nBranchUniversalObject\n()\n\n                \n.\nsetCanonicalIdentifier\n(\nuser/12345\n)\n\n                \n.\nsetTitle\n(\nCheck out my app!\n)\n\n                \n.\nsetContentDescription\n(\nYour friend Zack has invited you to check out my app!\n)\n\n                \n.\nsetContentImageUrl\n(\nhttps://example.com/monster-pic-12345.png\n)\n\n                \n.\naddContentMetadata\n(\nuserId\n,\n \n12345\n)\n\n                \n.\naddContentMetadata\n(\nuserName\n,\n \nZack Zuckerberg\n);\n\n\n\n\n\nThen define the properties of the link. In the example, our properties reflect that this is an App Invite shared via Facebook:\n\n\nLinkProperties\n \nlinkProperties\n \n=\n \nnew\n \nLinkProperties\n()\n\n               \n.\nsetChannel\n(\nFacebook\n)\n\n               \n.\nsetFeature\n(\nApp Invite\n);\n\n\n\n\n\nThen, create the Branch link and passes it to the Facebook SDK's \nAppInviteDialog\n method (\ndocumentation here\n) to show the App Invite dialog:\n\n\nbranchUniversalObject\n.\ngenerateShortUrl\n(\nthis\n,\n \nlinkProperties\n,\n \nnew\n \nBranchLinkCreateListener\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonLinkCreate\n(\nString\n \nurl\n,\n \nBranchError\n \nerror\n)\n \n{\n\n        \nif\n \n(\nerror\n \n==\n \nnull\n \n \nAppInviteDialog\n.\ncanShow\n())\n \n{\n\n            \nAppInviteContent\n \ncontent\n \n=\n \nnew\n \nAppInviteContent\n.\nBuilder\n()\n\n                        \n.\nsetApplinkUrl\n(\nurl\n)\n\n                        \n.\nsetPreviewImageUrl\n(\nhttps://s3-us-west-1.amazonaws.com/host/zackspic.png\n)\n\n                        \n.\nbuild\n();\n\n            \nAppInviteDialog\n.\nshow\n(\nthis\n,\n \ncontent\n);\n\n        \n}\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\nView Data\n\n\nThe \nQuick Links page\n on the Branch dashboard shows the performance of each individual link. You can find your link listed in the table with a quick summary of the \ntotal\n clicks and installs.\n\n\n\n\nWarning\n\n\nFacebook prevents Branch from measuring the number of clicks for App Invites, so all click counts will be inaccurate.\n\n\n\n\n\n\nTo view more details stats, click the \nsmall button that looks like a bar chart\n on the far right. Note that these stats are \nlimited to the date range\n at the top. You can expand the range if you'd like.\n\n\n\n\nAdvanced\n\n\nShow personalized welcome screen\n\n\nSince you used a Branch link for the URL in the App Invite, you can use Branch to determine if a new user came from an existing app user, and show a personalized welcome.\n\n\n\n\n\n\n\nThen modify your \nAppDelegate.m\n or \nAppDelegate.swift\n file to handle the incoming links:\n\n\n-\n \n(\nBOOL\n)\napplication:\n(\nUIApplication\n \n*\n)\napplication\n \ndidFinishLaunchingWithOptions:\n(\nNSDictionary\n \n*\n)\nlaunchOptions\n\n\n{\n\n    \n[[\nBranch\n \ngetInstance\n]\n \ninitSessionWithLaunchOptions\n:\nlaunchOptions\n\n                            \nandRegisterDeepLinkHandler\n:\n^\n(\nNSDictionary\n \n*\nparams\n,\n \nNSError\n \n*\nerror\n)\n \n{\n\n        \nif\n \n(\n!\nerror\n \n \nparams\n)\n \n{\n\n            \nif\n \n([[\nparams\n \nobjectForKey\n:\n@\n+clicked_branch_link\n]\n \nboolValue\n])\n \n{\n\n                \n// show personal welcome\n\n            \n}\n\n        \n}\n\n    \n}];\n\n\n    \n[[\nFBSDKApplicationDelegate\n \nsharedInstance\n]\n \napplication\n:\napplication\n\n                                    \ndidFinishLaunchingWithOptions\n:\nlaunchOptions\n];\n\n\n    \nreturn\n \nYES\n;\n\n\n}\n\n\n\n\n\nfunc\n \napplication\n(\n_\n \napplication\n:\n \nUIApplication\n,\n \ndidFinishLaunchingWithOptions\n \nlaunchOptions\n:\n \n[\nUIApplicationLaunchOptionsKey\n:\n \nAny\n]?)\n \n-\n \nBool\n \n{\n\n    \nbranch\n.\ninitSession\n(\nlaunchOptions\n:\n \nlaunchOptions\n,\n \nautomaticallyDisplayDeepLinkController\n:\n \ntrue\n,\n \ndeepLinkHandler\n:\n \n{\n \nparams\n,\n \nerror\n \nin\n\n        \nif\n \nerror\n \n==\n \nnil\n,\n \nlet\n \nparams\n \n=\n \noptParams\n \n{\n\n            \nif\n \n(\nparams\n[\n+clicked_branch_link\n])\n \n{\n\n                \nprint\n(\nnew session was referred by %@\n,\n \nparams\n[\nreferring_user_name\n])\n\n                \n// show personal welcome view controller\n\n            \n}\n\n        \n}\n\n    \n})\n\n\n    \nlet\n \npermissions\n \n=\n \n[\npublic_profile\n,\n \nuser_friends\n,\n \npublish_actions\n]\n\n    \nFBSession\n.\nopenActiveSessionWithPublishPermissions\n(\npermissions\n,\n \ndefaultAudience\n:\n \nFBSessionDefaultAudience\n.\nEveryone\n,\n \nallowLoginUI\n:\n \ntrue\n)\n\n\n    \nreturn\n \ntrue\n\n\n}\n\n\n\n\n\nTo handle other cases than deferred deep links, make sure you follow the instructions on the full SDK integration guide.\n\n\nIf you're working in Android, configure the deep link router that's passed to initSession to handle the case where Branch indicates the session was initialized from a link click.\n\n\n@Override\n\n\nprotected\n \nvoid\n \nonStart\n()\n \n{\n\n    \nsuper\n.\nonStart\n();\n\n    \nBranch\n \nbranch\n \n=\n \nBranch\n.\ngetInstance\n(\ngetApplicationContext\n());\n\n    \nbranch\n.\ninitSession\n(\nnew\n \nBranchReferralInitListener\n(){\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonInitFinished\n(\nJSONObject\n \nreferringParams\n,\n \nBranchError\n \nerror\n)\n \n{\n\n            \nif\n \n(\nreferringParams\n.\ngetBoolean\n(\n+clicked_branch_link\n))\n \n{\n\n                \nLog\n.\ni\n(\nMyApp\n,\n \nnew session was referred by \n \n+\n \nreferringParams\n.\ngetString\n(\nreferring_user_name\n));\n\n                \n// show personal welcome view controller\n\n            \n}\n\n        \n}\n\n    \n},\n \nthis\n.\ngetIntent\n().\ngetData\n(),\n \nthis\n);\n\n\n}\n\n\n\n\n\n\n\nInside the Activity you want to display, you'll need to hook into the \nonNewIntent\n method specified inside the Activity lifecycle and set the intent. This is required for conformity with Facebook's AppLinks.\n\n\nVerify that the activity you're implementing has \nlaunchMode\n set to \nsingleTask\n inside the Manifest declaration.\n\n\nOnce that's done, go to said Activity and do something like the following:\n\n\n\n\n@Override\n\n\npublic\n \nvoid\n \nonNewIntent\n(\nIntent\n \nintent\n)\n \n{\n\n    \nthis\n.\nsetIntent\n(\nintent\n);\n\n\n}\n\n\n\n\n\n\nSupport\n\n\nIssues reading Facebook App Links\n\n\nIf Facebook is having trouble reading the AppLinks from the Branch link, you might see this message while trying to test out the flow. This means that there is something corrupted in the OG tags causing Facebook to not parse it.\n\n\n\n\nRe-scrape OG tags\n\n\nYou can test the OG tags using the \nOG tag tester tool\n provided by Facebook:\n\n\n\n\nPaste the Branch Link into the Input URL box.\n\n\nClick on the Show existing scrape information button.\n\n\nExamine errors regarding App Links from the output window.\n\n\nClick on the Fetch New Scrape Information button. This last step typically resolves this problem if you are certain that your Branch Link Settings are correct.\n\n\n\n\n\n\nNote\n\n\n\n\nYou can further automate the rescraping process by using this command after you create a new link and before you use it for any ads:\n\n\ncurl --insecure \"https://graph.facebook.com/?id=[YOUR-URL-TO-SCRAPE]\nscrape=true\"\n\n\nContinued OG Problems\n\n\n\n\nExamine your \nLink Settings\n and ensure that for all platforms (for which an app is available), that a URI scheme and a link to the app in the Play/App Store is configured. If you are using a Custom URL for your iOS Redirect, then you need to append \n?id[10-digit App Store ID]\n to the URL. This is necessary in order to fully generate the App Links and OG tags that the Facebook scraper expects to find.\n\n\nFor example, if your App Store URL is \nhttps://itunes.apple.com/us/app/my-app-name/id1234567890\n, then your Custom URL value should be \nhttps://example.com?id1234567890\n\n\n\n\n\n\nIf errors from the output window pertain to OG tags i.e. missing title, description etc. then examine link OG tags by appending \n?debug=true\n as described on the \nIntegration Testing page\n.\n\n\nIf you haven't set OG tags on a per link level, then please check your Dashboard's global Social Media Display Customization settings from the \nLink Settings\n page.\n\n\n\n\nKnown issue with App Restrictions\n\n\nA bug exists within the Facebook system that prevents App Links from being read by the robot if you change any of these values from the defaults in your Advanced Facebook App Settings tab. Please make sure the following values are set:\n\n\n\n\nContains Alcohol is set to \nNo\n\n\nAge Restriction is set to \nAnyone (13+)\n\n\nSocial Discovery is set to \nYes\n\n\nCountry Restricted is set to \nNo\n\n\n\n\nIt has to look like this \nexactly\n:\n\n\n\nIP Whitelist\n\n\nBecause Branch has a large distribution of API servers that will be making requests to Facebook on behalf of your app, you cannot have an IP whitelist in your \nFacebook advanced settings\n and still have this integration work. Please remove any IPs from this setting if they are present.\n\n\nFacebook Authentication Issues\n\n\nIf you are having trouble authenticating with Facebook, there are a few things you can check.\n\n\nCheck App ID and App Secret\n\n\nBe sure you have the correct App ID and App Secret. This is the number one source of issues.\n\n\nEmbedded App Secret\n\n\nIf you have entered the correct App ID and Secret but are still getting issues, it may be related to how you are using your Secret. Visit the Settings \n Advanced page on Facebook and check that you don't have the toggle enabled for \"Is your App Secret embedded?\" You will only have this option if you have enabled \"Native or desktop app?\" on this page.\n\n\nIf you have enabled \"Native or desktop app\", then your advanced options should appear like the following:", 
            "title": "Facebook App Invites"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#overview", 
            "text": "To help you grow your app, Facebook offers a feature called App Invites as an alternative to sharing on the Facebook wall. It is a private, friend-to-friend invite, similar to a direct SMS message.", 
            "title": "Overview"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#set-up", 
            "text": "Before you get started  To use Facebook App Invites, you need to integrate both the Branch and Facebook SDKs.", 
            "title": "Set Up"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#authenticate-branch-with-facebook", 
            "text": "In order for Branch to work with Facebook App Invites, you must first allow Branch to access your Facebook app information.   Log in to Facebook, navigate to  developers.facebook.com/apps  and choose your app. You'll need the  App ID  and  App Secret .{% image src='/img/pages/features/facebook-app-invites/fb_auth_fb.png' three-quarters center alt='Facebook Auth' %}  On the Branch Dashboard, go to  Link Settings  and scroll down to 'Authenticate for Facebook Install Ads'. Enter your  App ID  and  App Secret  from Facebook.{% image src='/img/pages/features/facebook-app-invites/fb_auth_branch.png' three-quarters center alt='Facebook Auth' %}  Press 'Authenticate'.", 
            "title": "Authenticate Branch with Facebook"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#insert-branch-link-into-app-invite", 
            "text": "Every Branch link automatically handles both  fresh installs  for new users and  opens  for users who already have the app. You simply need to insert it into the Facebook App Invite dialog.   In Objectice C #import  BranchUniversalObject.h  #import  BranchLinkProperties.h  #import  FBSDKShareKit/FBSDKShareKit.h   In Swift In   the   Bridging   Header ,   add   the   following :  { %   highlight   objective - c   % }  #import  Branch.h  #import  BranchUniversalObject.h  #import  BranchLinkProperties.h  #import  BranchConstants.h  #import  FBSDKShareKit/FBSDKShareKit.h   Create a  BranchUniversalObject  containing details about the user who is initiating the App Invite.  BranchUniversalObject   * branchUniversalObject   =   [[ BranchUniversalObject   alloc ]   initWithCanonicalIdentifier : @ user/12345 ];  branchUniversalObject . title   =   @ Check out my app! ;  branchUniversalObject . contentDescription   =   @ Your friend Zack has invited you to check out my app ;  branchUniversalObject . imageUrl   =   @ https://example.com/monster-pic-12345.png ;  [ branchUniversalObject   addMetadataKey : @ userId   value : @ 12345 ];  [ branchUniversalObject   addMetadataKey : @ userName   value : @ Zack Zuckerberg ];   let   branchUniversalObject :   BranchUniversalObject   =   BranchUniversalObject ( canonicalIdentifier :   user/12345 )  branchUniversalObject . title   =   Check out my app!  branchUniversalObject . contentDescription   =   Your friend Zack has invited you to check out my app  branchUniversalObject . imageUrl   =   https://example.com/josh-profile-pic-12345.png  branchUniversalObject . addMetadataKey ( userId ,   value :   12345 )  branchUniversalObject . addMetadataKey ( userName ,   value :   Zack Zuckerberg )   Then define the properties of the link. In the example, our properties reflect that this is an App Invite shared via Facebook:  BranchLinkProperties *   linkProperties   =   [[ BranchLinkProperties   alloc ]   init ];  linkProperties . feature   =   @ App Invite ;  linkProperties . channel   =   @ Facebook ;   let   linkProperties :   BranchLinkProperties   =   BranchLinkProperties ()  linkProperties . feature   =   App Invite  linkProperties . channel   =   Facebook   Lastly, trigger the invite!  [ branchUniversalObject   getShortUrlWithLinkProperties : linkProperties   andCallback : ^ ( NSString *   url ,   NSError *   error )   { \n     if   ( ! error     url )   { \n         FBSDKAppInviteDialog *   inviteDialog   =   [ FBSDKAppInviteDialog   new ]; \n         if   ([ inviteDialog   canShow ])   { \n             inviteDialog . content   = [[ FBSDKAppInviteContent   alloc ]   init ]; \n             inviteDialog . content . appLinkURL   =   [ NSURL   URLWithString : url ]; \n             inviteDialog . content . appInvitePreviewImageURL   =   [ NSURL   URLWithString : @ https://s3-us-west-1.amazonaws.com/host/zackspic.png ]; \n\n             [ inviteDialog   show ]; \n         } \n     }  }];   branchUniversalObject . getShortUrl ( with :   linkProperties )   {   ( url ,   error )   in \n     if   ( error   ==   nil )   { \n         var   inviteContent :   FBSDKAppInviteContent   =   FBSDKAppInviteContent () \n\n         inviteContent . appLinkURL   =   NSURL ( String :   url ) ! \n\n         inviteDialog . content   =   inviteContent \n         inviteDialog . delegate   =   self \n         inviteDialog . show () \n     }  }   Then use the Facebook SDK's  appInviteDialog  method ( documentation here ) to show the App Invite dialog:  // add these methods in if you extend your sharing view controller with  FBSDKAppInviteDialogDelegate  -   ( void ) appInviteDialog: ( FBSDKAppInviteDialog * )   appInviteDialog \n  didCompleteWithResults: ( NSDictionary * )   results   { \n     [[ Branch   getInstance ]   userCompletedAction : BNCShareCompletedEvent ]; \n     NSLog ( @ app invite dialog did complete );  }  -   ( void ) appInviteDialog: ( FBSDKAppInviteDialog * )   appInviteDialog \n        didFailWithError: ( NSError * )   error   { \n     NSLog ( @ app invite dialog did fail );  }   func   appInviteDialog ( appInviteDialog :   FBSDKAppInviteDialog !,   didCompleteWithResults   results :   [ NSObject   :   AnyObject ] ! )   { \n     print ( Complete invite without error )  }  func   appInviteDialog ( appInviteDialog :   FBSDKAppInviteDialog !,   didFailWithError   error :   NSError !)   { \n     NSLog ( Error in invite  \\( error ) )  }     Create a  BranchUniversalObject  containing details about the user who is initiating the App Invite.    BranchUniversalObject   branchUniversalObject   =   new   BranchUniversalObject () \n                 . setCanonicalIdentifier ( user/12345 ) \n                 . setTitle ( Check out my app! ) \n                 . setContentDescription ( Your friend Zack has invited you to check out my app! ) \n                 . setContentImageUrl ( https://example.com/monster-pic-12345.png ) \n                 . addContentMetadata ( userId ,   12345 ) \n                 . addContentMetadata ( userName ,   Zack Zuckerberg );   Then define the properties of the link. In the example, our properties reflect that this is an App Invite shared via Facebook:  LinkProperties   linkProperties   =   new   LinkProperties () \n                . setChannel ( Facebook ) \n                . setFeature ( App Invite );   Then, create the Branch link and passes it to the Facebook SDK's  AppInviteDialog  method ( documentation here ) to show the App Invite dialog:  branchUniversalObject . generateShortUrl ( this ,   linkProperties ,   new   BranchLinkCreateListener ()   { \n     @Override \n     public   void   onLinkCreate ( String   url ,   BranchError   error )   { \n         if   ( error   ==   null     AppInviteDialog . canShow ())   { \n             AppInviteContent   content   =   new   AppInviteContent . Builder () \n                         . setApplinkUrl ( url ) \n                         . setPreviewImageUrl ( https://s3-us-west-1.amazonaws.com/host/zackspic.png ) \n                         . build (); \n             AppInviteDialog . show ( this ,   content ); \n         } \n     }  });", 
            "title": "Insert Branch link into App Invite"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#view-data", 
            "text": "The  Quick Links page  on the Branch dashboard shows the performance of each individual link. You can find your link listed in the table with a quick summary of the  total  clicks and installs.   Warning  Facebook prevents Branch from measuring the number of clicks for App Invites, so all click counts will be inaccurate.    To view more details stats, click the  small button that looks like a bar chart  on the far right. Note that these stats are  limited to the date range  at the top. You can expand the range if you'd like.", 
            "title": "View Data"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#advanced", 
            "text": "", 
            "title": "Advanced"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#show-personalized-welcome-screen", 
            "text": "Since you used a Branch link for the URL in the App Invite, you can use Branch to determine if a new user came from an existing app user, and show a personalized welcome.    Then modify your  AppDelegate.m  or  AppDelegate.swift  file to handle the incoming links:  -   ( BOOL ) application: ( UIApplication   * ) application   didFinishLaunchingWithOptions: ( NSDictionary   * ) launchOptions  { \n     [[ Branch   getInstance ]   initSessionWithLaunchOptions : launchOptions \n                             andRegisterDeepLinkHandler : ^ ( NSDictionary   * params ,   NSError   * error )   { \n         if   ( ! error     params )   { \n             if   ([[ params   objectForKey : @ +clicked_branch_link ]   boolValue ])   { \n                 // show personal welcome \n             } \n         } \n     }]; \n\n     [[ FBSDKApplicationDelegate   sharedInstance ]   application : application \n                                     didFinishLaunchingWithOptions : launchOptions ]; \n\n     return   YES ;  }   func   application ( _   application :   UIApplication ,   didFinishLaunchingWithOptions   launchOptions :   [ UIApplicationLaunchOptionsKey :   Any ]?)   -   Bool   { \n     branch . initSession ( launchOptions :   launchOptions ,   automaticallyDisplayDeepLinkController :   true ,   deepLinkHandler :   {   params ,   error   in \n         if   error   ==   nil ,   let   params   =   optParams   { \n             if   ( params [ +clicked_branch_link ])   { \n                 print ( new session was referred by %@ ,   params [ referring_user_name ]) \n                 // show personal welcome view controller \n             } \n         } \n     }) \n\n     let   permissions   =   [ public_profile ,   user_friends ,   publish_actions ] \n     FBSession . openActiveSessionWithPublishPermissions ( permissions ,   defaultAudience :   FBSessionDefaultAudience . Everyone ,   allowLoginUI :   true ) \n\n     return   true  }   To handle other cases than deferred deep links, make sure you follow the instructions on the full SDK integration guide.  If you're working in Android, configure the deep link router that's passed to initSession to handle the case where Branch indicates the session was initialized from a link click.  @Override  protected   void   onStart ()   { \n     super . onStart (); \n     Branch   branch   =   Branch . getInstance ( getApplicationContext ()); \n     branch . initSession ( new   BranchReferralInitListener (){ \n         @Override \n         public   void   onInitFinished ( JSONObject   referringParams ,   BranchError   error )   { \n             if   ( referringParams . getBoolean ( +clicked_branch_link ))   { \n                 Log . i ( MyApp ,   new session was referred by    +   referringParams . getString ( referring_user_name )); \n                 // show personal welcome view controller \n             } \n         } \n     },   this . getIntent (). getData (),   this );  }    Inside the Activity you want to display, you'll need to hook into the  onNewIntent  method specified inside the Activity lifecycle and set the intent. This is required for conformity with Facebook's AppLinks.  Verify that the activity you're implementing has  launchMode  set to  singleTask  inside the Manifest declaration.  Once that's done, go to said Activity and do something like the following:   @Override  public   void   onNewIntent ( Intent   intent )   { \n     this . setIntent ( intent );  }", 
            "title": "Show personalized welcome screen"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#support", 
            "text": "", 
            "title": "Support"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#issues-reading-facebook-app-links", 
            "text": "If Facebook is having trouble reading the AppLinks from the Branch link, you might see this message while trying to test out the flow. This means that there is something corrupted in the OG tags causing Facebook to not parse it.", 
            "title": "Issues reading Facebook App Links"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#re-scrape-og-tags", 
            "text": "You can test the OG tags using the  OG tag tester tool  provided by Facebook:   Paste the Branch Link into the Input URL box.  Click on the Show existing scrape information button.  Examine errors regarding App Links from the output window.  Click on the Fetch New Scrape Information button. This last step typically resolves this problem if you are certain that your Branch Link Settings are correct.    Note   You can further automate the rescraping process by using this command after you create a new link and before you use it for any ads:  curl --insecure \"https://graph.facebook.com/?id=[YOUR-URL-TO-SCRAPE] scrape=true\"", 
            "title": "Re-scrape OG tags"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#continued-og-problems", 
            "text": "Examine your  Link Settings  and ensure that for all platforms (for which an app is available), that a URI scheme and a link to the app in the Play/App Store is configured. If you are using a Custom URL for your iOS Redirect, then you need to append  ?id[10-digit App Store ID]  to the URL. This is necessary in order to fully generate the App Links and OG tags that the Facebook scraper expects to find.  For example, if your App Store URL is  https://itunes.apple.com/us/app/my-app-name/id1234567890 , then your Custom URL value should be  https://example.com?id1234567890    If errors from the output window pertain to OG tags i.e. missing title, description etc. then examine link OG tags by appending  ?debug=true  as described on the  Integration Testing page .  If you haven't set OG tags on a per link level, then please check your Dashboard's global Social Media Display Customization settings from the  Link Settings  page.", 
            "title": "Continued OG Problems"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#known-issue-with-app-restrictions", 
            "text": "A bug exists within the Facebook system that prevents App Links from being read by the robot if you change any of these values from the defaults in your Advanced Facebook App Settings tab. Please make sure the following values are set:   Contains Alcohol is set to  No  Age Restriction is set to  Anyone (13+)  Social Discovery is set to  Yes  Country Restricted is set to  No   It has to look like this  exactly :", 
            "title": "Known issue with App Restrictions"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#ip-whitelist", 
            "text": "Because Branch has a large distribution of API servers that will be making requests to Facebook on behalf of your app, you cannot have an IP whitelist in your  Facebook advanced settings  and still have this integration work. Please remove any IPs from this setting if they are present.", 
            "title": "IP Whitelist"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#facebook-authentication-issues", 
            "text": "If you are having trouble authenticating with Facebook, there are a few things you can check.", 
            "title": "Facebook Authentication Issues"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#check-app-id-and-app-secret", 
            "text": "Be sure you have the correct App ID and App Secret. This is the number one source of issues.", 
            "title": "Check App ID and App Secret"
        }, 
        {
            "location": "/pages/app-to-app/facebook-app-invites/#embedded-app-secret", 
            "text": "If you have entered the correct App ID and Secret but are still getting issues, it may be related to how you are using your Secret. Visit the Settings   Advanced page on Facebook and check that you don't have the toggle enabled for \"Is your App Secret embedded?\" You will only have this option if you have enabled \"Native or desktop app?\" on this page.  If you have enabled \"Native or desktop app\", then your advanced options should appear like the following:", 
            "title": "Embedded App Secret"
        }, 
        {
            "location": "/pages/analytics/behavior/", 
            "text": "Analytical behavior\n\n\n\n\nWhenever a user \nclicks\n on a deep link and \nopens\n the app\n\n\nThis triggers either an \ninstall\n or an \nopen\n\n\ninstalls\n represent Branch recognizing the app_id and device_id for the first time\n\n\ninstalls\n represent new app users and the success rate of your Branch deep links\n\n\ninstalls\n do \nnot\n represent App Store downloads\n\n\nnon-Branch installs\n are installs outside of Branch deep link clicks\n\n\nopens\n are non-installs\n\n\nIf a user uninstalls and reinstalls the app, this will be an \nopen\n because Branch recognizes the device\n\n\nIf a user has the app and clicks a Branch deep link, this will be an \nopen\n because the user is not new\n\n\n\n\n\n\n\n\nDashboard pages\n\n\n\n\n\n\nQuick Links\n\n\n\n\n\n\nSources\n\n\n\n\n\n\nContent\n\n\n\n\nDashboard Content\n\n\nUpdates every 1.5 hours \n\n\nBased on the deep links which are shared (clicks which lead to open/installs)\n\n\nEach content must be meaningful unique\n\n\n$canonical_identifier\n\n\n$og_title\n\n\n$og_description\n\n\n$og_image_url\n\n\n\n\n\n\n\n\n\n\n\n\nLiveview", 
            "title": "Behavior"
        }, 
        {
            "location": "/pages/analytics/behavior/#analytical-behavior", 
            "text": "Whenever a user  clicks  on a deep link and  opens  the app  This triggers either an  install  or an  open  installs  represent Branch recognizing the app_id and device_id for the first time  installs  represent new app users and the success rate of your Branch deep links  installs  do  not  represent App Store downloads  non-Branch installs  are installs outside of Branch deep link clicks  opens  are non-installs  If a user uninstalls and reinstalls the app, this will be an  open  because Branch recognizes the device  If a user has the app and clicks a Branch deep link, this will be an  open  because the user is not new", 
            "title": "Analytical behavior"
        }, 
        {
            "location": "/pages/analytics/behavior/#dashboard-pages", 
            "text": "", 
            "title": "Dashboard pages"
        }, 
        {
            "location": "/pages/analytics/behavior/#quick-links", 
            "text": "", 
            "title": "Quick Links"
        }, 
        {
            "location": "/pages/analytics/behavior/#sources", 
            "text": "", 
            "title": "Sources"
        }, 
        {
            "location": "/pages/analytics/behavior/#content", 
            "text": "Dashboard Content  Updates every 1.5 hours   Based on the deep links which are shared (clicks which lead to open/installs)  Each content must be meaningful unique  $canonical_identifier  $og_title  $og_description  $og_image_url", 
            "title": "Content"
        }, 
        {
            "location": "/pages/analytics/behavior/#liveview", 
            "text": "", 
            "title": "Liveview"
        }, 
        {
            "location": "/pages/analytics/referrals/", 
            "text": "Implementing\n\n\n\n\n\n\nReferrer has his/her identity set.\n\n\n\n\n\n\nReferrer creates a deep link.\n\n\n\n\n\n\nReferrer shares the deep link.\n\n\n\n\n\n\nReferee clicks on the deep link.\n\n\n\n\n\n\nReferee has his/her identity set.\n\n\n\n\n\n\nReferee triggers a custom event.\n\n\n\n\n\n\nCatch the event in your Branch Rules Dashboard (\nhttps://dashboard.branch.io/referrals/rules\n) as a referral rule to assign referral points.\n\n\n\n\n\n\n\n\n\n\nTroubleshooting\n\n\n\u2013 The Referrer and Referee are connected by the deep link.\n\n\n\u2013 Referring points happen whenever the custom event occurs in the app which triggers the referral rule.\n\n\n\u2013 It is best to assign referring points on a custom event rather than Branch events (install and open) to prevent referral abuse.\n\n\n\u2013 Make sure you set the identity of both the referrer and referee to prevent anonymous users from showing up in your Branch Influencer's Dashboard (\nhttps://dashboard.branch.io/referrals/influencers\n)\n\n\n\u2013 Referrals are based on a session, not a device. If a user closes and opens the app before triggering the referral rule, then the referral points will not be delivered.\n\n\n\u2013 If your referrals are based on custom install event, then you will need to uninstall the app and simulate a Branch install to test referrals (\nhttps://dev.branch.io/getting-started/integration-testing/guide/ios/#use-debug-mode-to-simulate-fresh-installs\n)\n\n\n\n\nA rule with All acting users will trigger credits event if a referral did not happen. To only reward credits on a referral, use Referring users or Referred acting users.\n\n\n\n\n\n\n\n\nTracking referrals\n\n\n\u2013 Branch Influencer's Dashboard (\nhttps://dashboard.branch.io/referrals/influencers\n)\n\n\n\u2013 The Export Button in the Branch LiveView Dashboard (\nhttps://dashboard.branch.io/liveview/link_clicks\n)\n\n\n\u2013 Create a Webhook to send data to your server (\nhttps://dashboard.branch.io/webhook\n)\n\n\n\u2013 Request a whitelisting to our Data Export API (\nhttps://dev.branch.io/methods-endpoints/data-export-api/guide/\n)\n\n\n\n\n\n\nQuerying referrals\n\n\n\n\n\n\nQuery the events export the custom referral event that triggered the referral rule\n\n\n\n\n\n\nThe developer identity of this event is your referee\n\n\n\n\n\n\nThe session referring developer identity is your referrer", 
            "title": "Referrals"
        }, 
        {
            "location": "/pages/analytics/referrals/#implementing", 
            "text": "Referrer has his/her identity set.    Referrer creates a deep link.    Referrer shares the deep link.    Referee clicks on the deep link.    Referee has his/her identity set.    Referee triggers a custom event.    Catch the event in your Branch Rules Dashboard ( https://dashboard.branch.io/referrals/rules ) as a referral rule to assign referral points.", 
            "title": "Implementing"
        }, 
        {
            "location": "/pages/analytics/referrals/#troubleshooting", 
            "text": "\u2013 The Referrer and Referee are connected by the deep link.  \u2013 Referring points happen whenever the custom event occurs in the app which triggers the referral rule.  \u2013 It is best to assign referring points on a custom event rather than Branch events (install and open) to prevent referral abuse.  \u2013 Make sure you set the identity of both the referrer and referee to prevent anonymous users from showing up in your Branch Influencer's Dashboard ( https://dashboard.branch.io/referrals/influencers )  \u2013 Referrals are based on a session, not a device. If a user closes and opens the app before triggering the referral rule, then the referral points will not be delivered.  \u2013 If your referrals are based on custom install event, then you will need to uninstall the app and simulate a Branch install to test referrals ( https://dev.branch.io/getting-started/integration-testing/guide/ios/#use-debug-mode-to-simulate-fresh-installs )   A rule with All acting users will trigger credits event if a referral did not happen. To only reward credits on a referral, use Referring users or Referred acting users.", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/pages/analytics/referrals/#tracking-referrals", 
            "text": "\u2013 Branch Influencer's Dashboard ( https://dashboard.branch.io/referrals/influencers )  \u2013 The Export Button in the Branch LiveView Dashboard ( https://dashboard.branch.io/liveview/link_clicks )  \u2013 Create a Webhook to send data to your server ( https://dashboard.branch.io/webhook )  \u2013 Request a whitelisting to our Data Export API ( https://dev.branch.io/methods-endpoints/data-export-api/guide/ )", 
            "title": "Tracking referrals"
        }, 
        {
            "location": "/pages/analytics/referrals/#querying-referrals", 
            "text": "Query the events export the custom referral event that triggered the referral rule    The developer identity of this event is your referee    The session referring developer identity is your referrer", 
            "title": "Querying referrals"
        }, 
        {
            "location": "/pages/analytics/growth-attribution/", 
            "text": "", 
            "title": "Growth"
        }, 
        {
            "location": "/pages/analytics/user-value attribution/", 
            "text": "", 
            "title": "User Value"
        }, 
        {
            "location": "/pages/analytics/revenue-attribution/", 
            "text": "", 
            "title": "Revenue"
        }, 
        {
            "location": "/pages/exports/csv/", 
            "text": "", 
            "title": "CSV Export"
        }, 
        {
            "location": "/pages/exports/api/", 
            "text": "", 
            "title": "Export API"
        }, 
        {
            "location": "/pages/exports/webhooks/", 
            "text": "", 
            "title": "Webhooks"
        }, 
        {
            "location": "/pages/integrations/abobe-analytics/", 
            "text": "", 
            "title": "Abobe Analytics"
        }, 
        {
            "location": "/pages/integrations/adjust/", 
            "text": "", 
            "title": "Adjust"
        }, 
        {
            "location": "/pages/integrations/amplitude/", 
            "text": "", 
            "title": "Amplitude"
        }, 
        {
            "location": "/pages/integrations/appboy/", 
            "text": "", 
            "title": "AppBoy"
        }, 
        {
            "location": "/pages/integrations/google-analytics/", 
            "text": "", 
            "title": "Google Analytics"
        }, 
        {
            "location": "/pages/integrations/kochava/", 
            "text": "", 
            "title": "Kochava"
        }, 
        {
            "location": "/pages/integrations/localytics/", 
            "text": "", 
            "title": "Localytics"
        }, 
        {
            "location": "/pages/integrations/mixpanel/", 
            "text": "", 
            "title": "Mixpanel"
        }, 
        {
            "location": "/pages/integrations/tune/", 
            "text": "", 
            "title": "Tune"
        }, 
        {
            "location": "/pages/integrations/appmetrica/", 
            "text": "", 
            "title": "AppMetrica"
        }
    ]
}